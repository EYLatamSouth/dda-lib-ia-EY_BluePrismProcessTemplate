<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>BP_EY_ProcessTemplate_v2</bpr:name>
    <bpr:release-notes />
    <bpr:created>2023-02-09 17:48:10Z</bpr:created>
    <bpr:package-id>3</bpr:package-id>
    <bpr:package-name>BP_EY_ProcessTemplate_v2</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="28">
        <process id="03b66f32-1af6-40aa-a446-ca6c9cfe5b62" name="PROCESSID_processTemplateEY_v2" xmlns="http://www.blueprism.co.uk/product/process"><process name="PROCESSID_processTemplateEY_v2" version="1.0" bpversion="7.1.1.65484" narrative="" byrefcollection="true"><view><camerax>62</camerax><cameray>-365</cameray><zoom version="2">1.125</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="6a0fd76f-f946-41de-a25c-077f26b867a2" type="Normal" published="False"><name>Init All Settings</name><view><camerax>105</camerax><cameray>-1698</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="567102a0-ea3e-452b-b3ad-cdc005d270f3" type="Normal" published="False"><name>Populate Queue</name><view><camerax>-30</camerax><cameray>-491</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="eb948783-6b10-43e9-8657-286ee1d21b9f" type="Normal" published="False"><name>Send Start Email</name><view><camerax>118</camerax><cameray>50</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="5369d91a-f33b-4b55-8565-d145b541bbbf" type="Normal" published="False"><name>1 - Work Step 1</name><view><camerax>146</camerax><cameray>-54</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="f1a3ef65-0397-48f6-aba7-835b950bf617" type="Normal" published="False"><name>2 - Work Step 2</name><view><camerax>74</camerax><cameray>-96</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="13844f7e-530b-46b3-834e-c2c4993b365f" type="Normal" published="False"><name>3 - Work Step 3</name><view><camerax>62</camerax><cameray>-96</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="512363c5-8bf6-4bc0-aaf8-41b2db78a253" type="Normal" published="False"><name>Mark Item as Completed</name><view><camerax>30</camerax><cameray>-15</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="7ba524d9-28dd-474d-896c-bf4a00083664" type="Normal" published="False"><name>Mark Item As Exception</name><view><camerax>180</camerax><cameray>-751</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="7184b887-65b3-4ba8-b5de-d6fb2921ef09" type="Normal" published="False"><name>Set Data To Report</name><view><camerax>107</camerax><cameray>57</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="b8d3e64c-fa76-4a8a-a0af-31682dfb7aee" type="Normal" published="False"><name>Reset Global Data</name><view><camerax>0</camerax><cameray>-45</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="2dcbd84f-c4e5-44e3-92e6-dd23f1cee304" type="Normal" published="False"><name>Clean Work Queue</name><view><camerax>97</camerax><cameray>11</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="5989e13c-a9a8-4d67-9fea-e76fb4b13956" type="Normal" published="False"><name>Send Report</name><view><camerax>44</camerax><cameray>-157</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="53811e5c-56c3-470b-b37f-485ff27ab137" type="Normal" published="False"><name>Control Applications</name><view><camerax>-138</camerax><cameray>-5</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="2ee3acd0-4044-4779-bf0f-e2a0a608763f" type="Normal" published="False"><name>Start Up Application</name><view><camerax>49</camerax><cameray>-69</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="6867bdc8-6ddb-40d1-8b15-29e20dc544c3" type="Normal" published="False"><name>Close Down Application</name><view><camerax>-15</camerax><cameray>51</cameray><zoom version="2">1.125</zoom></view></subsheet><subsheet subsheetid="1f15f6a2-37df-465c-8b7f-cb2292377042" type="Normal" published="False"><name>Global Exception Handler</name><view><camerax>44</camerax><cameray>-171</cameray><zoom version="2">1.125</zoom></view></subsheet><stage stageid="d2ef98d0-3b7a-41d6-8c51-ff554ef047ad" name="Start" type="Start"><loginhibit onsuccess="true" /><display x="-270" y="-705" /><inputs><input type="time" name="stopAfterTime" stage="stopAfterTime" /></inputs><onsuccess>5b809d99-b5d7-4bd4-bb7b-a30f2e330fcf</onsuccess></stage><stage stageid="f83ccfcc-4e85-4c1d-8f37-4c6f52628912" name="End" type="End"><loginhibit onsuccess="true" /><display x="195" y="-705" /></stage><stage stageid="01dba98b-48d6-4caa-a4dd-24d68d32c441" name="Stage1" type="ProcessInfo"><loginhibit onsuccess="true" /><display x="-540" y="-675" w="360" h="90" /></stage><stage stageid="42d0102f-f5bf-4af9-90eb-9e3358c15e25" name="Control Applications" type="SubSheetInfo"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-630" y="-165" w="330" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fe21e13-ad6a-4bcd-b156-e99a33ba4789" name="Start" type="Start"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="application" stage="application" /><input type="text" name="applicationControl" stage="applicationControl" /><input type="text" name="connectionName" stage="connectionName" /></inputs><onsuccess>edf7c5f2-b4fd-4cea-8d37-5101fd5db3a4</onsuccess></stage><stage stageid="01e9c99c-06a4-4ebc-9982-cfccf596d8b2" name="Exception" type="Block"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-375" y="-30" w="300" h="195" /><font family="Tahoma" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="0c81a02b-e9d4-4e55-9a4c-67e044b69493" name="Recover" type="Recover"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3f9e454a-7a14-4f83-8595-7f7a6ba947c2</onsuccess></stage><stage stageid="abd58d34-f223-4d21-9cbe-5ec342a406bd" name="Retry?" type="Decision"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="0" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><breakpoint type="0"><condition></condition></breakpoint><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>8f2756ea-f7b4-4466-ba57-b1642761226b</ontrue><onfalse>dc8e6ebe-e222-4b91-87ec-3fc1134f33d4</onfalse></stage><stage stageid="2a3e3576-5d60-4948-a57a-193cc0550417" name="Re-Throw" type="Exception"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="300" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="8f2756ea-f7b4-4466-ba57-b1642761226b" name="Note8" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="0" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>391993ba-cd35-4f4a-984a-0073ea4be272</onsuccess></stage><stage stageid="2edebd17-8990-479f-9bfd-9113cf3c30b6" name="Resume" type="Resume"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="0" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>edf7c5f2-b4fd-4cea-8d37-5101fd5db3a4</onsuccess></stage><stage stageid="e7a0629a-14cb-484d-9124-d6c3f83d61db" name="Close Application" type="SubSheet"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="application" friendlyname="application" expr="[application]" /></inputs><onsuccess>5fdf3bf1-6b4f-4c1d-b016-d59c864e1ffe</onsuccess><processid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</processid></stage><stage stageid="6e5f67e3-6427-4861-97b9-7362553fb6d1" name="Start Application" type="SubSheet"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="application" friendlyname="application" expr="[application]" /><input type="text" name="connectionName" friendlyname="connectionName" expr="[connectionName]" /></inputs><onsuccess>ff3dd15b-7363-498c-b6bf-dadac6899a8c</onsuccess><processid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</processid></stage><stage stageid="e1bbabc6-0e69-444c-beb5-8938a4f6b0e4" name="Start Application?" type="Decision"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /><decision expression="Trim(Upper([applicationControl]))=&quot;START&quot;" /><ontrue>017c71a3-5f46-4eb2-95c9-f1368581487d</ontrue><onfalse>a84ea6b1-20fe-4d37-b159-b16fd5c3b9c3</onfalse></stage><stage stageid="017c71a3-5f46-4eb2-95c9-f1368581487d" name="Note10" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><narrative>Start Application</narrative><display x="-150" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>6e5f67e3-6427-4861-97b9-7362553fb6d1</onsuccess></stage><stage stageid="5fdf3bf1-6b4f-4c1d-b016-d59c864e1ffe" name="Restart?" type="Decision"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /><decision expression="(Trim(Upper([applicationControl]))=&quot;RESTART&quot;)" /><ontrue>6e5f67e3-6427-4861-97b9-7362553fb6d1</ontrue><onfalse>5ed75f8c-dacd-4304-b7a9-9604e409c5be</onfalse></stage><stage stageid="5ed75f8c-dacd-4304-b7a9-9604e409c5be" name="anchor22" type="Anchor"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ce62566b-4b15-455c-a9d7-a4db8f4f5a89</onsuccess></stage><stage stageid="ce62566b-4b15-455c-a9d7-a4db8f4f5a89" name="End7" type="End"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2b2deae3-2b3a-43b3-9085-ce29ca7efd57" name="applicationControl" type="Data"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-555" y="-30" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="558d63de-8f52-4348-a30c-f7fe2aeacd69" name="retryCounter" type="Data"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-555" y="75" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4343017d-21d2-43ee-af4e-6fdfa6a70c59" name="Input variables" type="Block"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-645" y="-105" w="180" h="120" /><font family="Segoe UI" size="10" style="Regular" color="008000" /></stage><stage stageid="edf7c5f2-b4fd-4cea-8d37-5101fd5db3a4" name="note" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><narrative>Select Application Action</narrative><display x="-300" y="-150" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>e1bbabc6-0e69-444c-beb5-8938a4f6b0e4</onsuccess></stage><stage stageid="5b809d99-b5d7-4bd4-bb7b-a30f2e330fcf" name="Init All Settings" type="SubSheet"><loginhibit onsuccess="true" /><display x="-270" y="-645" w="90" h="60" /><onsuccess>7ac47dde-3048-49d6-81dd-6ce05264c77a</onsuccess><processid>6a0fd76f-f946-41de-a25c-077f26b867a2</processid></stage><stage stageid="dbd939ba-a7d1-46d2-a5db-b23db4f36fa0" name="itemID" type="Data"><loginhibit onsuccess="true" /><display x="-450" y="-405" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="987e6620-1178-4699-8a9f-45f2a897ed24" name="itemStatus" type="Data"><loginhibit onsuccess="true" /><display x="-450" y="-375" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="062075cf-2a2f-495f-b1b7-0f989d8e3209" name="itemAttempts" type="Data"><loginhibit onsuccess="true" /><display x="-450" y="-345" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="3397aae1-b81c-4773-a253-842255bd7a2a" name="stopAfterTime" type="Data"><loginhibit onsuccess="true" /><narrative>Used by the process to decide whether to keep working or close itself down. This value can be modified from Control Room to bring a session to an early finish.</narrative><display x="-450" y="-525" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>time</datatype><initialvalue>23:59:59</initialvalue><exposure>Session</exposure><private /><alwaysinit /></stage><stage stageid="bdd3d216-f398-4077-bb99-867d4926be34" name="Global Data" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="-495" w="180" h="285" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /></stage><stage stageid="87b880ec-ded5-41e1-8cc8-29b5c3b01339" name="Got Item?" type="Decision"><loginhibit onsuccess="true" /><display x="-150" y="-360" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="([itemID] &lt;&gt; &quot;&quot; and LocalTime()&lt;[stopAfterTime])" /><ontrue>51f179ff-8dda-40cb-9fa0-10569350ea1b</ontrue><onfalse>d071f368-4baa-4cff-ac20-e2fe8f57a7b3</onfalse></stage><stage stageid="696921da-550b-47e0-a07b-293150f38b2e" name="Stop?" type="Decision"><loginhibit onsuccess="true" /><display x="195" y="-360" w="90" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /><decision expression="(IsStopRequested()) OR &#xA;(LocalTime() &gt; [stopAfterTime])" /><ontrue>0a86bdcc-944a-4be8-a271-62463581d765</ontrue><onfalse>16a2a287-b29f-4711-be84-9d96d088142d</onfalse></stage><stage stageid="7ac47dde-3048-49d6-81dd-6ce05264c77a" name="Populate Queue" type="SubSheet"><loginhibit onsuccess="true" /><display x="-270" y="-570" w="90" h="60" /><onsuccess>6ce80d6d-84af-4ced-9e8e-6f7688237c3f</onsuccess><processid>567102a0-ea3e-452b-b3ad-cdc005d270f3</processid></stage><stage stageid="155376f8-c3c6-42ac-a688-c401a0d95b91" name="itemData" type="Collection"><loginhibit onsuccess="true" /><display x="-450" y="-315" w="180" h="30" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="eda22ebd-0f61-4e1d-8222-d161fffadb82" name="Mark Item as Completed" type="SubSheet"><loginhibit onsuccess="true" /><display x="75" y="-75" w="90" h="60" /><onsuccess>2989b2af-b151-42d3-a866-1d63547d2ddf</onsuccess><processid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</processid></stage><stage stageid="32e7e493-165a-4f78-b239-6d2ef077f682" name="Recover" type="Recover"><loginhibit onsuccess="true" /><display x="-45" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a6a5cee3-ee42-4c6b-8dee-0f95efbb899a</onsuccess></stage><stage stageid="ae1605ac-883a-46b0-b6dd-f4da4fb22f2f" name="Mark Item As Exception" type="SubSheet"><loginhibit onsuccess="true" /><display x="195" y="90" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2989b2af-b151-42d3-a866-1d63547d2ddf</onsuccess><breakpoint type="0"><condition></condition></breakpoint><processid>7ba524d9-28dd-474d-896c-bf4a00083664</processid></stage><stage stageid="a6a5cee3-ee42-4c6b-8dee-0f95efbb899a" name="Get Exception Data" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="-45" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8dc06491-d047-4aad-9034-e665eb652a7b</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="8dc06491-d047-4aad-9034-e665eb652a7b" name="Resume" type="Resume"><loginhibit onsuccess="true" /><display x="75" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ae1605ac-883a-46b0-b6dd-f4da4fb22f2f</onsuccess></stage><stage stageid="14fb39b2-788a-4473-99a3-363147ee42ca" name="Work Item Exception Handler" type="Block"><loginhibit onsuccess="true" /><display x="-210" y="-330" w="225" h="390" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="d8cddece-08b1-453d-8405-66d995dfc949" name="Reset Global Data" type="SubSheetInfo"><subsheetid>b8d3e64c-fa76-4a8a-a0af-31682dfb7aee</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="-120" w="330" h="90" /></stage><stage stageid="a168ce73-5345-4c8d-b2b9-e16a03a209bd" name="Start" type="Start"><subsheetid>b8d3e64c-fa76-4a8a-a0af-31682dfb7aee</subsheetid><loginhibit onsuccess="true" /><display x="0" y="-150" /><onsuccess>ebfb6d14-7000-4942-9586-3f66aa0822aa</onsuccess></stage><stage stageid="06cfdf4e-3b51-4883-9054-bb1739cbbc25" name="End" type="End"><subsheetid>b8d3e64c-fa76-4a8a-a0af-31682dfb7aee</subsheetid><loginhibit onsuccess="true" /><display x="0" y="30" /></stage><stage stageid="b4695e54-bc6a-41f1-9243-8399731441a1" name="Reset Exception Varibles" type="MultipleCalculation"><subsheetid>b8d3e64c-fa76-4a8a-a0af-31682dfb7aee</subsheetid><loginhibit onsuccess="true" /><display x="0" y="-45" w="120" h="60" /><onsuccess>06cfdf4e-3b51-4883-9054-bb1739cbbc25</onsuccess><steps><calculation expression="&quot;&quot;" stage="exceptionDetails" /><calculation expression="&quot;&quot;" stage="exceptionType" /></steps></stage><stage stageid="73726537-b4c7-45e0-83b9-0f89e87d7992" name="Mark Item as Completed" type="SubSheetInfo"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><loginhibit onsuccess="true" /><display x="-315" y="-135" w="330" h="90" /></stage><stage stageid="0a62e5ff-ce73-4b22-b5f7-b57220968245" name="Start" type="Start"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-165" /><onsuccess>5117333f-0515-453c-b153-b3c3acbf716f</onsuccess></stage><stage stageid="ff5137c8-f14c-4c1a-ad12-6dd979730dc9" name="End" type="End"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><loginhibit onsuccess="true" /><display x="15" y="195" /></stage><stage stageid="658566de-ba8e-4c17-aeaa-53a0b23b29cc" name="Set status" type="Action"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><loginhibit onsuccess="true" /><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="15" y="-75" w="120" h="30" /><inputs><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="[queueStatus]" /><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /></inputs><onsuccess>aca12e07-6a71-4b6c-a02d-606be05ba913</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="c16cf0c1-3e8e-4ee7-9d01-c8565a54ed21" name="Mark Completed" type="Action"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><loginhibit onsuccess="true" /><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /></inputs><onsuccess>c3532000-69b2-4077-a653-f3eebefda94f</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="a3f06029-e0eb-4892-8678-19d336bc13dc" name="Mark Item As Exception" type="SubSheetInfo"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="-315" y="-1050" w="330" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="38f3e63c-21df-4220-8e6b-ab07c97068ca" name="Start" type="Start"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-1080" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bb3c71b7-3043-4e27-bcad-719e94a5d4ce</onsuccess></stage><stage stageid="e4f4ee15-35ae-4910-b8c0-be5f2992500b" name="System Exception?" type="Decision"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-840" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([exceptionType]) = &quot;system exception&quot; OR &#xA;Lower([exceptionType]) = &quot;internal&quot;" /><ontrue>16684236-2a5a-4b94-85ea-dcd7c9801c9d</ontrue><onfalse>8ff87bc4-9c5a-4755-b806-d5f7f09d840d</onfalse></stage><stage stageid="1fc24da6-dc97-473a-b77d-40a3fe832546" name="Same as Previous Exception?" type="Decision"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="180" y="-315" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[previousExceptionDetail] = [exceptionDetails]" /><ontrue>8ff38c41-7a98-4fce-a105-b0efd986615b</ontrue><onfalse>84dc7ff1-ec93-44b1-9fa2-dd18fc10b078</onfalse></stage><stage stageid="07ca2ef9-e72e-4c0c-aabe-126576638c09" name="consecutiveExceptionCount++" type="Calculation"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="345" y="-270" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5032e394-670e-4ea0-b0a7-3910148e7c7b</onsuccess><calculation expression="[consecutiveExceptionCount] + 1" stage="consecutiveExceptionCount" /></stage><stage stageid="5032e394-670e-4ea0-b0a7-3910148e7c7b" name="Limit?" type="Decision"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="345" y="-225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[consecutiveExceptionCount]&gt;=[consecutiveExceptionLimit]" /><ontrue>9f909eca-1298-43d8-8923-21d27ec83184</ontrue><onfalse>c0f33b83-34e3-4fb7-9adc-f8e6268c808a</onfalse></stage><stage stageid="5d96827f-e37d-45b9-a608-bc959c872174" name="TERMINATE" type="Exception"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="495" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="System Excetion" detail="[consecutiveExceptionLimit] &amp; &quot; consecutive incidents of &quot; &amp; [exceptionType] &amp; &quot;: &quot; &amp; [exceptionDetails]" /></stage><stage stageid="9f909eca-1298-43d8-8923-21d27ec83184" name="Stop the process because consecutive exceptions are occuring" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Consecutive excetiption limit reached
</narrative><display x="495" y="-225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>240e4bae-2f61-42f9-85ce-cfe31699bcf7</onsuccess></stage><stage stageid="84dc7ff1-ec93-44b1-9fa2-dd18fc10b078" name="Note5" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>New Exception was throw</narrative><display x="180" y="-270" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>fbd5d1a0-aa8c-4213-9d8e-6c3b2c07a0e1</onsuccess></stage><stage stageid="c0f33b83-34e3-4fb7-9adc-f8e6268c808a" name="Note5" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Continue with next item</narrative><display x="345" y="-180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>4378e855-e5e3-4279-b683-63dc1ee7f100</onsuccess></stage><stage stageid="ea0c0bca-7f07-45e8-8c17-1aca4082c299" name="System Unavailable?" type="Decision"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-990" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Lower([exceptionType]) = &quot;system unavailable exception&quot; OR &#xA;Lower([exceptionType]) = &quot;login system exception&quot;" /><ontrue>c05c9068-38a1-447c-b591-69fb35056705</ontrue><onfalse>7aa4f298-89c2-4a3d-92b0-73e3d835014d</onfalse></stage><stage stageid="a7717d81-9f38-418c-a694-ba873d438477" name="Release Item" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Marks the item as deferred. It is unlocked, but it will not be made available for processing again until the specified time.

The attempts count for the item is reset to zero.</narrative><display x="330" y="-990" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to defer" expr="[itemID]" /><input type="datetime" name="Until" narrative="When to resume processing the case" expr="Now() + LocalTime() - UTCTime()" /></inputs><onsuccess>e1f1f6a7-d118-43be-ade3-a35381d85066</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Defer" /></stage><stage stageid="e1f1f6a7-d118-43be-ade3-a35381d85066" name="TERMINATE" type="Exception"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="480" y="-990" w="120" h="30" /><font family="Tahoma" size="10" style="Bold" color="FF0000" /><exception type="System Unavailable Exception" detail="&quot;System is unavailable&quot;" /></stage><stage stageid="bb3c71b7-3043-4e27-bcad-719e94a5d4ce" name="Note4" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Verify if System not working or can not log in</narrative><display x="15" y="-1035" w="270" h="30" /><font family="Tahoma" size="10" style="Bold" color="800080" /><onsuccess>ea0c0bca-7f07-45e8-8c17-1aca4082c299</onsuccess></stage><stage stageid="30bd8c4e-6d0e-4350-a407-be9306bd5d07" name="Note4" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Verify type of exception</narrative><display x="15" y="-885" w="270" h="30" /><font family="Tahoma" size="10" style="Bold" color="800080" /><onsuccess>e4f4ee15-35ae-4910-b8c0-be5f2992500b</onsuccess></stage><stage stageid="8ff87bc4-9c5a-4755-b806-d5f7f09d840d" name="note" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Business Exception</narrative><display x="15" y="-795" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>7da5aec2-71d2-4d7d-87f3-89470957041a</onsuccess></stage><stage stageid="16684236-2a5a-4b94-85ea-dcd7c9801c9d" name="note" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>System or Internal Exception</narrative><display x="180" y="-840" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>0a4648fd-1acf-4f72-a8a3-15d852dab7e2</onsuccess></stage><stage stageid="e8f43603-f31d-403f-9b8d-07c163e01b4b" name="Note4" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Verify if the exception happened before</narrative><display x="180" y="-360" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>1fc24da6-dc97-473a-b77d-40a3fe832546</onsuccess></stage><stage stageid="60ae7d82-d358-45ea-a6cb-5bc57d87efc8" name="Reset Global Data" type="SubSheet"><loginhibit onsuccess="true" /><display x="195" y="-225" w="90" h="60" /><onsuccess>696921da-550b-47e0-a07b-293150f38b2e</onsuccess><processid>b8d3e64c-fa76-4a8a-a0af-31682dfb7aee</processid></stage><stage stageid="8d7c42ea-bdfa-4c20-89ae-e18d90ab3d64" name="Clean Work Queue" type="SubSheet"><loginhibit onsuccess="true" /><display x="195" y="-495" w="90" h="60" /><inputs><input type="text" name="Exception Reason" friendlyname="Exception Reason" expr="[endNotProcessingReason]" /><input type="flag" name="First Execution" friendlyname="First Execution" expr="False" /></inputs><onsuccess>50ac0aa8-0502-4d24-9233-db5afee01ac6</onsuccess><processid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</processid></stage><stage stageid="16a2a287-b29f-4711-be84-9d96d088142d" name="Get Next Item" type="Action"><loginhibit onsuccess="true" /><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="-30" y="-360" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[queueName]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="itemID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="itemData" /><output type="text" name="Status" narrative="The status of the item." stage="itemStatus" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="itemAttempts" /></outputs><onsuccess>87b880ec-ded5-41e1-8cc8-29b5c3b01339</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="64035abd-7206-43c8-b765-9d50e8c43cea" name="1 - Work Step 1" type="SubSheet"><display x="-45" y="-225" w="90" h="60" /><onsuccess>29436dfe-1947-4e58-872b-c59d3a50b479</onsuccess><processid>5369d91a-f33b-4b55-8565-d145b541bbbf</processid></stage><stage stageid="4a34974e-66cd-48f9-97ba-b033abe8902f" name="Tag Business Exception" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="15" y="-480" w="120" h="30" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[itemID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;Business Exception&quot;" /></inputs><onsuccess>c13bdc48-1f97-41e9-a601-36c63ccff94c</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="fbd5d1a0-aa8c-4213-9d8e-6c3b2c07a0e1" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="15" y="-270" w="120" h="60" /><onsuccess>4378e855-e5e3-4279-b683-63dc1ee7f100</onsuccess><steps><calculation expression="&quot;&quot;" stage="previousExceptionDetail" /><calculation expression="0" stage="consecutiveExceptionCount" /></steps></stage><stage stageid="c13bdc48-1f97-41e9-a601-36c63ccff94c" name="Mark Exception" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="-420" w="120" h="30" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[exceptionDetails]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="False" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="newItemID" /></outputs><onsuccess>fbd5d1a0-aa8c-4213-9d8e-6c3b2c07a0e1</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="5fafdcc7-247e-4d8f-9649-312a0127d33f" name="End1" type="End"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="15" y="-120" /></stage><stage stageid="1538d2c1-e232-4c0a-8639-208ee585bb17" name="Mark Exception" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="180" y="-480" w="120" h="30" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[exceptionDetails]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="True" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="newItemID" /></outputs><onsuccess>dc53ba06-f501-4fdb-8993-b4b784e56b73</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="0a4648fd-1acf-4f72-a8a3-15d852dab7e2" name="Tag System Exception" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><narrative>Adds a tag to a work queue item</narrative><display x="180" y="-795" w="120" h="30" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to add the tag to" expr="[itemID]" /><input type="text" name="Tag" narrative="The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="&quot;System Exception&quot;" /></inputs><onsuccess>86edc2de-7b87-4105-b84a-98d4a7685c5a</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Tag Item" /></stage><stage stageid="dc53ba06-f501-4fdb-8993-b4b784e56b73" name="Capture ScreenShot" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="180" y="-420" w="120" h="30" /><inputs><input type="text" name="Save Imagem Path" friendlyname="Save Imagem Path" narrative="Full path with name (without extension)" expr="[pathFolderScreenshots] &amp;&quot;\&quot;&amp; FormatDateTime(Now() + LocalTime() - UTCTime(), &quot;yyyyMMddHHmmss&quot;) &amp; [itemData.ID]" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" stage="" /><output type="text" name="message" friendlyname="message" stage="" /></outputs><onsuccess>e8f43603-f31d-403f-9b8d-07c163e01b4b</onsuccess><resource object="Utility - Screenshot" action="GetScreenShot" /></stage><stage stageid="4b49fd18-293a-4a21-aa1d-7d658ca97b8d" name="Exception" type="Block"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-450" w="285" h="60" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="029ba431-9ff8-4b00-9ec1-30ca0b2af001" name="Recover" type="Recover"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="330" y="-420" /><onsuccess>9c43f3de-0f19-4bd1-ba3b-1ebc639362a8</onsuccess></stage><stage stageid="fbfb047d-65cc-48b9-97ae-d61099c4fd21" name="Resume" type="Resume"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="495" y="-360" /><onsuccess>e8f43603-f31d-403f-9b8d-07c163e01b4b</onsuccess></stage><stage stageid="9c43f3de-0f19-4bd1-ba3b-1ebc639362a8" name="Note4" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Unable to take screenshot</narrative><display x="495" y="-420" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>fbfb047d-65cc-48b9-97ae-d61099c4fd21</onsuccess></stage><stage stageid="4378e855-e5e3-4279-b683-63dc1ee7f100" name="Control Applications (RESTART Application1)" type="SubSheet"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="15" y="-180" w="120" h="30" /><inputs><input type="text" name="applicationControl" expr="&quot;RESTART&quot;" /><input type="text" name="application" expr="&quot;Application1&quot;" /><input type="text" name="connectionName" friendlyname="connectionName" expr="" /></inputs><onsuccess>5fafdcc7-247e-4d8f-9649-312a0127d33f</onsuccess><processid>53811e5c-56c3-470b-b37f-485ff27ab137</processid></stage><stage stageid="240e4bae-2f61-42f9-85ce-cfe31699bcf7" name="Control Applications (CLOSE Application1)" type="SubSheet"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="495" y="-180" w="120" h="30" /><inputs><input type="text" name="applicationControl" expr="&quot;CLOSE&quot;" /><input type="text" name="application" expr="&quot;Application1&quot;" /><input type="text" name="connectionName" friendlyname="connectionName" expr="" /></inputs><onsuccess>5d96827f-e37d-45b9-a608-bc959c872174</onsuccess><processid>53811e5c-56c3-470b-b37f-485ff27ab137</processid></stage><stage stageid="73b1926d-fe43-4044-b517-c58917853189" name="note" type="Note"><loginhibit onsuccess="true" /><narrative>STOP AFTER TIME</narrative><display x="-450" y="-570" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="cf63a1fd-1045-4295-8fbf-829251b178ba" name="note" type="Note"><loginhibit onsuccess="true" /><narrative>QUEUE VARIABLES</narrative><display x="-450" y="-450" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="c3532000-69b2-4077-a653-f3eebefda94f" name="Reset Consecutive Exception Indicators" type="MultipleCalculation"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><display x="15" y="120" w="120" h="60" /><onsuccess>ff5137c8-f14c-4c1a-ad12-6dd979730dc9</onsuccess><steps><calculation expression="&quot;&quot;" stage="previousExceptionDetail" /><calculation expression="0" stage="consecutiveExceptionCount" /></steps></stage><stage stageid="5117333f-0515-453c-b153-b3c3acbf716f" name="note" type="Note"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><loginhibit onsuccess="true" /><narrative>Mark item as Completed</narrative><display x="15" y="-120" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>658566de-ba8e-4c17-aeaa-53a0b23b29cc</onsuccess></stage><stage stageid="99402c14-f1ec-4522-aa7c-fbf7f8e5c04d" name="Local Variables" type="Block"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-645" y="30" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="016cd766-191d-4a06-8b47-0c05aefdcdab" name="previousExceptionDetail" type="Data"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="-240" y="-780" w="180" h="30" /><datatype>text</datatype><initialvalue /></stage><stage stageid="77e8bca6-bd78-4427-91eb-08a40f967c72" name="consecutiveExceptionCount" type="Data"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="-240" y="-840" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue></stage><stage stageid="9ffd1a90-5045-4268-b328-1f94110b95e2" name="consecutiveExceptionLimit" type="Data"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="-240" y="-900" w="180" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="c42adcf4-b994-4b67-b254-c984e648b24f" name="newItemID" type="Data"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="-240" y="-810" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fedff663-e717-438f-b07c-bf790dee2cec" name="Local Variables" type="Block"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="-330" y="-870" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="970cec44-fdf5-43e3-9ded-102c0c1d03a5" name="Setting Variables" type="Block"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="-990" w="180" h="105" /></stage><stage stageid="ebfb6d14-7000-4942-9586-3f66aa0822aa" name="Note4" type="Note"><subsheetid>b8d3e64c-fa76-4a8a-a0af-31682dfb7aee</subsheetid><loginhibit onsuccess="true" /><narrative>Reset Global Data</narrative><display x="0" y="-105" w="270" h="30" /><font family="Tahoma" size="10" style="Bold" color="800080" /><onsuccess>b4695e54-bc6a-41f1-9243-8399731441a1</onsuccess></stage><stage stageid="50ac0aa8-0502-4d24-9233-db5afee01ac6" name="Control Applications (CLOSE Application1)" type="SubSheet"><display x="195" y="-570" w="90" h="60" /><inputs><input type="text" name="applicationControl" expr="&quot;CLOSE&quot;" /><input type="text" name="application" expr="&quot;Application1&quot;" /><input type="text" name="connectionName" friendlyname="connectionName" expr="" /></inputs><onsuccess>5069fab2-169f-4046-b4cf-a39240225bae</onsuccess><processid>53811e5c-56c3-470b-b37f-485ff27ab137</processid></stage><stage stageid="e8e51176-e2f4-4646-b57c-8b358dcc1439" name="application" type="Data"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-555" y="-60" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a86bdcc-944a-4be8-a271-62463581d765" name="Note25" type="Note"><narrative>Stop requested.</narrative><display x="195" y="-420" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>8d7c42ea-bdfa-4c20-89ae-e18d90ab3d64</onsuccess></stage><stage stageid="fb74d4e8-effc-429e-ac3f-bc9ea7181efb" name="note" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>SETTINGS</narrative><display x="-240" y="-945" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="f782aa6e-93e2-4b30-80a8-e1583a3e4b1f" name="Settings Variables" type="Block"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><display x="-330" y="-75" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="39db1510-e046-419a-8d2b-b249881407a0" name="queueStatus" type="Data"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><display x="-240" y="15" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Completed</initialvalue><private /><alwaysinit /></stage><stage stageid="b057b047-42cf-4f0f-84d1-39eca16fdb0d" name="note" type="Note"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><loginhibit onsuccess="true" /><narrative>QUEUE STATUS</narrative><display x="-240" y="-30" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="1ff05827-082a-4e84-a34a-a618356ef75b" name="Update Queue Item" type="Action"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="15" y="15" w="120" h="30" /><inputs><input type="collection" name="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[itemData]" /><input type="text" name="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[itemID]" /></inputs><onsuccess>c16cf0c1-3e8e-4ee7-9d01-c8565a54ed21</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="aca12e07-6a71-4b6c-a02d-606be05ba913" name="Update Items status" type="MultipleCalculation"><subsheetid>512363c5-8bf6-4bc0-aaf8-41b2db78a253</subsheetid><display x="15" y="-30" w="120" h="30" /><onsuccess>1ff05827-082a-4e84-a34a-a618356ef75b</onsuccess><steps><calculation expression="&quot;Finalizado&quot;" stage="itemData.status" /><calculation expression="[itemAttempts]" stage="itemData.attempt" /></steps></stage><stage stageid="7da5aec2-71d2-4d7d-87f3-89470957041a" name="Update Item status" type="MultipleCalculation"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="15" y="-750" w="120" h="30" /><onsuccess>dd01b19c-7873-4fde-b8d4-02357e73038a</onsuccess><steps /></stage><stage stageid="dd01b19c-7873-4fde-b8d4-02357e73038a" name="Update Queue Item" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="15" y="-705" w="120" h="30" /><inputs><input type="collection" name="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[itemData]" /><input type="text" name="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[itemID]" /></inputs><onsuccess>4a34974e-66cd-48f9-97ba-b033abe8902f</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="86edc2de-7b87-4105-b84a-98d4a7685c5a" name="Last Processing Attempt?" type="Decision"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="180" y="-750" w="120" h="30" /><decision expression="[itemAttempts] = ([maximumQueueAttempts] - 1)" /><ontrue>af615a14-deb4-4bce-8dc8-850f93875fa2</ontrue><onfalse>8de508a8-cb32-4198-8ed2-6127f56aa569</onfalse></stage><stage stageid="af615a14-deb4-4bce-8dc8-850f93875fa2" name="note" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Once the item will not be retried, aditional information is required.</narrative><display x="330" y="-750" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>a2fa7d4a-5a94-458e-a6be-d61be4706bee</onsuccess></stage><stage stageid="8de508a8-cb32-4198-8ed2-6127f56aa569" name="note" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Once the item will be retried, aditional information is not required.</narrative><display x="180" y="-705" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>1538d2c1-e232-4c0a-8639-208ee585bb17</onsuccess></stage><stage stageid="720c10e8-47bb-4dec-a9cc-d9538f0d361f" name="Update Queue Item" type="Action"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="330" y="-480" w="120" h="30" /><inputs><input type="collection" name="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[itemData]" /><input type="text" name="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[itemID]" /></inputs><onsuccess>1538d2c1-e232-4c0a-8639-208ee585bb17</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="e8ae4e58-3693-4e46-9682-58527e7e7759" name="Clean Work Queue" type="SubSheetInfo"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="-315" y="-270" w="330" h="90" /></stage><stage stageid="e46cfab6-5f90-4558-9ca4-0a99f9bfbff0" name="Start" type="Start"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-300" /><inputs><input type="text" name="Exception Reason" stage="notProcessingReason" /><input type="flag" name="First Execution" stage="firstExecution" /></inputs><onsuccess>fa0568ef-aa12-4f42-a70e-cca385e1391c</onsuccess></stage><stage stageid="462db9f2-b3df-4192-bf7a-c3178b385a8e" name="Local Variables" type="Block"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="15" w="180" h="195" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="fa0568ef-aa12-4f42-a70e-cca385e1391c" name="note" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>Clear Work Queue</narrative><display x="15" y="-255" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>119175d1-245e-42f5-a544-cc2e873a05c6</onsuccess></stage><stage stageid="119175d1-245e-42f5-a544-cc2e873a05c6" name="Get Next Item" type="Action"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="15" y="-210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[queueName]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="itemID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="itemData" /><output type="text" name="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="attempts" /></outputs><onsuccess>8998af7f-7970-420a-9319-8153761da93e</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="198960e8-965a-4fca-b46e-f204b2cebf93" name="attempts" type="Data"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="-240" y="105" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a79465b-7a21-448b-ad43-ea88d934cc0f" name="note" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>REPORT VARIABLES</narrative><display x="-240" y="60" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="8998af7f-7970-420a-9319-8153761da93e" name="Got Item?" type="Decision"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[itemID] &lt;&gt; &quot;&quot;" /><ontrue>e6e0ecc1-77e1-4d0f-bc12-6cf52a86ed7f</ontrue><onfalse>b843ba1d-817d-41c2-a7ea-fe101b305f8d</onfalse></stage><stage stageid="e6e0ecc1-77e1-4d0f-bc12-6cf52a86ed7f" name="Note19" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><narrative>There are items to be cleared.</narrative><display x="15" y="-120" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>38e61838-0236-4081-8379-6e2a4f3a60b6</onsuccess></stage><stage stageid="b843ba1d-817d-41c2-a7ea-fe101b305f8d" name="Note19" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><narrative>The queue is empty</narrative><display x="255" y="-165" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>cc708736-fdc9-4627-a544-73e930ba5802</onsuccess></stage><stage stageid="31b240fd-9a26-4b5a-a8a8-d3ac16caccdd" name="Recover" type="Recover"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="15" y="210" /><onsuccess>20f6f979-23d9-410b-b43b-289c21ba8a05</onsuccess></stage><stage stageid="2729cbc2-b269-411e-96f9-ddd007c11398" name="Retry?" type="Decision"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="15" y="315" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><breakpoint type="0"><condition></condition></breakpoint><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>dbbc6f50-9c91-4cd7-809c-d17a419f04e7</ontrue><onfalse>c71e9d1b-c380-485e-9767-a3674c312917</onfalse></stage><stage stageid="1705c9eb-9750-489c-9554-0b7a6262863d" name="Re-Throw" type="Exception"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="15" y="405" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="4017df0b-6b1b-461d-b700-2f22033e05c6" name="Resume" type="Resume"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="165" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e036eba8-2fee-4e9d-8ba1-e216686aaaa5</onsuccess></stage><stage stageid="85e872a3-6cf2-41eb-8342-5f0611363fbe" name="Wait" type="Action"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="165" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>47688d74-7469-465e-9674-94910d7a5017</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="c483c551-e5f0-4640-9361-277324675ff6" name="retryCounter" type="Data"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="195" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e036eba8-2fee-4e9d-8ba1-e216686aaaa5" name="retryCounter ++" type="Calculation"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="165" y="165" w="120" h="30" /><onsuccess>85e872a3-6cf2-41eb-8342-5f0611363fbe</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="6fed7f70-1d72-40b0-90af-6b8c08641735" name="note" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>RETRY VARIABLES</narrative><display x="-240" y="150" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="b0dfcb07-9ad2-40e5-a045-cea695571ad2" name="Exception" type="Block"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="-60" y="90" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8f8cb420-86dd-45ac-9c6b-e1da2702d3ed" name="Anchor5" type="Anchor"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="-90" y="120" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>fe19feab-0afd-4ebf-a99a-cb3c2d23f71b</onsuccess></stage><stage stageid="fe19feab-0afd-4ebf-a99a-cb3c2d23f71b" name="Anchor34" type="Anchor"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="-90" y="-210" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>119175d1-245e-42f5-a544-cc2e873a05c6</onsuccess></stage><stage stageid="9cda423e-c421-4188-aaa6-59d3c4661648" name="Setting Variables" type="Block"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="-210" w="180" h="105" /></stage><stage stageid="38e61838-0236-4081-8379-6e2a4f3a60b6" name="Set Item Results" type="MultipleCalculation"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="15" y="-75" w="120" h="30" /><onsuccess>ea1295dd-4af0-4c36-9e04-e2b86311eb20</onsuccess><steps><calculation expression="&quot;Não executado&quot;" stage="itemData.status" /><calculation expression="&quot;NÃO&quot;" stage="itemData.reportToBU" /><calculation expression="[notProcessingReason]" stage="itemData.results" /><calculation expression="[attempts]" stage="itemData.attempt" /><calculation expression="0" stage="retryCounter" /></steps></stage><stage stageid="ea1295dd-4af0-4c36-9e04-e2b86311eb20" name="Update Queue Item" type="Action"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="15" y="-30" w="120" h="30" /><inputs><input type="collection" name="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[itemData]" /><input type="text" name="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[itemID]" /></inputs><onsuccess>de5b11f8-96a8-43ec-b33d-2ec5499f4ecd</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="6c323296-8b25-477e-8359-64e651953267" name="Send Report" type="SubSheetInfo"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="-480" y="-435" w="330" h="90" /></stage><stage stageid="ab17f0ec-13eb-465c-a7a9-ede4bc00fa4b" name="Start" type="Start"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="15" y="-465" /><onsuccess>7f05e01c-69a0-40a4-b103-5df1c240033c</onsuccess></stage><stage stageid="fcad3225-9616-40ee-ac8e-a446be66253b" name="End" type="End"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="15" y="1095" /></stage><stage stageid="4e987454-f097-4d88-82ca-2e8079069956" name="note" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Save Report</narrative><display x="15" y="-270" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>b845a508-2dc0-412a-bbfe-c0e3fdfc5eba</onsuccess></stage><stage stageid="d8783965-9254-4cbd-af10-5d1a1540787d" name="Kill Excel" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="255" y="195" w="120" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="&quot;EXCEL&quot;" /></inputs><onsuccess>f47b6c0f-4ee5-46d8-94b5-4cfd425ca2ef</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="0a649034-9011-4a42-a94d-59a8fea2acc3" name="excelHandler" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="-405" y="-45" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29ee799c-399d-44bb-b5fc-0ffd0d4b32da" name="workbookName" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="-405" y="-15" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="510f18ec-3522-4272-afed-fefd5c682f74" name="Write Collection" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="195" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection containing the data which should be written to the worksheet." expr="[reportCollection]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." expr="[workbookName]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." expr="[worksheetName]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference at which the collection should be written." expr="[cellReferenceToWrite]" /><input type="flag" name="Include Column Names" friendlyname="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." expr="False" /></inputs><onsuccess>892ad566-7e32-4946-8dc7-a19b9b0630aa</onsuccess><resource object="MS Excel VBO" action="Write Collection" /></stage><stage stageid="eae7a82a-7788-48a0-bb2e-4a17314f5e80" name="Excel Exception Handler" type="Block"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="-60" y="-15" w="240" h="465" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="87e6d4a3-2b39-4e60-b929-84e1bca99f4e" name="Recover" type="Recover"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="135" y="420" /><onsuccess>5f9a0d17-86b2-40e0-8054-81b5e7516f18</onsuccess></stage><stage stageid="391c2417-56d1-4ca6-9475-cba926efa9d7" name="Retry?" type="Decision"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="255" y="375" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><breakpoint type="0"><condition></condition></breakpoint><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>ae372aef-7dab-471a-9d76-d9704ee76130</ontrue><onfalse>47608233-7aa1-493f-9b00-95944c17eb42</onfalse></stage><stage stageid="56700d5a-6e49-4f91-982d-29bc5401ebb5" name="Re-Throw" type="Exception"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="555" y="375" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="e12dbe64-4d58-4fcd-ae5c-02dd07e5631b" name="Resume" type="Resume"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="255" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a15711ae-2707-4dfe-aa93-5110e1bcfc7f</onsuccess></stage><stage stageid="f47b6c0f-4ee5-46d8-94b5-4cfd425ca2ef" name="Wait" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>48d42fd9-6168-47a1-bc44-05146cbc997e</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="aaef8f08-3609-4a87-b448-da8c1b3d2fda" name="retryCounter" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="75" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a15711ae-2707-4dfe-aa93-5110e1bcfc7f" name="retryCounter++" type="Calculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="255" y="240" w="120" h="30" /><onsuccess>d8783965-9254-4cbd-af10-5d1a1540787d</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="f3648924-f32e-4b92-8aed-713ac57b25b6" name="Setting Variables" type="Block"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-495" y="-375" w="180" h="225" /></stage><stage stageid="1e8df60e-2a49-4c61-9d90-a2a348f174c9" name="Local Variables" type="Block"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-495" y="-135" w="180" h="375" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="69fa1169-92ea-44cc-a440-5ef6f9d3600e" name="cellReferenceToWrite" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="-285" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">H17</initialvalue><private /><alwaysinit /></stage><stage stageid="b579158a-564c-4886-9cb7-a82185feaaec" name="worksheetName" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="-255" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">RELATORIO</initialvalue><private /><alwaysinit /></stage><stage stageid="b153e3ce-ec1e-4c60-b125-6bdfa576e5f2" name="note" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>REPORT SETTING VARIABLES</narrative><display x="-405" y="-330" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="ba031c05-8850-4fdb-937d-413c0d96d441" name="note" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>RETRY VARIABLES</narrative><display x="-405" y="30" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="8018cc23-536c-4194-9b74-bef57edc774e" name="note" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>EXCEL VARIABLES</narrative><display x="-405" y="-90" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="b845a508-2dc0-412a-bbfe-c0e3fdfc5eba" name="Note17" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>Get Report Data From Database</narrative><display x="15" y="-225" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>2539a03f-086b-4afa-b54e-041968534189</onsuccess></stage><stage stageid="2fd62976-6959-44b2-bd8b-e1e3174fda2f" name="Note17" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>Write Data to Report</narrative><display x="15" y="-135" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>2926cb3a-9973-4674-8da9-80cdaf0144f0</onsuccess></stage><stage stageid="5069fab2-169f-4046-b4cf-a39240225bae" name="Send Report" type="SubSheet"><display x="195" y="-645" w="90" h="60" /><onsuccess>f83ccfcc-4e85-4c1d-8f37-4c6f52628912</onsuccess><processid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</processid></stage><stage stageid="7f4cdfb1-2b8f-4334-991d-7bc51a3c72c7" name="Note9" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><narrative>List of available Applications:

- Application1
- Application2</narrative><display x="-720" y="-60" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="1c6f64b1-9d52-4c1e-8d2d-2f2e88bcbcca" name="Wait" type="Action"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="0" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>2edebd17-8990-479f-9bfd-9113cf3c30b6</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="dc8e6ebe-e222-4b91-87ec-3fc1134f33d4" name="Note8" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="150" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>2a3e3576-5d60-4948-a57a-193cc0550417</onsuccess></stage><stage stageid="a84ea6b1-20fe-4d37-b159-b16fd5c3b9c3" name="Note10" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><narrative>Restart or close Application.</narrative><display x="-300" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>e7a0629a-14cb-484d-9124-d6c3f83d61db</onsuccess></stage><stage stageid="51f179ff-8dda-40cb-9fa0-10569350ea1b" name="Which Step?" type="ChoiceStart"><display x="-150" y="-285" w="90" h="30" /><groupid>6a6b6002-7448-4cba-ac66-107845774802</groupid><choices><choice expression="[itemStatus] = &quot;&quot;"><name>Step 1/3</name><distance>60</distance><ontrue>64035abd-7206-43c8-b765-9d50e8c43cea</ontrue></choice><choice expression="[itemStatus] = [queueStatus1]"><name>Step 2/3</name><distance>135</distance><ontrue>29436dfe-1947-4e58-872b-c59d3a50b479</ontrue></choice><choice expression="[itemStatus] = [queueStatus2]"><name>Step 3/3</name><distance>210</distance><ontrue>301b4cac-baf7-4849-ad68-9945f1ea2544</ontrue></choice></choices></stage><stage stageid="00d27af6-10b4-4cf1-be2c-92b977a0c73e" name="Otherwise" type="ChoiceEnd"><display x="-150" y="-15" w="90" h="30" /><onsuccess>bbb5406c-6770-4cff-ae22-0517480ead17</onsuccess><groupid>6a6b6002-7448-4cba-ac66-107845774802</groupid></stage><stage stageid="bbb5406c-6770-4cff-ae22-0517480ead17" name="BE: Non Existent Step" type="Exception"><display x="-150" y="30" w="90" h="30" /><exception type="Business Exception" detail="&quot;BE: item status (&quot;&amp; [itemStatus] &amp; &quot;) Non existent in the decision &quot;&quot;Which Step&quot;&quot; at Main Page&quot;" /></stage><stage stageid="29436dfe-1947-4e58-872b-c59d3a50b479" name="2 - Work Step 2" type="SubSheet"><display x="-45" y="-150" w="90" h="60" /><onsuccess>301b4cac-baf7-4849-ad68-9945f1ea2544</onsuccess><processid>f1a3ef65-0397-48f6-aba7-835b950bf617</processid></stage><stage stageid="cc708736-fdc9-4627-a544-73e930ba5802" name="Anchor14" type="Anchor"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="255" y="450" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>1c8e0d18-3235-4a4b-8efc-4770c312631e</onsuccess></stage><stage stageid="c05c9068-38a1-447c-b591-69fb35056705" name="note" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Application unavailable, the automation must stop.</narrative><display x="180" y="-990" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>a7717d81-9f38-418c-a694-ba873d438477</onsuccess></stage><stage stageid="7aa4f298-89c2-4a3d-92b0-73e3d835014d" name="note" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Target Application is still active and available.</narrative><display x="15" y="-945" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>30bd8c4e-6d0e-4350-a407-be9306bd5d07</onsuccess></stage><stage stageid="8ff38c41-7a98-4fce-a105-b0efd986615b" name="Note5" type="Note"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><narrative>Current Exception is the Same as last Exception</narrative><display x="345" y="-315" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>07ca2ef9-e72e-4c0c-aabe-126576638c09</onsuccess></stage><stage stageid="6b22f608-cce1-4ab3-8a3d-5b5addf7367d" name="note" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>GENERAL SETTINGS</narrative><display x="-240" y="-165" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="dbbc6f50-9c91-4cd7-809c-d17a419f04e7" name="Note8" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="165" y="315" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>4017df0b-6b1b-461d-b700-2f22033e05c6</onsuccess></stage><stage stageid="c71e9d1b-c380-485e-9767-a3674c312917" name="Note8" type="Note"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="15" y="360" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>1705c9eb-9750-489c-9554-0b7a6262863d</onsuccess></stage><stage stageid="c594ce0b-404e-4eee-9c52-7f9df0eb0222" name="Mark Completed" type="Action"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="60" w="120" h="30" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /></inputs><onsuccess>47688d74-7469-465e-9674-94910d7a5017</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="2539a03f-086b-4afa-b54e-041968534189" name="Note11" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>Get Report Data
(Collection/DB/Excel/Access)</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /><onsuccess>2fd62976-6959-44b2-bd8b-e1e3174fda2f</onsuccess></stage><stage stageid="ae372aef-7dab-471a-9d76-d9704ee76130" name="Note8" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="255" y="330" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>e12dbe64-4d58-4fcd-ae5c-02dd07e5631b</onsuccess></stage><stage stageid="47608233-7aa1-493f-9b00-95944c17eb42" name="Note8" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="405" y="375" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>56700d5a-6e49-4f91-982d-29bc5401ebb5</onsuccess></stage><stage stageid="03812a40-067f-4e20-af98-4dee7d492920" name="note" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>GENERAL SETTINGS</narrative><display x="-405" y="-210" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="48d42fd9-6168-47a1-bc44-05146cbc997e" name="Create Excel Instance" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" w="120" h="30" /><inputs><input type="flag" name="Enable Events" friendlyname="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="False" /></inputs><outputs><output type="number" name="handle" friendlyname="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="excelHandler" /></outputs><onsuccess>c873d084-1a6e-4e07-89e5-efa9edbc8efa</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="c873d084-1a6e-4e07-89e5-efa9edbc8efa" name="Open Workbook" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="60" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="File name" friendlyname="File name" narrative="The path and name of the file which should be opened." expr="[pathReportFile]" /></inputs><outputs><output type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookName" /></outputs><onsuccess>7f51426b-ec85-4b8e-a187-99eb7e94810e</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="7f51426b-ec85-4b8e-a187-99eb7e94810e" name="Activate Worksheet" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="105" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookName]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetName]" /><input type="flag" name="Create If Missing?" friendlyname="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>0bdfe127-68f9-45c4-8de2-1bd36fd3619f</onsuccess><resource object="MS Excel VBO" action="Activate Worksheet" /></stage><stage stageid="8690b774-3ebb-4e01-b061-5152bb938dc5" name="Close Workbook" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="375" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be closed." expr="[workbookName]" /><input type="flag" name="Save Data" friendlyname="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." expr="False" /></inputs><onsuccess>24611e44-cfee-44c5-bf04-78392c7ca17e</onsuccess><resource object="MS Excel VBO" action="Close Workbook" /></stage><stage stageid="32ae5d08-8b2e-4550-85bb-0703aee68b93" name="note" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Dispatch Report</narrative><display x="15" y="495" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>02207c34-d46d-44b6-9fb0-f001ec31faef</onsuccess></stage><stage stageid="35ba4e9a-aa20-461c-94ac-358ced707994" name="Init All Settings" type="SubSheetInfo"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1995" w="570" h="90" /></stage><stage stageid="b14bc6ea-43cc-44ce-a5b4-a2b4d6c2e457" name="Start" type="Start"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><preconditions><condition narrative="Envrioment variables pupulated correcty in the blue prism control room" /></preconditions><display x="105" y="-2025" /><onsuccess>064e332f-c7d8-4907-a733-ae6b66f2676f</onsuccess></stage><stage stageid="89e08dde-daf5-4c27-af1d-c620381e85b4" name="Local Variables" type="Block"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-435" y="-1200" w="180" h="240" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="3cd6ede5-3fe5-4c91-a587-719fe5f2ea43" name="Enviroment Variables" type="Block"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-435" y="-1935" w="180" h="720" /><font family="Segoe UI" size="10" style="Regular" color="FF6600" /></stage><stage stageid="62e92a2e-2e3c-4ac1-9d51-4151f5693b1c" name="Global Variables" type="Block"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-1935" w="180" h="1545" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /></stage><stage stageid="22e514bf-cd07-4e3b-92c8-6075b12c9fdd" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Load Enviroment Data</narrative><display x="105" y="-1470" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>bf301733-8942-44d2-a722-b8439fffb51c</onsuccess></stage><stage stageid="2df1dc6f-6034-4d0d-b1db-f15998d7f726" name="ENV_GENERAL_RootPath" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1860" w="180" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /></stage><stage stageid="ec5f8ff3-7a62-4a70-9be4-0f44e2428b13" name="automationRootPath" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="-1860" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="dc09a096-5857-474b-a176-b10dd0482dd8" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>FOLDERS VARIABLES
</narrative><display x="-345" y="-1905" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="e31e8f9e-3a5c-4372-b189-7f2cf20bfab8" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>FOLDERS VARIABLES
</narrative><display x="-150" y="-1905" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="37b6f2f9-c843-47d9-8787-e916262af870" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>FOLDERS PATH </narrative><display x="-150" y="-1170" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="21801edc-b194-445e-be7d-f2c0d3aace21" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>GENERAL SETTINGS</narrative><display x="-345" y="-1545" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="d3d2d150-b2f5-4a22-af08-788191273a85" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>CREDENTIAL</narrative><display x="-345" y="-1815" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="149ec128-c379-4195-9b66-894c6da51e20" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Verify if Necessary Folders Exists</narrative><display x="105" y="-750" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>84a469b4-7403-494a-a8d5-2e4de32187b9</onsuccess></stage><stage stageid="2e5d7bdc-af48-4124-81bd-4839644932ee" name="Verify &quot;Support Files&quot; Folder" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-660" w="120" h="30" /><inputs><input type="text" name="Directory Name" friendlyname="Directory Name" narrative="The directory to check exists" expr="[pathFolderSupportFiles]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the directory exists" stage="elementFound" /></outputs><onsuccess>5ac2a506-1e47-440d-ae75-896370dee5aa</onsuccess><resource object="Utility - File Management" action="Directory Exists" /></stage><stage stageid="5ac2a506-1e47-440d-ae75-896370dee5aa" name="Target Folder Exists?" type="Decision"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="-615" w="120" h="30" /><decision expression="[elementFound]" /><ontrue>b92f5fb0-12c0-4ab4-94df-1c4fdc79c675</ontrue><onfalse>8391f198-41f1-408e-8df1-5c369397e02b</onfalse></stage><stage stageid="8391f198-41f1-408e-8df1-5c369397e02b" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>The folder was not available when processing</narrative><display x="255" y="-615" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>26ed4691-f05f-49f2-9d3e-2443ec7442f0</onsuccess></stage><stage stageid="b92f5fb0-12c0-4ab4-94df-1c4fdc79c675" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><narrative>Folder Exists</narrative><display x="105" y="-570" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>2ab50334-f06a-42ff-9535-c2527ddbf1eb</onsuccess></stage><stage stageid="f090e172-9c63-4325-9d18-4a25083b3515" name="End21" type="End"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="675" /></stage><stage stageid="65b7d479-fc83-42a6-aba8-8a7f2819dd43" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Environment Settings</narrative><display x="105" y="-1875" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>3767f99f-e4e1-4372-b4c5-7e373b757221</onsuccess></stage><stage stageid="e68f3c42-aea2-4982-a4be-0d5bae43edd3" name="killProcessCollection" type="LoopStart"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="-1650" w="120" h="30" /><onsuccess>c9f66552-1988-4bc4-b002-5c3aad2a8d4b</onsuccess><groupid>a53d70f4-af78-4588-9e78-090c38816916</groupid><looptype>ForEach</looptype><loopdata>killProcessCollection</loopdata></stage><stage stageid="cab3462c-6438-44ca-86b7-494d21fa4208" name="killProcessCollection" type="LoopEnd"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="-1530" w="120" h="30" /><onsuccess>22e514bf-cd07-4e3b-92c8-6075b12c9fdd</onsuccess><groupid>a53d70f4-af78-4588-9e78-090c38816916</groupid></stage><stage stageid="c9f66552-1988-4bc4-b002-5c3aad2a8d4b" name="Kill Process" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1590" w="120" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="[killProcessCollection.processName]" /></inputs><onsuccess>cab3462c-6438-44ca-86b7-494d21fa4208</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="9aa796eb-8f90-4c4c-b212-62137c98fc12" name="Kill Exception Handler" type="Block"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="30" y="-1620" w="240" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c25173bd-7cc5-42b4-93ed-5966356826cf" name="Recover" type="Recover"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="225" y="-1590" /><onsuccess>15f29cbd-8638-4720-9635-6f35c702c9a3</onsuccess></stage><stage stageid="502ac062-2a7e-4e49-af6b-c8f205b683f6" name="Set Resolution Exception Handler" type="Block"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="30" y="-1800" w="240" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1855c5c5-6e34-41b7-a63d-9b46f6d01621" name="Recover" type="Recover"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="225" y="-1770" /><onsuccess>80ec9afa-ae22-4bc5-87f6-757a49fdb399</onsuccess></stage><stage stageid="98404125-b062-45d6-8b75-5eee6e532393" name="killProcessCollection" type="Collection"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-540" y="-1470" w="180" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="processName" type="text" description="Process name which the automation uses throughout its actions." /></collectioninfo><initialvalue><row><field name="processName" type="text" value="EXCEL" /></row><row><field name="processName" type="text" value="CHROME" /></row><row><field name="processName" type="text" value="SAPLOGON" /></row><row><field name="processName" type="text" value="WINWORD" /></row></initialvalue></stage><stage stageid="40433cdd-f16a-4cc9-9fdb-494714d755d9" name="Settings Variables" type="Block"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-630" y="-1935" w="180" h="900" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="66763186-6ff4-4d52-9000-44e7d64771b1" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>CHECK FILE\DIRECTORY EXISTS</narrative><display x="-345" y="-1170" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="7350dc00-cb83-42c6-bc63-61d7995b652f" name="ENV_GENERAL_SupportFiles" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1410" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">001 - Support Files</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="35f1882b-3fd1-4d51-b89d-863c27e0b830" name="ENV_GENERAL_WorkFolder" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1380" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">002 - Work Folder</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="e721be7d-c5dc-48cf-b087-4074310ab76a" name="ENV_GENERAL_Screenshots" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1320" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">004 - Screenshots</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="c862789a-08e8-4447-aa8f-68529217ff48" name="ENV_GENERAL_Reports" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1350" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">003 - Reports</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="b371586c-5968-4e72-9107-4ee8f539232c" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>FOLDERS NAME</narrative><display x="-345" y="-1455" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="300a11fb-9392-462a-a22f-2ecb43a02bea" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>PROCESS TO KILL</narrative><display x="-540" y="-1515" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="ada5c859-043b-4a2d-b6a6-0f0d8f0ea427" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Set Folders Paths</narrative><display x="105" y="-1335" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>bdeb2841-0c28-4609-a870-d5a20a6d2caf</onsuccess></stage><stage stageid="34cbdc85-1682-4b44-ab49-dddecc73e36e" name="Set &quot;Support File Folder&quot; Path" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1245" w="120" h="30" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The folder to combine" expr="[automationRootPath]" /><input type="text" name="File Name" friendlyname="File Name" narrative="The file to combine" expr="[folderNameSupportFiles]" /></inputs><outputs><output type="text" name="Path" friendlyname="Path" narrative="The combined full path" stage="pathFolderSupportFiles" /></outputs><onsuccess>91a6210d-149f-48bb-b786-3fd2ef237aea</onsuccess><resource object="Utility - File Management" action="Combine Path" /></stage><stage stageid="91a6210d-149f-48bb-b786-3fd2ef237aea" name="Set &quot;Work Folder&quot; Path" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1200" w="120" h="30" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The folder to combine" expr="[automationRootPath]" /><input type="text" name="File Name" friendlyname="File Name" narrative="The file to combine" expr="[folderNameWork] &amp; &quot;\&quot; &amp; FormatDateTime(Now(), &quot;yyyy&quot;) &amp; &quot;\&quot; &amp; FormatDateTime(Now(), &quot;MM&quot;) &amp; &quot;\&quot; &amp; FormatDateTime(Now(), &quot;dd&quot;)" /></inputs><outputs><output type="text" name="Path" friendlyname="Path" narrative="The combined full path" stage="pathFolderWork" /></outputs><onsuccess>8bda7f55-b945-40fe-b8e7-7ffe22d12881</onsuccess><resource object="Utility - File Management" action="Combine Path" /></stage><stage stageid="8e6efa84-b922-4c2d-a905-a3a15ed00f67" name="pathFolderSupportFiles" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1125" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="2b68e6b5-a0f6-45e4-b8e6-0ad0227b37d0" name="pathFolderWork" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1095" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="1bcbb943-8c77-4e5b-8c94-918b30b675cf" name="pathFolderScreenshots" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1035" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="3bae0297-cfff-4d84-99b8-4bc73f5905f1" name="pathFolderReports" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1065" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="45e5ab03-eb0a-463c-8c28-d5ea6ad3d748" name="width" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><display x="-540" y="-1740" w="180" h="30" /><datatype>number</datatype><initialvalue>1920</initialvalue><private /><alwaysinit /></stage><stage stageid="6791fc02-baee-4c94-8f2f-571533268a8b" name="height" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><display x="-540" y="-1770" w="180" h="30" /><datatype>number</datatype><initialvalue>1080</initialvalue><private /><alwaysinit /></stage><stage stageid="9da7f9e8-15c0-4a2c-bd31-ba9ca9df96f4" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>SCREEN RESOLUTION</narrative><display x="-540" y="-1815" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="f268ab3a-3a66-4ee3-83f1-53378398fb19" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Reset Applications</narrative><display x="105" y="-1695" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>e68f3c42-aea2-4982-a4be-0d5bae43edd3</onsuccess></stage><stage stageid="8483d5de-1d97-46a7-a785-60d1d981f105" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>SUPPORT FILES</narrative><display x="-540" y="-1425" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="ef0cf4ed-3e47-42ab-9805-f5cd9724b130" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Set Support Files Path</narrative><display x="105" y="-1050" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>0e5ddb6b-ff28-482d-9cae-317ee42b87bf</onsuccess></stage><stage stageid="b29557f3-c7c4-4abf-92f4-391fe8288236" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>SUPPORT FILES PATH</narrative><display x="-150" y="-990" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="8b29f883-d350-4001-9c3b-3d7094ee5c0b" name="elementFound" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-345" y="-1065" w="180" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80308dd5-7c61-4caa-870b-38f3aa2fb9a2" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Verify if Support Files/Executables/Macros/templates are Available to the Automation.</narrative><display x="105" y="-105" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>a3cca9d0-2709-418f-af80-55e288cd8947</onsuccess></stage><stage stageid="a3cca9d0-2709-418f-af80-55e288cd8947" name="Check &quot;Report Template&quot; File" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-60" w="120" h="30" /><inputs><input type="text" name="File Name" friendlyname="File Name" narrative="The name of the file to check" expr="[pathTemplateReportFile]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the file exists" stage="elementFound" /></outputs><onsuccess>f200d232-172b-4395-a3b5-9fbe6734cd82</onsuccess><resource object="Utility - File Management" action="File Exists" /></stage><stage stageid="f200d232-172b-4395-a3b5-9fbe6734cd82" name="Target File exists?" type="Decision"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="-15" w="120" h="30" /><decision expression="[elementFound]" /><ontrue>025709b6-e66b-427b-aa33-38442f3de486</ontrue><onfalse>85283ef3-dbf9-4383-b813-7526eb924fb0</onfalse></stage><stage stageid="85283ef3-dbf9-4383-b813-7526eb924fb0" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>The file was not available when processing</narrative><display x="255" y="-15" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>0c36f581-dd5c-4003-a9f4-65dc0b20c0a8</onsuccess></stage><stage stageid="025709b6-e66b-427b-aa33-38442f3de486" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><narrative>File Exists</narrative><display x="105" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>aaae8925-4b5f-4e6e-96a3-c1af0ba3c1f3</onsuccess></stage><stage stageid="7ffb0183-517e-4b29-a46c-5502a6727db1" name="ENV_PROCESSID_application1_CredentialName" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1770" w="180" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /></stage><stage stageid="42391f1d-54c1-4889-a7dd-f5cc53ca6df0" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>CREDENTIAL</narrative><display x="-150" y="-1815" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="40a313fa-accd-4bc5-be89-ae551b232d58" name="application1CredentialName" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="-1770" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="fd575f2a-1abf-4ecf-8178-dc01376cd7f8" name="templateReport" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-540" y="-1380" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">PROCESSID_TemplateReport.xlsm</initialvalue><private /><alwaysinit /></stage><stage stageid="f3864b98-0f5b-4ac4-be24-1d52d7a1a204" name="pathTemplateReportFile" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-345" y="-1095" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a86af583-9678-4443-8bc2-d71cf4d6f850" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Create/Clear Necessary Folders</narrative><display x="105" y="-900" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>35eafd43-5c15-4c44-b139-55ad3d88a372</onsuccess></stage><stage stageid="ff329347-ea02-48ba-90dc-40bf155ad4ad" name="Clear Work Folder" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-810" w="120" h="30" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The path from which to delete the files" expr="[pathFolderWork]" /><input type="text" name="Pattern" friendlyname="Pattern" narrative="The wildcard pattern of files to delete" expr="&quot;*&quot;" /></inputs><onsuccess>149ec128-c379-4195-9b66-894c6da51e20</onsuccess><resource object="Utility - File Management" action="Delete Files" /></stage><stage stageid="35eafd43-5c15-4c44-b139-55ad3d88a372" name="Create &quot;Work&quot; Folder" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-855" w="120" h="30" /><inputs><input type="text" name="Directory Path" friendlyname="Directory Path" narrative="The path in which to create the directory" expr="[pathFolderWork]" /><input type="flag" name="Error If Already Exists" friendlyname="Error If Already Exists" narrative="True to generate an error if the directory already exists" expr="False" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" narrative="True if successful" stage="" /><output type="text" name="Message" friendlyname="Message" narrative="An error message if unsuccessful" stage="" /></outputs><onsuccess>ff329347-ea02-48ba-90dc-40bf155ad4ad</onsuccess><resource object="Utility - File Management" action="Create Directory" /></stage><stage stageid="d5e0bb39-b8fe-4c43-a6c4-a212ef20a3c6" name="Note14" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>When not in the first execution of the day, the folder may already be populated.</narrative><display x="270" y="-810" w="180" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="818215df-4b49-4c30-a006-d002fd0bcc30" name="ENV_PROCESSID_maximumQueueAttempts" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-345" y="-1500" w="180" h="30" /><datatype>number</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="91aa4eb7-1276-4d4d-b019-3e68413f92b1" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>CONFIGURATION</narrative><display x="-150" y="-1545" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="47338c57-309c-4865-ba0e-ba999d192f65" name="maximumQueueAttempts" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1500" w="180" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="3767f99f-e4e1-4372-b4c5-7e373b757221" name="Get User Name" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1830" w="120" h="30" /><outputs><output type="text" name="User Name" friendlyname="User Name" narrative="The name of the logged in user in the current system" stage="currentUser" /></outputs><onsuccess>2b0401e6-26ee-4d11-b517-bc5415eaaed3</onsuccess><resource object="Utility - Environment" action="Get User Name" /></stage><stage stageid="3b2ca1c0-b72e-4454-8dc0-92a90d183b56" name="currentUser" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-345" y="-1125" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80ec9afa-ae22-4bc5-87f6-757a49fdb399" name="Re-Throw" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="345" y="-1770" w="120" h="30" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="1257b534-1fe1-4c81-89d5-95d19b7927a8" name="Set &quot;Screenshot Folder&quot; Path" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1110" w="120" h="30" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The folder to combine" expr="[automationRootPath]" /><input type="text" name="File Name" friendlyname="File Name" narrative="The file to combine" expr="[folderNameScreenshots]" /></inputs><outputs><output type="text" name="Path" friendlyname="Path" narrative="The combined full path" stage="pathFolderScreenshots" /></outputs><onsuccess>ef0cf4ed-3e47-42ab-9805-f5cd9724b130</onsuccess><resource object="Utility - File Management" action="Combine Path" /></stage><stage stageid="8bda7f55-b945-40fe-b8e7-7ffe22d12881" name="Set &quot;Reports Folder&quot; Path" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1155" w="120" h="30" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The folder to combine" expr="[automationRootPath]" /><input type="text" name="File Name" friendlyname="File Name" narrative="The file to combine" expr="[folderNameReports]" /></inputs><outputs><output type="text" name="Path" friendlyname="Path" narrative="The combined full path" stage="pathFolderReports" /></outputs><onsuccess>1257b534-1fe1-4c81-89d5-95d19b7927a8</onsuccess><resource object="Utility - File Management" action="Combine Path" /></stage><stage stageid="0e5ddb6b-ff28-482d-9cae-317ee42b87bf" name="Set &quot;Template Report File&quot; Path" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1005" w="120" h="30" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The folder to combine" expr="[pathFolderSupportFiles]" /><input type="text" name="File Name" friendlyname="File Name" narrative="The file to combine" expr="[templateReport]" /></inputs><outputs><output type="text" name="Path" friendlyname="Path" narrative="The combined full path" stage="pathTemplateReportFile" /></outputs><onsuccess>8c4216aa-06b0-4b62-82fa-3370788118be</onsuccess><resource object="Utility - File Management" action="Combine Path" /></stage><stage stageid="8c4216aa-06b0-4b62-82fa-3370788118be" name="Set &quot;Report File&quot; Path" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-960" w="120" h="30" /><inputs><input type="text" name="Folder" friendlyname="Folder" narrative="The folder to combine" expr="[pathFolderReports]" /><input type="text" name="File Name" friendlyname="File Name" narrative="The file to combine" expr="FormatDateTime(Now(), &quot;yyyyMMdd&quot;) &amp; &quot; - &quot; &amp; [automationID] &amp; &quot; &quot; &amp; [reportName]" /></inputs><outputs><output type="text" name="Path" friendlyname="Path" narrative="The combined full path" stage="pathReportFile" /></outputs><onsuccess>a86af583-9678-4443-8bc2-d71cf4d6f850</onsuccess><resource object="Utility - File Management" action="Combine Path" /></stage><stage stageid="15f29cbd-8638-4720-9635-6f35c702c9a3" name="Resume" type="Resume"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><display x="225" y="-1530" /><onsuccess>cab3462c-6438-44ca-86b7-494d21fa4208</onsuccess></stage><stage stageid="2ab50334-f06a-42ff-9535-c2527ddbf1eb" name="Verify &quot;Work&quot; Folder" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-525" w="120" h="30" /><inputs><input type="text" name="Directory Name" friendlyname="Directory Name" narrative="The directory to check exists" expr="[pathFolderWork]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the directory exists" stage="elementFound" /></outputs><onsuccess>6c92d0e8-34fe-4c39-b246-9a4366497a0a</onsuccess><resource object="Utility - File Management" action="Directory Exists" /></stage><stage stageid="6c92d0e8-34fe-4c39-b246-9a4366497a0a" name="Target Folder Exists?" type="Decision"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="-480" w="120" h="30" /><decision expression="[elementFound]" /><ontrue>59c6a313-d8af-40b7-ae6e-1613a99a1ca2</ontrue><onfalse>412efb5c-0d27-40c6-b2e9-a41258331817</onfalse></stage><stage stageid="412efb5c-0d27-40c6-b2e9-a41258331817" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>The folder was not available when processing</narrative><display x="255" y="-480" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>4c84eab1-b5e1-4e6e-8b36-3785846b284a</onsuccess></stage><stage stageid="59c6a313-d8af-40b7-ae6e-1613a99a1ca2" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><narrative>Folder Exists</narrative><display x="105" y="-435" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>f4368c5b-5ae7-40e6-8093-48d46d0cab57</onsuccess></stage><stage stageid="f4368c5b-5ae7-40e6-8093-48d46d0cab57" name="Verify &quot;Reports&quot; Folder" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-390" w="120" h="30" /><inputs><input type="text" name="Directory Name" friendlyname="Directory Name" narrative="The directory to check exists" expr="[pathFolderReports]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the directory exists" stage="elementFound" /></outputs><onsuccess>8a8206c7-e3ad-449b-b487-2847b95089f5</onsuccess><resource object="Utility - File Management" action="Directory Exists" /></stage><stage stageid="8a8206c7-e3ad-449b-b487-2847b95089f5" name="Target Folder Exists?" type="Decision"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="-345" w="120" h="30" /><decision expression="[elementFound]" /><ontrue>8a786cd9-0ac9-4056-bde6-68d9f128e4a5</ontrue><onfalse>7af61a84-6e50-4868-95ce-dba226452072</onfalse></stage><stage stageid="7af61a84-6e50-4868-95ce-dba226452072" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>The folder was not available when processing</narrative><display x="255" y="-345" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>3580d9e2-f6b7-46b7-984b-0f789114339b</onsuccess></stage><stage stageid="8a786cd9-0ac9-4056-bde6-68d9f128e4a5" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><narrative>Folder Exists</narrative><display x="105" y="-300" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>5492fd16-5fa4-413c-b986-764e275c5001</onsuccess></stage><stage stageid="5492fd16-5fa4-413c-b986-764e275c5001" name="Verify &quot;Screenshots&quot; Folder" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-255" w="120" h="30" /><inputs><input type="text" name="Directory Name" friendlyname="Directory Name" narrative="The directory to check exists" expr="[pathFolderScreenshots]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the directory exists" stage="elementFound" /></outputs><onsuccess>e2c09f18-de8d-4365-88b1-1fcb66ad43fc</onsuccess><resource object="Utility - File Management" action="Directory Exists" /></stage><stage stageid="e2c09f18-de8d-4365-88b1-1fcb66ad43fc" name="Target Folder Exists?" type="Decision"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="-210" w="120" h="30" /><decision expression="[elementFound]" /><ontrue>e02336b7-7683-436e-9378-ced1223bd7e0</ontrue><onfalse>4bcac055-e58d-41ef-9afb-643b2df292d8</onfalse></stage><stage stageid="4bcac055-e58d-41ef-9afb-643b2df292d8" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>The folder was not available when processing</narrative><display x="255" y="-210" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>3e14ab4d-a5e0-4c1f-865b-9627e8ee039d</onsuccess></stage><stage stageid="e02336b7-7683-436e-9378-ced1223bd7e0" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><narrative>Folder Exists</narrative><display x="105" y="-165" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>80308dd5-7c61-4caa-870b-38f3aa2fb9a2</onsuccess></stage><stage stageid="a214d5cb-3357-4d6f-9d84-baa0b91517bf" name="lockToken" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-675" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="e1220480-9ae2-445e-95cc-2fef2c1ca970" name="lockName" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-540" y="-1560" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">PROCESSIDProcessLock</initialvalue><alwaysinit /></stage><stage stageid="af188bf1-039f-479b-9850-0e81fede554c" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>LOCK VARIABLES</narrative><display x="-540" y="-1605" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="75b49679-1d8e-4b92-9d08-31dc5cfb62f0" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>LOCK VARIABLES</narrative><display x="-150" y="-720" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="bd57fdcb-1a46-4e97-8d6f-96707aeeb8a4" name="exceptionType" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-405" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="7e6b3e6e-46f6-4514-873a-76fb1fd7471e" name="exceptionDetails" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-435" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="2caa02ba-3d4e-4cf3-9522-6f9eb25286f6" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>EXCEPTION VARIABLES</narrative><display x="-150" y="-480" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="2b0401e6-26ee-4d11-b517-bc5415eaaed3" name="Set Screen Resolution" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1770" w="120" h="30" /><inputs><input type="number" name="Width" friendlyname="Width" narrative="The desired width of the screen in pixels" expr="[width]" /><input type="number" name="Height" friendlyname="Height" narrative="The desired height of the screen in pixels" expr="[height]" /></inputs><outputs><output type="text" name="message" friendlyname="message" stage="" /><output type="flag" name="success" friendlyname="success" stage="" /></outputs><onsuccess>f268ab3a-3a66-4ee3-83f1-53378398fb19</onsuccess><resource object="Utility - Set Screen Resolution" action="Set Screen Resolution" /></stage><stage stageid="fd3cc1f2-e874-4484-a96e-621c2c01933d" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>AUTOMATION ID</narrative><display x="-540" y="-1905" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="52d82957-ddae-48a0-b29d-b17b43c2cf04" name="automationID" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-540" y="-1860" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">PROCESSID</initialvalue><private /><alwaysinit /></stage><stage stageid="9ece720e-bb2d-45a8-a5df-4a6a4082f40d" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>FOLDERS NAME</narrative><display x="-150" y="-1455" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="1ef7338f-2494-498c-81a9-f02063b09384" name="folderNameSupportFiles" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1410" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3bc4c25c-43c9-416f-b75d-2f4fc81f22f8" name="folderNameWork" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1380" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="563fa8f5-bcfb-458b-a90d-b85c9f68020d" name="folderNameReports" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1350" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95928d0c-4f2c-4c9a-9760-e078c4edfc56" name="folderNameScreenshots" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1320" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d192e65-9e23-41f3-b7af-1e5724e2570b" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Get DataSources</narrative><display x="105" y="330" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>275774d6-f1e2-4264-9467-6197a58ff1d9</onsuccess></stage><stage stageid="e323f131-8be0-4021-8e42-a528b396f602" name="reportName" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-540" y="-1290" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">PROCESSID - Automation Name.xlsm</initialvalue><private /><alwaysinit /></stage><stage stageid="41352dc9-b5c7-4aa3-967a-62654486ee38" name="Note16" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>REPORT FILE</narrative><display x="-540" y="-1335" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="26ed4691-f05f-49f2-9d3e-2443ec7442f0" name="SE: Suport file folder" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="-615" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to find the Suport file folder&quot;" /></stage><stage stageid="0c36f581-dd5c-4003-a9f4-65dc0b20c0a8" name="SE: Report Template" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="-15" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to find the Report Template&quot;" /></stage><stage stageid="4c84eab1-b5e1-4e6e-8b36-3785846b284a" name="SE: Work Folder" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="-480" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to find the Work folder&quot;" /></stage><stage stageid="3580d9e2-f6b7-46b7-984b-0f789114339b" name="SE: Report folder" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="-345" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to find the Report folder&quot;" /></stage><stage stageid="3e14ab4d-a5e0-4c1f-865b-9627e8ee039d" name="SE: Screenshot folder" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="-210" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to find the Screenshot folder&quot;" /></stage><stage stageid="a0f7ffa5-cb57-4043-8dc8-d6cf7d1bbb9e" name="Populate Queue" type="SubSheetInfo"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-465" y="-795" w="360" h="90" /></stage><stage stageid="4f180e82-655b-4fdd-8f3a-0538f47df094" name="Start" type="Start"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-825" /><onsuccess>99d6e099-c853-4a57-8bee-e5a68a980a09</onsuccess></stage><stage stageid="b9c452c4-166a-40a8-a153-ad5a4ecabf10" name="End5" type="End"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-30" y="465" /></stage><stage stageid="2c87413e-14c3-4284-8a40-2941b19bcb5e" name="Aquire Lock" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative><display x="-30" y="-735" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="[lockName]" /><input type="timespan" name="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="MakeTimeSpan(0, 0, 0, 30)" /><input type="text" name="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="[lockToken]" /><input type="text" name="Comment" narrative="The comments to set on the lock" expr="&quot;Lock Acquired&quot;" /></inputs><outputs><output type="text" name="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="lockToken" /></outputs><onsuccess>f23e5a01-1d9f-4615-9e47-f06b9fd28357</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" /></stage><stage stageid="f23e5a01-1d9f-4615-9e47-f06b9fd28357" name="Lock Received?" type="Decision"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-30" y="-690" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[lockToken] &lt;&gt; &quot;&quot;" /><ontrue>516b02c6-8800-4371-91d4-c8b605b510d4</ontrue><onfalse>bd8c156b-3ca9-42f7-bc92-ecf2ddaa7b48</onfalse></stage><stage stageid="bd8c156b-3ca9-42f7-bc92-ecf2ddaa7b48" name="Note6" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><narrative>Another session has loaded the queue</narrative><display x="-195" y="-690" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>7d6374ef-a20b-452a-aec8-ad2850833718</onsuccess></stage><stage stageid="99d6e099-c853-4a57-8bee-e5a68a980a09" name="note" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>Verify if the Queue Must be Populated</narrative><display x="-30" y="-780" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>2c87413e-14c3-4284-8a40-2941b19bcb5e</onsuccess></stage><stage stageid="d57ca73d-a55d-440e-bfdf-b5805d352a45" name="Anchor15" type="Anchor"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="465" w="10" h="10" /><onsuccess>b9c452c4-166a-40a8-a153-ad5a4ecabf10</onsuccess></stage><stage stageid="13352896-3a21-45f5-baa6-42f2a96439fb" name="connectionName" type="Data"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-555" y="0" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8366a1e3-434d-4ec8-a2ab-36826de2989d" name="Note9" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><narrative>Available Controls:
- RESTART: Closes the provided application, then logs in;
- CLOSE: Closes the provided;
- START: Logins in to the provided Application.</narrative><display x="-720" y="-30" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="d2aed6b7-c0ff-45e1-beef-87ee6428c49a" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>CONTROL VARIABLES</narrative><display x="-540" y="-1245" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="d10c7a6d-a3f1-4feb-9756-bded204f17d2" name="retryCounter" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-345" y="-975" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dbcc55db-c69d-4a5c-a836-36deb2bdb27f" name="maxRetry" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-540" y="-1200" w="180" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><alwaysinit /></stage><stage stageid="66f439d0-5211-4fd4-8726-21aca5087c08" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>CONTROL VARIABLES</narrative><display x="-345" y="-1020" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="30ddde2a-15d0-4b97-8e62-cb43d5428f05" name="queueName" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-540" y="-1650" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">PROCESSID_workQueue</initialvalue><alwaysinit /></stage><stage stageid="35b76860-8485-4e40-9a30-a269f2cd8932" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>QUEUE VARIABLES</narrative><display x="-540" y="-1695" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="93dfca08-fca6-4efe-865a-d795f8385c62" name="notProcessingReason" type="Data"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="-240" y="-45" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe275428-3e36-464b-832a-8ae949fca39a" name="Input Variables" type="Block"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="-90" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="5965a196-7a23-46af-9242-d648fde8a113" name="startNotProcessingReason" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-540" y="-1080" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Devido à inicialização da automação, todos as notas pendentes de validação serão finalizadas sem processamento.</initialvalue><alwaysinit /></stage><stage stageid="c5b08f38-771b-4ead-bfbc-e7b3d689382b" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>CLEAN WORK QUEUE
 VARIABLES</narrative><display x="-540" y="-1125" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="41280b58-8717-4497-bfdf-a75491454357" name="waitInterval" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>The number of seconds to wait between restart attempts.</narrative><display x="-540" y="-1170" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>5</initialvalue><alwaysinit /></stage><stage stageid="0de11b3b-df97-4dc7-99d6-a83f370ee4cf" name="endNotProcessingReason" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-540" y="-1050" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Nota não validada, pelo tempo de processamento exceder à janela de execução da automação.</initialvalue><alwaysinit /></stage><stage stageid="b92825db-3dc8-4c65-9c26-7b0333d0cb7c" name="Clean Work Queue" type="SubSheet"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-495" w="120" h="30" /><inputs><input type="text" name="Exception Reason" friendlyname="Exception Reason" expr="[startNotProcessingReason]" /><input type="flag" name="First Execution" friendlyname="First Execution" expr="True" /></inputs><onsuccess>891016fc-d45e-421a-a8bd-042ff2704f77</onsuccess><processid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</processid></stage><stage stageid="516b02c6-8800-4371-91d4-c8b605b510d4" name="Note6" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><narrative>Current session has to load the queue</narrative><display x="-30" y="-645" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>88c394b6-6189-4232-b0d9-fdcbb2f510d0</onsuccess></stage><stage stageid="aaae8925-4b5f-4e6e-96a3-c1af0ba3c1f3" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Copy Auxiliar Template Files</narrative><display x="105" y="90" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>8659b794-691d-4642-aad2-2cc4a690857f</onsuccess></stage><stage stageid="8659b794-691d-4642-aad2-2cc4a690857f" name="Copy Template Report File" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="135" w="120" h="30" /><inputs><input type="text" name="File Path" friendlyname="File Path" narrative="The full path to the file to be copied" expr="[pathTemplateReportFile]" /><input type="text" name="Destination Path" friendlyname="Destination Path" narrative="The path of the directory to copy the file to" expr="[pathReportFile]" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" narrative="True if successful" stage="" /><output type="text" name="Message" friendlyname="Message" narrative="An error message if unsuccessful" stage="" /></outputs><onsuccess>c633b9cc-22a1-4c5c-bcc6-7e3a72d4db78</onsuccess><resource object="Utility - File Management" action="Copy File" /></stage><stage stageid="c633b9cc-22a1-4c5c-bcc6-7e3a72d4db78" name="Check Report File" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="180" w="120" h="30" /><inputs><input type="text" name="File Name" friendlyname="File Name" narrative="The name of the file to check" expr="[pathReportFile]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the file exists" stage="elementFound" /></outputs><onsuccess>cafe0173-85f8-41fc-9226-ddbfe02b4613</onsuccess><resource object="Utility - File Management" action="File Exists" /></stage><stage stageid="7d958076-cf70-4201-8381-a669bef5a472" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>The file was not available when processing</narrative><display x="255" y="225" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>5cf19c8d-bd1d-40dc-bad0-e0cf9d80ec55</onsuccess></stage><stage stageid="fc1c67f1-8b25-499c-b270-acf9266d9a51" name="Note1" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit /><narrative>Template copied</narrative><display x="105" y="270" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>5d192e65-9e23-41f3-b7af-1e5724e2570b</onsuccess></stage><stage stageid="cafe0173-85f8-41fc-9226-ddbfe02b4613" name="Target File exists?" type="Decision"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="105" y="225" w="120" h="30" /><decision expression="[elementFound]" /><ontrue>fc1c67f1-8b25-499c-b270-acf9266d9a51</ontrue><onfalse>7d958076-cf70-4201-8381-a669bef5a472</onfalse></stage><stage stageid="5cf19c8d-bd1d-40dc-bad0-e0cf9d80ec55" name="SE: Report file" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="225" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to find the Report file&quot;" /></stage><stage stageid="07807466-52c0-4c58-acd2-41a61cb389f3" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>DATASOURCE</narrative><display x="-150" y="-900" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="301b4cac-baf7-4849-ad68-9945f1ea2544" name="3 - Work Step 3" type="SubSheet"><display x="-45" y="-75" w="90" h="60" /><onsuccess>eda22ebd-0f61-4e1d-8222-d161fffadb82</onsuccess><processid>13844f7e-530b-46b3-834e-c2c4993b365f</processid></stage><stage stageid="d3f36526-92a5-44b1-a5e5-0d9a3b748223" name="Session Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="-615" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="cb67778e-883f-430d-a347-c94f1e8f7cbd" name="firstExecution" type="Data"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-15" w="180" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="1c8e0d18-3235-4a4b-8efc-4770c312631e" name="Anchor31" type="Anchor"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="15" y="450" w="10" h="10" /><onsuccess>9a09b767-b11b-4edc-a37b-d34567a72f96</onsuccess></stage><stage stageid="9a09b767-b11b-4edc-a37b-d34567a72f96" name="End3" type="End"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><display x="15" y="495" /></stage><stage stageid="275774d6-f1e2-4264-9467-6197a58ff1d9" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Get any necessary DataSource</narrative><display x="105" y="390" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>3c011ac0-f5fb-4102-a71f-5370ace39476</onsuccess></stage><stage stageid="7235b133-614c-427b-bcb8-d1cee95fce21" name="Recover" type="Recover"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="255" y="555" /><onsuccess>88400941-6188-4e82-8aff-56519c24096c</onsuccess></stage><stage stageid="f04ad81c-d9ef-41bf-98da-7dc0e7a7eade" name="Retry?" type="Decision"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="615" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><breakpoint type="0"><condition></condition></breakpoint><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>d160922f-057b-421d-b839-8aba12102079</ontrue><onfalse>b9b0f248-2d20-4308-a725-09af842ae28c</onfalse></stage><stage stageid="d7ffbe77-117b-42c1-a05c-b4ac6e31005c" name="Re-Throw" type="Exception"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="705" y="615" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="a71f471c-bc0f-4198-bf63-0b8aee1d4861" name="Resume" type="Resume"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="525" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2c923c0b-bbbc-49dd-a27b-dc26ccce60ca</onsuccess></stage><stage stageid="be61cf4d-bd88-4a2c-a204-c3751919e500" name="Sleep" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="390" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>275774d6-f1e2-4264-9467-6197a58ff1d9</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="2c923c0b-bbbc-49dd-a27b-dc26ccce60ca" name="retryCounter++" type="Calculation"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="405" y="480" w="120" h="30" /><onsuccess>3f15500b-736a-4848-9c27-95cace638c4f</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="d160922f-057b-421d-b839-8aba12102079" name="Note8" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="405" y="570" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>a71f471c-bc0f-4198-bf63-0b8aee1d4861</onsuccess></stage><stage stageid="b9b0f248-2d20-4308-a725-09af842ae28c" name="Note8" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="555" y="615" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>d7ffbe77-117b-42c1-a05c-b4ac6e31005c</onsuccess></stage><stage stageid="fb78b7ca-fbf1-4938-94a3-ff5fbeb96df3" name="Excel Exception Handler" type="Block"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="15" y="360" w="285" h="225" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8d1f5392-bdda-4508-adf4-99fe41ecacb2" name="Set Data To Report" type="SubSheetInfo"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-300" y="-105" w="330" h="90" /></stage><stage stageid="2d5b2353-17fa-4554-8ca5-46b6181569e5" name="Start" type="Start"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="30" y="-135" /><onsuccess>3bb99f33-c4a4-4d25-8dd3-97b45918c4a7</onsuccess></stage><stage stageid="2989b2af-b151-42d3-a866-1d63547d2ddf" name="Set Data To Report" type="SubSheet"><loginhibit onsuccess="true" /><display x="195" y="-75" w="90" h="60" /><onsuccess>60ae7d82-d358-45ea-a6cb-5bc57d87efc8</onsuccess><processid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</processid></stage><stage stageid="ce09daa2-d824-450f-9cc2-696c75c2d1b7" name="status" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="45" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eb9d5e32-7537-409b-8482-dcf81b58e722" name="attempts" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="75" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e6e3b8c3-2a6c-4b70-a405-9afe01ac194b" name="worktime" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="105" w="180" h="30" /><datatype>timespan</datatype><initialvalue>0.00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="b066e83c-3f8d-4ef4-bbb7-ed70eaed6ff6" name="loadedDateTime" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="195" w="180" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ae250bd-86c9-4f85-bb79-7bb05c4f0193" name="completedDateTime" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="135" w="180" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8e8c9019-3409-4ea9-b58c-338d997d62cd" name="exceptionDateTime" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="255" w="180" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09f1d179-e8ca-417c-8acc-233c7f2f3d99" name="exceptionReason" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="225" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3df0b22e-b3d2-4f54-930f-dae6614cc1a9" name="tag" type="Data"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="-225" y="165" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1e6ede1b-98d6-485d-b447-d05472d0935b" name="Local Variables" type="Block"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><loginhibit onsuccess="true" /><display x="-315" y="-45" w="180" h="315" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="c98e7ba4-5b60-4eef-9b7c-709db8b7d0ea" name="note" type="Note"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><loginhibit onsuccess="true" /><narrative>REPORT VARIABLES</narrative><display x="-225" y="0" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="0bdfe127-68f9-45c4-8de2-1bd36fd3619f" name="Run &quot;openHiddenColumns&quot; Macro" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="150" w="120" h="30" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="&quot;openHiddenColumns&quot;" /></inputs><onsuccess>510f18ec-3522-4272-afed-fefd5c682f74</onsuccess><resource object="MS Excel VBO" action="Run Macro" /></stage><stage stageid="491248f1-f95f-4562-a410-ad6d57034595" name="Save Workbook" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="330" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be saved" expr="[workbookName]" /></inputs><onsuccess>8690b774-3ebb-4e01-b061-5152bb938dc5</onsuccess><resource object="MS Excel VBO" action="Save Workbook" /></stage><stage stageid="bdeb2841-0c28-4609-a870-d5a20a6d2caf" name="Note21" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>Set Automation's Folders Path</narrative><display x="105" y="-1290" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>34cbdc85-1682-4b44-ab49-dddecc73e36e</onsuccess></stage><stage stageid="5d6a07c1-319f-4f8b-8a30-cb3a32918d2a" name="Run &quot;closeHiddenColumns&quot; Macro" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="285" w="120" h="30" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="&quot;closeHiddenColumns&quot;" /></inputs><onsuccess>491248f1-f95f-4562-a410-ad6d57034595</onsuccess><resource object="MS Excel VBO" action="Run Macro" /></stage><stage stageid="3c011ac0-f5fb-4102-a71f-5370ace39476" name="Reset retryCounter" type="Calculation"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="615" w="120" h="30" /><onsuccess>f090e172-9c63-4325-9d18-4a25083b3515</onsuccess><calculation expression="0" stage="retryCounter" /></stage><stage stageid="ff3dd15b-7363-498c-b6bf-dadac6899a8c" name="Wait" type="Action"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>5ed75f8c-dacd-4304-b7a9-9604e409c5be</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="bb615d14-65ca-401f-b5a7-39405be5224b" name="reportCollection" type="Collection"><loginhibit onsuccess="true" /><display x="-450" y="-225" w="180" h="30" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="ID" type="text" /><field name="empresa" type="text" /><field name="Nota" type="text" /><field name="Tipo de nota" type="text" /><field name="Descrição" type="text" /><field name="Data da nota" type="text" /><field name="Dtcriação" type="text" /><field name="Hora da nota" type="text" /><field name="Início desejado" type="text" /><field name="Concldesejada" type="text" /><field name="CenTrab respon" type="text" /><field name="Descr Depto Resp" type="text" /><field name="Ctacontrato" type="text" /><field name="Cliente" type="text" /><field name="noteDescription" type="text" /><field name="Início planej" type="text" /><field name="measure" type="text" /><field name="email" type="text" /><field name="cellphone" type="text" /><field name="communication" type="text" /><field name="communicationText" type="text" /><field name="attachmentPath" type="text" /><field name="startAutomationTime" type="text" /><field name="endAutomationTime" type="text" /><field name="processingTime" type="text" /><field name="status" type="text" /><field name="reportToBU" type="text" /><field name="results" type="text" /><field name="exceptionDetails" type="text" /><field name="attempt" type="text" /><field name="communicationSent" type="text" /></collectioninfo></stage><stage stageid="892ad566-7e32-4946-8dc7-a19b9b0630aa" name="Run &quot;formatTimeSpan&quot; Macro" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="240" w="120" h="30" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="&quot;formatTimeSpan&quot;" /></inputs><onsuccess>5d6a07c1-319f-4f8b-8a30-cb3a32918d2a</onsuccess><resource object="MS Excel VBO" action="Run Macro" /></stage><stage stageid="9df4dd5e-4607-48db-85dd-86ab14bdb330" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>E-MAIL VARIABLES</narrative><display x="-345" y="-1695" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="67d78f76-f5a8-42b2-ade9-f241998c29d4" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>E-MAIL VARIABLES</narrative><display x="-150" y="-1695" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="22fff1cd-9445-495c-ba79-41affcdcf8e1" name="ENV_PROCESSID_EmailBusinessTeam" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1620" w="180" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /></stage><stage stageid="46dd5439-24ba-4312-92ab-4ef561f7cd2a" name="emailBusinessTeam" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="-1620" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="f9c54e91-6c25-4bc8-92d3-e26f500567b5" name="Start Up Application" type="SubSheetInfo"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><narrative>Start and log on to SAP application</narrative><display x="-435" y="-240" w="330" h="90" /></stage><stage stageid="917d77c9-42d9-4f67-aba8-86b5e6a5abe0" name="Start" type="Start"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="-270" /><inputs><input type="text" name="application" stage="application" /><input type="text" name="connectionName" stage="connectionName" /></inputs><onsuccess>13692d8a-7328-4c4f-bd44-086d7fad5c47</onsuccess></stage><stage stageid="728d8dae-4d45-412c-a995-90f7a55d9f65" name="End" type="End"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="105" /></stage><stage stageid="5859588e-2b1e-4762-a234-0ead2c822413" name="note" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><narrative>Launch the Application1 and get it ready to transact</narrative><display x="-105" y="-105" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>9f60b7d4-586c-406c-b7da-2380ea16f516</onsuccess></stage><stage stageid="00134811-a3fe-44be-88e5-b1d26b5a1e55" name="applicationUsername" type="Data"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><display x="-360" y="-30" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b681213-d177-48e2-989a-b407d0baa256" name="applicationPassword" type="Data"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><display x="-360" y="0" w="180" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="32f65964-9b25-41c7-abb4-23a38dafa29b" name="Local Variables" type="Block"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="-75" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="51316809-8cde-4f02-bdcb-07398cfaf122" name="note" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><narrative>Launch the Application2 and get it ready to transact</narrative><display x="195" y="-105" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>b353e840-2804-4565-a09d-a07d972d8154</onsuccess></stage><stage stageid="b17d5c9d-ad98-4f5f-a3b6-53a0c05e9fe1" name="Which application?" type="ChoiceStart"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><display x="-195" y="-165" w="120" h="30" /><groupid>90128411-abfe-431e-a15d-82cdd252e5b0</groupid><choices><choice expression="[application] = &quot;Application1&quot;"><name>Lauch Application1</name><distance>90</distance><ontrue>5859588e-2b1e-4762-a234-0ead2c822413</ontrue></choice><choice expression="[application] = &quot;Application2&quot;"><name>Lauch Application2</name><distance>390</distance><ontrue>51316809-8cde-4f02-bdcb-07398cfaf122</ontrue></choice></choices></stage><stage stageid="86305f5c-431c-41ff-bd0a-b8b2121cb3d6" name="Otherwise" type="ChoiceEnd"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><display x="285" y="-165" w="120" h="30" /><onsuccess>32701b16-73b0-4d1f-b842-77e8089c5dd8</onsuccess><groupid>90128411-abfe-431e-a15d-82cdd252e5b0</groupid></stage><stage stageid="f47fa2b0-3bad-4bd4-9f68-9d0f1dad5252" name="Anchor11" type="Anchor"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><display x="-105" y="-195" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><onsuccess>73375d94-78a3-46e1-a160-13a4d40a27ed</onsuccess></stage><stage stageid="73375d94-78a3-46e1-a160-13a4d40a27ed" name="Anchor13" type="Anchor"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><display x="-195" y="-195" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><onsuccess>b17d5c9d-ad98-4f5f-a3b6-53a0c05e9fe1</onsuccess></stage><stage stageid="32701b16-73b0-4d1f-b842-77e8089c5dd8" name="SE: Unable to Start Application" type="Exception"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><display x="435" y="-165" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to Start Application &quot; &amp; [application]" /></stage><stage stageid="01d58de8-0758-44e2-813e-8b158e59741c" name="Input variables" type="Block"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="-180" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="008000" /></stage><stage stageid="fa255886-af45-496f-998d-358e6a7b8725" name="application" type="Data"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="-135" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1cd10694-b431-4b59-b349-0f22c95dbd10" name="connectionName" type="Data"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="-105" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff5f0bdb-1218-405f-b761-f7c1ca3fb224" name="Close Down Application" type="SubSheetInfo"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="-585" y="-180" w="330" h="90" /></stage><stage stageid="dc5522ca-c331-48e2-8c62-2a1c08fce554" name="Start" type="Start"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-210" /><inputs><input type="text" name="application" stage="application" /></inputs><onsuccess>a0d632cd-775c-4e1d-be8c-20db26301541</onsuccess></stage><stage stageid="9e3590af-7633-4c83-83d0-6817fc6d8005" name="Recover" type="Recover"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-120" y="30" /><onsuccess>783a6cf5-bcbb-423f-86bd-164586c2577a</onsuccess></stage><stage stageid="fa6ec59f-d93a-40a8-966b-e2f8a94ab8c2" name="Resume" type="Resume"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="0" y="120" /><onsuccess>8acbdd09-5c3c-4c7d-b1ff-714ca3ef4648</onsuccess></stage><stage stageid="e5eaa0ba-734e-435a-8b16-f61994100f05" name="Terminate Exception Handler" type="Block"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-315" y="-15" w="240" h="75" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="783a6cf5-bcbb-423f-86bd-164586c2577a" name="Note2" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><narrative>Unable to safely close down the application.</narrative><display x="0" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>fa6ec59f-d93a-40a8-966b-e2f8a94ab8c2</onsuccess></stage><stage stageid="0cdce333-851e-4220-b0be-ce0396828aa9" name="Recover" type="Recover"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-120" y="165" /><onsuccess>9992dba8-35d6-49ee-b99a-e64ab37a18c7</onsuccess></stage><stage stageid="61dc1209-73e3-4bbf-ba5e-d318e97fb799" name="Resume" type="Resume"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="0" y="210" /><onsuccess>3e06f52e-96c3-46eb-a8fe-92e8e78a276b</onsuccess></stage><stage stageid="8acbdd09-5c3c-4c7d-b1ff-714ca3ef4648" name="Kill Application1 Process" type="Action"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="120" w="120" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="[application1ProcessName]" /></inputs><onsuccess>4f17bfcb-9de0-4719-956f-4fe5870c9a85</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="c18b9a1c-ab78-4107-ae1e-c47b593fc8f6" name="End4" type="End"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-240" y="315" /></stage><stage stageid="be50480a-a78a-4d48-a48b-43f408185ade" name="Anchor1" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-345" y="30" w="10" h="10" /><onsuccess>4f17bfcb-9de0-4719-956f-4fe5870c9a85</onsuccess></stage><stage stageid="4f17bfcb-9de0-4719-956f-4fe5870c9a85" name="Anchor1" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-345" y="120" w="10" h="10" /><onsuccess>17aa7457-3672-4f55-b09f-1281691bcee6</onsuccess></stage><stage stageid="da60a423-7e12-4d42-9e19-9c5267010b86" name="Kill Exception Handler" type="Block"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-315" y="75" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="172b0411-c8d9-4948-8e69-42debc0d9c2b" name="Settings Variables" type="Block"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-600" y="-120" w="180" h="135" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="9992dba8-35d6-49ee-b99a-e64ab37a18c7" name="Note2" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><narrative>Unable to kill the application.</narrative><display x="0" y="165" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>61dc1209-73e3-4bbf-ba5e-d318e97fb799</onsuccess></stage><stage stageid="8eec7879-8df7-40ca-9819-84d5e5226622" name="Input variables" type="Block"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="-600" y="30" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="008000" /></stage><stage stageid="4f4ba2e7-493e-4e3c-9ce1-9697acf1d276" name="application" type="Data"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="-510" y="75" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7c2bea9-ac0b-48e0-ad4a-a2c9274f861e" name="Recover" type="Recover"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="330" y="30" /><onsuccess>9f3f2d43-f20c-4661-bbab-68d94175a9ca</onsuccess></stage><stage stageid="eefc38c4-3876-4fa0-aa99-e0ae1a535985" name="Resume" type="Resume"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="465" y="120" /><onsuccess>62c415aa-078e-4aa6-bd9f-6d70cd5ef30c</onsuccess></stage><stage stageid="7ff3db05-8439-405a-9083-1a3f57cf9fd0" name="Terminate Exception Handler" type="Block"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="135" y="-15" w="240" h="75" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e85cc34f-a0d5-4aee-aa6c-001582e7f719" name="Recover" type="Recover"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="330" y="165" /><onsuccess>d6180081-7bfb-498b-b337-941af155689d</onsuccess></stage><stage stageid="3706b720-e79e-4b1c-acce-2b144c02d011" name="Resume" type="Resume"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="465" y="210" /><onsuccess>5e9696ca-6da2-4ed7-9561-cfdc219bbce6</onsuccess></stage><stage stageid="62c415aa-078e-4aa6-bd9f-6d70cd5ef30c" name="Kill Application2 Process" type="Action"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="210" y="120" w="120" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="[application2ProcessName]" /></inputs><onsuccess>a5229d37-0a83-478c-ae06-9fdf2eb21d5a</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="5ae25512-b416-4a5e-b468-2962a0358a96" name="Anchor1" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="105" y="30" w="10" h="10" /><onsuccess>a5229d37-0a83-478c-ae06-9fdf2eb21d5a</onsuccess></stage><stage stageid="38d506a0-126c-4b0f-9927-90c52d3ab9f2" name="Anchor1" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="105" y="255" w="10" h="10" /><onsuccess>3e06f52e-96c3-46eb-a8fe-92e8e78a276b</onsuccess></stage><stage stageid="08ac2d5c-00cc-427e-bfe3-b012b9bf6388" name="Kill Exception Handler" type="Block"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="135" y="75" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="17aa7457-3672-4f55-b09f-1281691bcee6" name="Anchor16" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-345" y="255" w="10" h="10" /><onsuccess>17d92319-761f-4043-8bb3-f9e274983471</onsuccess></stage><stage stageid="5e9696ca-6da2-4ed7-9561-cfdc219bbce6" name="Anchor20" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="465" y="255" w="10" h="10" /><onsuccess>38d506a0-126c-4b0f-9927-90c52d3ab9f2</onsuccess></stage><stage stageid="a5229d37-0a83-478c-ae06-9fdf2eb21d5a" name="Anchor21" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="105" y="120" w="10" h="10" /><onsuccess>38d506a0-126c-4b0f-9927-90c52d3ab9f2</onsuccess></stage><stage stageid="6b8daaee-a86e-40b9-b269-f8be89e520e4" name="note" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><narrative>APPLICATION'S PROCESS NAMES</narrative><display x="-510" y="-75" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="9f3f2d43-f20c-4661-bbab-68d94175a9ca" name="Note2" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><narrative>Unable to safely close down the application.</narrative><display x="465" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>eefc38c4-3876-4fa0-aa99-e0ae1a535985</onsuccess></stage><stage stageid="d6180081-7bfb-498b-b337-941af155689d" name="Note2" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><narrative>Unable to kill the application.</narrative><display x="465" y="165" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>3706b720-e79e-4b1c-acce-2b144c02d011</onsuccess></stage><stage stageid="3e06f52e-96c3-46eb-a8fe-92e8e78a276b" name="Anchor12" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="0" y="255" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="808080" /><onsuccess>17d92319-761f-4043-8bb3-f9e274983471</onsuccess></stage><stage stageid="07f0e716-f877-4d23-87c9-797ff5bf1267" name="ENV_PROCESSID_application2_CredentialName" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1740" w="180" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="3b4c37d6-881c-442d-acc4-739cecfa31dd" name="application2CredentialName" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="-1740" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="7385b924-89e0-491f-b57d-74d30d5dcdb2" name="Send Start Email" type="SubSheetInfo"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><display x="-300" y="-105" w="360" h="90" /></stage><stage stageid="d3e1a108-80b7-4dc9-959b-38f4cd57548f" name="Start" type="Start"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><display x="45" y="-135" /><onsuccess>07274ff5-0495-47e2-99bf-c5fb64628afc</onsuccess></stage><stage stageid="01ccf3fe-344f-48a9-a971-29db2a0aa1eb" name="End" type="End"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><display x="45" y="210" /></stage><stage stageid="bf301733-8942-44d2-a722-b8439fffb51c" name="Load Enviroment Data" type="MultipleCalculation"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1410" w="120" h="60" /><onsuccess>ada5c859-043b-4a2d-b6a6-0f0d8f0ea427</onsuccess><steps><calculation expression="Replace([ENV_GENERAL_RootPath], &quot;$value1$&quot;, [currentUser]) &amp; [automationID] &amp; &quot;\&quot;" stage="automationRootPath" /><calculation expression="[ENV_GENERAL_SupportFiles]" stage="folderNameSupportFiles" /><calculation expression="[ENV_GENERAL_WorkFolder]" stage="folderNameWork" /><calculation expression="[ENV_GENERAL_Reports]" stage="folderNameReports" /><calculation expression="[ENV_GENERAL_Screenshots]" stage="folderNameScreenshots" /><calculation expression="[ENV_PROCESSID_maximumQueueAttempts]" stage="maximumQueueAttempts" /><calculation expression="[ENV_PROCESSID_application1_CredentialName]" stage="application1CredentialName" /><calculation expression="[ENV_PROCESSID_application2_CredentialName]" stage="application2CredentialName" /><calculation expression="[ENV_PROCESSID_EmailBusinessTeam]" stage="emailBusinessTeam" /><calculation expression="[ENV_PROCESSID_AutomationSubjectEmail]" stage="automationSubjectEmail" /><calculation expression="[ENV_PROCESSID_EmailInital]" stage="initialEmailTeam" /><calculation expression="[ENV_PROCESSID_DataSource]" stage="dataSource" /></steps></stage><stage stageid="dd96d2ce-4506-4613-a844-fb48a40d1198" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>DATA HTML TEXT</narrative><display x="-150" y="-810" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="07274ff5-0495-47e2-99bf-c5fb64628afc" name="note" type="Note"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><narrative>Sending the automation start email</narrative><display x="45" y="-90" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>3b3c7099-24d0-47ab-968e-44c503a7f55e</onsuccess></stage><stage stageid="3b3c7099-24d0-47ab-968e-44c503a7f55e" name="Set Start HTML" type="MultipleCalculation"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="45" y="-45" w="120" h="30" /><onsuccess>9d855625-df89-43a7-b0f8-da1cd4ad0100</onsuccess><steps><calculation expression="Today() &amp; &quot; - &quot; &amp; LocalTime()" stage="automationInitialTime" /><calculation expression="Replace(&quot;INSERT_HTML&quot;, &quot;$value1$&quot;, &quot;INSERT_ASSUNTO&quot;)" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value2$&quot;, [automationInitialTime])" stage="htmlBody" /></steps></stage><stage stageid="9d855625-df89-43a7-b0f8-da1cd4ad0100" name="Send Email" type="Action"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="45" y="15" w="120" h="30" /><inputs><input type="text" name="To" friendlyname="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" expr="[initialEmailTeam]" /><input type="text" name="CC" friendlyname="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="" /><input type="text" name="BCC" friendlyname="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="" /><input type="text" name="Subject" friendlyname="Subject" narrative="Optional. Any alphanumeric value allowed." expr="Replace([automationSubjectEmail], &quot;$value1$&quot;, [initialSubject])" /><input type="text" name="Message" friendlyname="Message" narrative="Optional, HTML or plain text" expr="[htmlBody]" /><input type="text" name="Attachments" friendlyname="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." expr="" /><input type="flag" name="IsHTML" friendlyname="IsHTML" narrative="Optional. True or False, default to True" expr="True" /><input type="number" name="Sensitivity" friendlyname="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." expr="" /><input type="number" name="Importance" friendlyname="Importance" narrative="Optional. An integer between 0 and 2 default to 1." expr="" /><input type="text" name="Account Display Name" friendlyname="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="" /></inputs><onsuccess>01ccf3fe-344f-48a9-a971-29db2a0aa1eb</onsuccess><breakpoint type="0"><condition></condition></breakpoint><resource object="MS Outlook Email VBO" action="Send Email" /></stage><stage stageid="da35a843-83c8-4151-bc81-6f15f9f08696" name="Retry?" type="Decision"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="315" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><breakpoint type="0"><condition></condition></breakpoint><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>37bb8188-2f92-48b2-be0a-2b715143d4b6</ontrue><onfalse>8ddce70a-e504-47de-ac4c-779f4b11dd04</onfalse></stage><stage stageid="81f3185b-79b3-47d0-9d92-d25e7da8ff59" name="Resume" type="Resume"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="165" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>da35a843-83c8-4151-bc81-6f15f9f08696</onsuccess></stage><stage stageid="8a5be51f-be86-4b0b-8e21-fd36f964a5c0" name="Sleep" type="Action"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="315" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>9d855625-df89-43a7-b0f8-da1cd4ad0100</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="37bb8188-2f92-48b2-be0a-2b715143d4b6" name="Note8" type="Note"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="315" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>beccd48d-ce3e-4652-8e4b-abd1d1557e58</onsuccess></stage><stage stageid="8ddce70a-e504-47de-ac4c-779f4b11dd04" name="Note8" type="Note"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="315" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>01ccf3fe-344f-48a9-a971-29db2a0aa1eb</onsuccess></stage><stage stageid="a7f003b5-0a61-49b0-a48a-1354126986c7" name="Local Variables" type="Block"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="-300" y="75" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="ce025e97-1a92-4ef0-943d-6ab2ebafb955" name="retryCounter" type="Data"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="120" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="eb4dee46-48cf-4804-b1ec-eb46debdc9be" name="note" type="Note"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><narrative>SETTINGS VARIABLE</narrative><display x="-210" y="0" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="b0271b92-14db-4ace-8bc9-d3fde29c5e72" name="Settings Variables" type="Block"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><display x="-300" y="-45" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="59f8caa2-8495-4b29-b36f-e2d6e8c21a8c" name="Recover" type="Recover"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit /><display x="165" y="60" /><onsuccess>d6eb9fa4-59a3-4b31-abd3-616065fcc79a</onsuccess></stage><stage stageid="f910352a-1272-46eb-ab6b-d04081b6553a" name="Excel Exception Handler" type="Block"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-15" w="240" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="db783394-f065-4f8e-93e5-9e985f8eae39" name="htmlBody" type="Data"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="150" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47688d74-7469-465e-9674-94910d7a5017" name="Append Rows to Collection" type="Action"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="15" y="120" w="120" h="30" /><inputs><input type="collection" name="Main Collection" friendlyname="Main Collection" narrative="The collection to append to." expr="[reportCollection]" /><input type="collection" name="Collection to Append" friendlyname="Collection to Append" narrative="The collection to append." expr="[itemData]" /></inputs><outputs><output type="collection" name="Combined Collection" friendlyname="Combined Collection" narrative="The combined collection." stage="reportCollection" /></outputs><onsuccess>8f8cb420-86dd-45ac-9c6b-e1da2702d3ed</onsuccess><resource object="Utility - Collection Manipulation" action="Append Rows to Collection" /></stage><stage stageid="de5b11f8-96a8-43ec-b33d-2ec5499f4ecd" name="Set status" type="Action"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="15" y="15" w="120" h="30" /><inputs><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="[queueStatus]" /><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /></inputs><onsuccess>c594ce0b-404e-4eee-9c52-7f9df0eb0222</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="a580a076-2ba2-4c0f-bc94-8bb3bb3ff6f9" name="queueStatus" type="Data"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-120" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Not Proccessed Due To Timeout</initialvalue><private /><alwaysinit /></stage><stage stageid="3aa78e86-1e55-49d1-bca9-2eefcdd7e6a1" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>FILES NAME</narrative><display x="-345" y="-1275" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="37439ead-07a6-4363-8a04-6524c381ffd6" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>FILES NAME</narrative><display x="-150" y="-1275" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="a2fa7d4a-5a94-458e-a6be-d61be4706bee" name="Which Step?" type="ChoiceStart"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="330" y="-705" w="120" h="30" /><groupid>67652e36-ef8f-40c3-afca-f8b77c0ea2d9</groupid><choices><choice expression="[itemStatus] = &quot;&quot;"><name>Step 1/3</name><distance>45</distance><ontrue>9608fdb2-6205-4fec-8fe8-26691a5ae2c6</ontrue></choice><choice expression="[itemStatus] = [queueStatus1]"><name>Step 2/3</name><distance>90</distance><ontrue>bc17fc6d-6b5f-43fe-bba4-f5ca05c4f52e</ontrue></choice><choice expression="[itemStatus] = [queueStatus2]"><name>Step 3/3</name><distance>135</distance><ontrue>239016ba-c3ab-4295-8885-36f8870e6dd3</ontrue></choice></choices></stage><stage stageid="f75ed537-2782-493e-8191-ec36fb9b12fd" name="Otherwise" type="ChoiceEnd"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="330" y="-525" w="120" h="30" /><onsuccess>c90a23dd-2291-43f0-9313-c016bb92cd37</onsuccess><groupid>67652e36-ef8f-40c3-afca-f8b77c0ea2d9</groupid></stage><stage stageid="9150b686-2755-492e-ba3d-79317af1bf7f" name="Anchor22" type="Anchor"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="570" y="-660" w="10" h="10" /><onsuccess>64d8a643-ef45-4cbc-a236-ea4c94e83a78</onsuccess></stage><stage stageid="64d8a643-ef45-4cbc-a236-ea4c94e83a78" name="Anchor22" type="Anchor"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="570" y="-615" w="10" h="10" /><onsuccess>5869875f-7332-4d54-8399-ec4752fda962</onsuccess></stage><stage stageid="96a5d39b-0f28-4da5-b1b6-b55c4ee5d423" name="Anchor22" type="Anchor"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="570" y="-480" w="10" h="10" /><onsuccess>720c10e8-47bb-4dec-a9cc-d9538f0d361f</onsuccess></stage><stage stageid="bdb6306e-516c-4651-b12f-476068b7d76e" name="queueStatus1" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-585" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">1/3 - Step 1 Performed</initialvalue><alwaysinit /></stage><stage stageid="94236096-6606-4a74-9ace-8c3c8d87539f" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>QUEUE STATUS</narrative><display x="-150" y="-630" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="2da7163b-bd03-4106-b62f-9a8b2674f85a" name="queueStatus2" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-555" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">2/3 - Step 1 Performed</initialvalue><alwaysinit /></stage><stage stageid="dbee44de-7066-41f0-8742-d28c5dda1bc9" name="queueStatus3" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-525" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">3/3 - Step 1 Performed</initialvalue><alwaysinit /></stage><stage stageid="bc17fc6d-6b5f-43fe-bba4-f5ca05c4f52e" name="Update ItemData" type="MultipleCalculation"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="480" y="-615" w="120" h="30" /><onsuccess>64d8a643-ef45-4cbc-a236-ea4c94e83a78</onsuccess><steps><calculation expression="&quot;Exceção&quot;" stage="itemData.status" /><calculation expression="&quot;SIM&quot;" stage="itemData.reportToBU" /><calculation expression="&quot;Resultado do processamento para a etapa 2/3&quot;" stage="itemData.results" /><calculation expression="[exceptionDetails]" stage="itemData.exceptionDetails" /></steps></stage><stage stageid="9608fdb2-6205-4fec-8fe8-26691a5ae2c6" name="Update ItemData" type="MultipleCalculation"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="480" y="-660" w="120" h="30" /><onsuccess>9150b686-2755-492e-ba3d-79317af1bf7f</onsuccess><steps><calculation expression="&quot;Exceção&quot;" stage="itemData.status" /><calculation expression="&quot;SIM&quot;" stage="itemData.reportToBU" /><calculation expression="&quot;Resultado do processamento para a etapa 1/3&quot;" stage="itemData.results" /><calculation expression="[exceptionDetails]" stage="itemData.exceptionDetails" /></steps></stage><stage stageid="67b68469-3f9e-4762-976c-81732938f6ff" name="automationSubjectEmail" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="-1590" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="31f42d0b-d4c4-4c1c-8dde-d6de01c56274" name="ENV_PROCESSID_AutomationSubjectEmail" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1590" w="180" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /></stage><stage stageid="c0a87988-f6d5-4f9f-910f-609bcde2a4a1" name="initialSubject" type="Data"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="45" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Inicializado</initialvalue><private /><alwaysinit /></stage><stage stageid="c90a23dd-2291-43f0-9313-c016bb92cd37" name="BE: item status not found" type="Exception"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><display x="480" y="-525" w="120" h="30" /><exception type="Business Exception" detail="&quot;BE: item status (&quot;&amp; [itemStatus] &amp; &quot;) not found in the decision &quot;&quot;Which Step&quot;&quot; at Main Page&quot;" /></stage><stage stageid="75e9ae7e-afa5-4cfb-9d3d-d942b8d57b7f" name="Send Email" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="930" w="120" h="30" /><inputs><input type="text" name="To" friendlyname="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" expr="[emailBusinessTeam]" /><input type="text" name="CC" friendlyname="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="" /><input type="text" name="BCC" friendlyname="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="" /><input type="text" name="Subject" friendlyname="Subject" narrative="Optional. Any alphanumeric value allowed." expr="Replace([automationSubjectEmail], &quot;$value1$&quot;, [finalSubject])" /><input type="text" name="Message" friendlyname="Message" narrative="Optional, HTML or plain text" expr="[htmlBody]" /><input type="text" name="Attachments" friendlyname="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." expr="[pathReportFile]" /><input type="flag" name="IsHTML" friendlyname="IsHTML" narrative="Optional. True or False, default to True" expr="True" /><input type="number" name="Sensitivity" friendlyname="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." expr="" /><input type="number" name="Importance" friendlyname="Importance" narrative="Optional. An integer between 0 and 2 default to 1." expr="" /><input type="text" name="Account Display Name" friendlyname="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="" /></inputs><onsuccess>5935e3e4-b996-4067-99cb-5ff9aff74de7</onsuccess><breakpoint type="0"><condition></condition></breakpoint><resource object="MS Outlook Email VBO" action="Send Email" /></stage><stage stageid="978d8f7c-d82b-447e-817d-b1c23b460dd1" name="Retry?" type="Decision"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="315" y="1095" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><breakpoint type="0"><condition></condition></breakpoint><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>8c219424-6a3d-4173-a23b-bbb1c4c743d2</ontrue><onfalse>977db76b-e082-4ad3-bbc7-6fee72fd4052</onfalse></stage><stage stageid="4378819f-fc4f-4c91-8a18-2a9bc545cdeb" name="Resume" type="Resume"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="165" y="1095" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>978d8f7c-d82b-447e-817d-b1c23b460dd1</onsuccess></stage><stage stageid="e8140f4b-3f64-47b9-a84d-b360c94f3f8c" name="Sleep" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="315" y="930" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>75e9ae7e-afa5-4cfb-9d3d-d942b8d57b7f</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="8c219424-6a3d-4173-a23b-bbb1c4c743d2" name="Note8" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="315" y="1035" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>e9d7778e-9478-4855-8f73-9904852f4a7b</onsuccess></stage><stage stageid="977db76b-e082-4ad3-bbc7-6fee72fd4052" name="Note8" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="315" y="1140" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>4f14d5bd-f16c-4771-8e54-455be849f1cc</onsuccess></stage><stage stageid="42028d35-6652-4e57-84ef-cf4127e4f12a" name="Recover" type="Recover"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit /><display x="165" y="975" /><onsuccess>dac76f5d-987d-48ed-afc3-4a8c403bdbf9</onsuccess></stage><stage stageid="0db84eed-cdc9-42b7-928f-7a1cf6ea9636" name="Excel Exception Handler" type="Block"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="900" w="285" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c8fab09a-3a19-4ac4-b2d9-c5db1a6cab81" name="htmlBody" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="105" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a02fa1a-03b5-419b-8b39-efcd988633e5" name="finalSubject" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="-165" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Finalizado</initialvalue><private /><alwaysinit /></stage><stage stageid="c34ba0e8-b876-433f-9286-9c302c5d87a9" name="Set HTML Body" type="MultipleCalculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="810" w="120" h="30" /><onsuccess>86bb281b-b1c0-4de5-bd34-0fe9b4bc9ab3</onsuccess><steps><calculation expression="Replace(&quot;INSERT_HTML&quot;, &quot;$value1$&quot;, &quot;INSERT_ASSUNTO&quot;)" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value2$&quot;, [htmlResultColor])" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value3$&quot;, [htmlFinalStatus])" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value4$&quot;,[automationInitialTime])" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value5$&quot;, Today() &amp; &quot; - &quot; &amp; LocalTime())" stage="htmlBody" /></steps></stage><stage stageid="92650d13-5bff-4bb1-9472-f009a14db83d" name="htmlFinalStatus" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="165" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee9eb3-e66a-48c8-aa5d-4aad90c4e20b" name="htmlResultColor" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-405" y="135" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30545ed3-28a4-460b-aa9b-a387c32bdc2e" name="filterResults" type="Collection"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="-405" y="225" w="180" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="67350598-b85b-45bd-ac62-32841dd50a9e" name="amountRows" type="Data"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="-405" y="195" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e89eb50-a8e5-4ead-8623-db35e4b43e4d" name="Set Finalizado" type="MultipleCalculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="165" y="720" w="120" h="30" /><onsuccess>1a73897f-e5b3-498a-ae6a-ff7cc63f1e4d</onsuccess><steps><calculation expression="&quot;#ADC187&quot;" stage="htmlResultColor" /><calculation expression="&quot;SUCESSO&quot;" stage="htmlFinalStatus" /></steps></stage><stage stageid="cdef10e7-2bda-475b-8962-1676641ed1fa" name="Need to be validated?" type="Decision"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="15" y="720" w="120" h="30" /><decision expression="[amountRows] &lt;&gt; 0" /><ontrue>0e9ff002-8049-4bfe-8ac8-02e4cf3b892e</ontrue><onfalse>9e89eb50-a8e5-4ead-8623-db35e4b43e4d</onfalse></stage><stage stageid="0e9ff002-8049-4bfe-8ac8-02e4cf3b892e" name="Set Validação" type="MultipleCalculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="765" w="120" h="30" /><onsuccess>c34ba0e8-b876-433f-9286-9c302c5d87a9</onsuccess><steps><calculation expression="&quot;#FFEB81&quot;" stage="htmlResultColor" /><calculation expression="&quot;VALIDAR&quot;" stage="htmlFinalStatus" /></steps></stage><stage stageid="e8e8f02d-7725-4065-b137-282904185a83" name="Filter Collection" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="630" w="120" h="30" /><inputs><input type="collection" name="Input Collection" friendlyname="Input Collection" expr="[reportCollection]" /><input type="text" name="Filter" friendlyname="Filter" expr="&quot;[status] like '%Exceção%' OR&#xA;[reportToBU] like '%SIM%'&quot;" /></inputs><outputs><output type="collection" name="Collection Output" friendlyname="Collection Output" stage="filterResults" /></outputs><onsuccess>98a5a4bb-c1b7-4808-8760-2ca24dab1cf7</onsuccess><resource object="EY_FilterCollectionAsSQL" action="Code: Filter Collection" /></stage><stage stageid="98a5a4bb-c1b7-4808-8760-2ca24dab1cf7" name="Count filterResults Rows" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="675" w="120" h="30" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;filterResults&quot;" /></inputs><outputs><output type="number" name="Count" friendlyname="Count" narrative="The number of rows counted in the collection" stage="amountRows" /></outputs><onsuccess>cdef10e7-2bda-475b-8962-1676641ed1fa</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="1a73897f-e5b3-498a-ae6a-ff7cc63f1e4d" name="Anchor29" type="Anchor"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="165" y="810" w="10" h="10" /><onsuccess>c34ba0e8-b876-433f-9286-9c302c5d87a9</onsuccess></stage><stage stageid="4af6babc-b255-42e1-9446-2bf8ef5c6f61" name="automationInitialTime" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-765" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="17d92319-761f-4043-8bb3-f9e274983471" name="Wait" type="Action"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="255" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>c18b9a1c-ab78-4107-ae1e-c47b593fc8f6</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="391993ba-cd35-4f4a-984a-0073ea4be272" name="Set Control Variables" type="MultipleCalculation"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="0" y="45" w="120" h="30" /><onsuccess>1c6f64b1-9d52-4c1e-8d2d-2f2e88bcbcca</onsuccess><steps><calculation expression="[retryCounter] + 1" stage="retryCounter" /><calculation expression="&quot;RESTART&quot;" stage="applicationControl" /></steps></stage><stage stageid="4f14d5bd-f16c-4771-8e54-455be849f1cc" name="AF: Unable to perform Action 'Send Email'" type="Exception"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="315" y="1185" w="120" h="30" /><exception localized="yes" type="Action Failed" detail="&quot;AF: Unable to perform Action 'Send Email'.&quot;" /></stage><stage stageid="e9d7778e-9478-4855-8f73-9904852f4a7b" name="retryCounter++" type="Calculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="315" y="975" w="120" h="30" /><onsuccess>e8140f4b-3f64-47b9-a84d-b360c94f3f8c</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="3478773d-a0c5-4531-862d-bdcf8802c0c0" name="Reset retryCounter" type="Calculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit /><display x="15" y="585" w="120" h="30" /><onsuccess>e8e8f02d-7725-4065-b137-282904185a83</onsuccess><calculation expression="0" stage="retryCounter" /></stage><stage stageid="beccd48d-ce3e-4652-8e4b-abd1d1557e58" name="retryCounter++" type="Calculation"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="315" y="60" w="120" h="30" /><onsuccess>8a5be51f-be86-4b0b-8e21-fd36f964a5c0</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="5869875f-7332-4d54-8399-ec4752fda962" name="Anchor22" type="Anchor"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="570" y="-570" w="10" h="10" /><onsuccess>96a5d39b-0f28-4da5-b1b6-b55c4ee5d423</onsuccess></stage><stage stageid="6526fca2-d556-4ab2-b7e9-310c14fa90f9" name="Kill Excel" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="&quot;EXCEL&quot;" /></inputs><onsuccess>48d42fd9-6168-47a1-bc44-05146cbc997e</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="6a5985d2-dd2e-46e3-9a61-4796950bb32a" name="Global Exception Handler" type="SubSheetInfo"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="-450" y="-480" w="360" h="90" /></stage><stage stageid="60e18a43-6308-4004-9fdc-002fd8c2ee25" name="Start" type="Start"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="-15" y="-510" /><onsuccess>653bf786-e96c-4a0f-b021-2a445cb6db0c</onsuccess></stage><stage stageid="78cda41a-3074-458c-8494-82b42f7bbcc4" name="End" type="End"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="-15" y="510" /></stage><stage stageid="518cb253-f186-4595-9a23-80e81999a63e" name="Recover" type="Recover"><loginhibit /><display x="345" y="-660" /><onsuccess>bd363d17-c502-4284-9759-c07e66d6fc84</onsuccess></stage><stage stageid="066ec272-173a-4cf4-b6ba-03e99f293e46" name="note" type="Note"><loginhibit onsuccess="true" /><narrative>Global Exception Handler</narrative><display x="345" y="-705" w="150" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /></stage><stage stageid="666c1e73-9cee-4bff-9e81-05147e848c31" name="Global Exception Handler" type="SubSheet"><loginhibit onsuccess="true" /><display x="345" y="-555" w="90" h="60" /><onsuccess>99049597-f791-479d-a61d-0086be7eebe9</onsuccess><breakpoint type="0"><condition></condition></breakpoint><processid>1f15f6a2-37df-465c-8b7f-cb2292377042</processid></stage><stage stageid="99049597-f791-479d-a61d-0086be7eebe9" name="TERMINATE" type="Exception"><display x="345" y="-495" w="90" h="30" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9d6eaf35-a04c-4a52-a8ed-20720b64161b" name="Write Collection" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="75" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection containing the data which should be written to the worksheet." expr="[reportCollection]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." expr="[workbookName]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." expr="[worksheetName]" /><input type="text" name="Cell Reference" friendlyname="Cell Reference" narrative="The reference at which the collection should be written." expr="[cellReferenceToWrite]" /><input type="flag" name="Include Column Names" friendlyname="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." expr="False" /></inputs><onsuccess>e3392faf-7737-40f4-8efb-9d17c630c670</onsuccess><resource object="MS Excel VBO" action="Write Collection" /></stage><stage stageid="7831d2cb-81f9-47cf-b8cc-88972bf775d5" name="Create Excel Instance" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-105" w="120" h="30" /><inputs><input type="flag" name="Enable Events" friendlyname="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="False" /></inputs><outputs><output type="number" name="handle" friendlyname="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="excelHandler" /></outputs><onsuccess>0aee8877-8509-4138-82bb-7a52c343f17d</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="0aee8877-8509-4138-82bb-7a52c343f17d" name="Open Workbook" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="File name" friendlyname="File name" narrative="The path and name of the file which should be opened." expr="[pathReportFile]" /></inputs><outputs><output type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookName" /></outputs><onsuccess>5a5bdfe7-3dcc-457c-ade2-d4199018b3d9</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="5a5bdfe7-3dcc-457c-ade2-d4199018b3d9" name="Activate Worksheet" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookName]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetName]" /><input type="flag" name="Create If Missing?" friendlyname="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>6b5e62aa-dfc7-42ab-a44b-699586d9e904</onsuccess><resource object="MS Excel VBO" action="Activate Worksheet" /></stage><stage stageid="8f620b78-5573-47c0-9f1c-2d48bb54bfb5" name="Close Workbook" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="255" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be closed." expr="[workbookName]" /><input type="flag" name="Save Data" friendlyname="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." expr="False" /></inputs><onsuccess>37f97966-783c-4475-ab0a-6a3e95f0cc05</onsuccess><resource object="MS Excel VBO" action="Close Workbook" /></stage><stage stageid="37f97966-783c-4475-ab0a-6a3e95f0cc05" name="Close All Instances" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="300" w="120" h="30" /><onsuccess>e6bd94be-6f68-4f2d-a442-0eed39a8f969</onsuccess><resource object="MS Excel VBO" action="Close All Instances" /></stage><stage stageid="6b5e62aa-dfc7-42ab-a44b-699586d9e904" name="Run &quot;openHiddenColumns&quot; Macro" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="30" w="120" h="30" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="&quot;openHiddenColumns&quot;" /></inputs><onsuccess>9d6eaf35-a04c-4a52-a8ed-20720b64161b</onsuccess><resource object="MS Excel VBO" action="Run Macro" /></stage><stage stageid="652e640e-ae3c-43a4-8e0c-cc94b4a727a1" name="Save Workbook" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="210" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be saved" expr="[workbookName]" /></inputs><onsuccess>8f620b78-5573-47c0-9f1c-2d48bb54bfb5</onsuccess><resource object="MS Excel VBO" action="Save Workbook" /></stage><stage stageid="a10a4b47-093e-46c5-a256-222ea3948b59" name="Run &quot;closeHiddenColumns&quot; Macro" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="165" w="120" h="30" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="&quot;closeHiddenColumns&quot;" /></inputs><onsuccess>652e640e-ae3c-43a4-8e0c-cc94b4a727a1</onsuccess><resource object="MS Excel VBO" action="Run Macro" /></stage><stage stageid="e3392faf-7737-40f4-8efb-9d17c630c670" name="Run &quot;formatTimeSpan&quot; Macro" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="120" w="120" h="30" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="&quot;formatTimeSpan&quot;" /></inputs><onsuccess>a10a4b47-093e-46c5-a256-222ea3948b59</onsuccess><resource object="MS Excel VBO" action="Run Macro" /></stage><stage stageid="d656f37e-3741-4c1f-bb12-0912e8f1c840" name="Has iterations to report?" type="Decision"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="-15" y="-240" w="120" h="30" /><decision expression="[amountRows] &lt;&gt; 0" /><ontrue>2098ebc3-5d4e-49e7-a43b-dae95009ffcd</ontrue><onfalse>87958abc-c68a-4759-a3f3-59c52deb8438</onfalse></stage><stage stageid="77955f79-812a-4b4f-ad01-1a26fdeda16b" name="note" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>Build &amp; Dispatch Report</narrative><display x="-15" y="-330" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>25cdcf42-135b-416d-b399-ec6367b7aec1</onsuccess></stage><stage stageid="e6bd94be-6f68-4f2d-a442-0eed39a8f969" name="note" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>Dispatch Report</narrative><display x="-15" y="360" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>82888e9c-679d-4b54-9f69-475ad8d7eae8</onsuccess></stage><stage stageid="aa88caa7-a43f-4335-9e9e-328f0f653952" name="Send Email" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="450" w="120" h="30" /><inputs><input type="text" name="To" friendlyname="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" expr="[emailBusinessTeam]" /><input type="text" name="CC" friendlyname="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="" /><input type="text" name="BCC" friendlyname="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="" /><input type="text" name="Subject" friendlyname="Subject" narrative="Optional. Any alphanumeric value allowed." expr="Replace([automationSubjectEmail], &quot;$value1$&quot;, [finalSubject])" /><input type="text" name="Message" friendlyname="Message" narrative="Optional, HTML or plain text" expr="[htmlBody]" /><input type="text" name="Attachments" friendlyname="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." expr="[pathReportFile]" /><input type="flag" name="IsHTML" friendlyname="IsHTML" narrative="Optional. True or False, default to True" expr="True" /><input type="number" name="Sensitivity" friendlyname="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." expr="" /><input type="number" name="Importance" friendlyname="Importance" narrative="Optional. An integer between 0 and 2 default to 1." expr="" /><input type="text" name="Account Display Name" friendlyname="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="" /></inputs><onsuccess>78cda41a-3074-458c-8494-82b42f7bbcc4</onsuccess><resource object="MS Outlook Email VBO" action="Send Email" /></stage><stage stageid="82888e9c-679d-4b54-9f69-475ad8d7eae8" name="Set HTML Body" type="MultipleCalculation"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="405" w="120" h="30" /><onsuccess>aa88caa7-a43f-4335-9e9e-328f0f653952</onsuccess><steps><calculation expression="&quot;#F3CBCB&quot;" stage="htmlResultColor" /><calculation expression="&quot;FALHA CRÍTICA&quot;" stage="htmlFinalStatus" /><calculation expression="Replace(&quot;INSERT_HTML&quot;, &quot;$value1$&quot;, &quot;INSERT_ASSUNTO&quot;)" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value2$&quot;, [htmlResultColor])" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value3$&quot;, [htmlFinalStatus])" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value4$&quot;,[automationInitialTime])" stage="htmlBody" /><calculation expression="Replace([htmlBody], &quot;$value5$&quot;, Today() &amp; &quot; - &quot; &amp; LocalTime())" stage="htmlBody" /></steps></stage><stage stageid="a86dd6a9-4db9-4796-9d2e-e1acf65c6951" name="Anchor27" type="Anchor"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="360" w="10" h="10" /><onsuccess>e6bd94be-6f68-4f2d-a442-0eed39a8f969</onsuccess></stage><stage stageid="6c19caac-7d81-4831-a1d7-c24811e7c62f" name="excelHandler" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="-360" y="-90" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b836586b-c576-4963-8e28-a77e597a1e6c" name="workbookName" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="-360" y="-60" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="183add3d-fc38-4cf1-993a-c29c3fcffec1" name="Setting Variables" type="Block"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="-420" w="180" h="225" /></stage><stage stageid="d623a02c-657f-4f6f-9a7c-1ef7fa87fc5a" name="Local Variables" type="Block"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-450" y="-180" w="180" h="315" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="38daf53e-db89-4dfb-b081-f0cbc3d70e1b" name="cellReferenceToWrite" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="-330" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">H17</initialvalue><private /><alwaysinit /></stage><stage stageid="497da238-d2aa-4e43-88c0-c62c7b164ba6" name="worksheetName" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="-300" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">CONSOLIDADO</initialvalue><private /><alwaysinit /></stage><stage stageid="92ba3961-fbed-4dc8-836f-2a91f1ee56ea" name="note" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>REPORT SETTING VARIABLES</narrative><display x="-360" y="-375" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="1f135129-022b-4c29-88df-e2cfeb287229" name="note" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>RETRY VARIABLES</narrative><display x="-360" y="-15" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="8c5b0603-7d17-4e87-90e3-868d34001fa0" name="note" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>EXCEL VARIABLES</narrative><display x="-360" y="-135" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="a0ce84e3-dc36-40a7-91c0-a2d1d13b4b98" name="note" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>GENERAL SETTINGS</narrative><display x="-360" y="-255" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="3a0cb0e8-cc65-4677-a7fb-21ed20755116" name="htmlBody" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="30" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1e4634fe-466c-4113-8156-8de1bdf1e1be" name="finalSubject" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="-210" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Finalizado</initialvalue><private /><alwaysinit /></stage><stage stageid="340eee99-b2e5-4a3d-abcd-a7734ac33a61" name="htmlFinalStatus" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="90" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a294a247-7d7b-4a1d-913d-7e2ef2eeccd9" name="htmlResultColor" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-360" y="60" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="49c8cbfe-e692-4817-81d5-eb93bfce4a7e" name="amountRows" type="Data"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="-360" y="120" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd363d17-c502-4284-9759-c07e66d6fc84" name="Get Exception Data" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="345" y="-615" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>666c1e73-9cee-4bff-9e81-05147e848c31</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="25cdcf42-135b-416d-b399-ec6367b7aec1" name="Count reportCollection Rows" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-285" w="120" h="30" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;reportCollection&quot;" /></inputs><outputs><output type="number" name="Count" friendlyname="Count" narrative="The number of rows counted in the collection" stage="amountRows" /></outputs><onsuccess>d656f37e-3741-4c1f-bb12-0912e8f1c840</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="2098ebc3-5d4e-49e7-a43b-dae95009ffcd" name="Note12" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><narrative>Generate the execution Report</narrative><display x="-15" y="-195" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>e04273a0-db12-4d46-8bb1-0994d071da41</onsuccess></stage><stage stageid="87958abc-c68a-4759-a3f3-59c52deb8438" name="Note12" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><narrative>Follow to send email without Attachment</narrative><display x="-180" y="-240" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>a86dd6a9-4db9-4796-9d2e-e1acf65c6951</onsuccess></stage><stage stageid="24611e44-cfee-44c5-bf04-78392c7ca17e" name="Kill Excel" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="420" w="120" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="&quot;EXCEL&quot;" /></inputs><onsuccess>32ae5d08-8b2e-4550-85bb-0703aee68b93</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="2926cb3a-9973-4674-8da9-80cdaf0144f0" name="Replace Blanks With &quot;'-&quot;" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-90" w="120" h="30" /><inputs><input type="collection" name="inputCollection" friendlyname="inputCollection" narrative="A collection with blank text fields" expr="[reportCollection]" /></inputs><outputs><output type="collection" name="outputCollection" friendlyname="outputCollection" narrative="The collection with empty string instead of blanks" stage="reportCollection" /></outputs><onsuccess>6526fca2-d556-4ab2-b7e9-310c14fa90f9</onsuccess><resource object="EY_Codes_VB" action="Replace Blanks With &quot;'-&quot;" /></stage><stage stageid="e04273a0-db12-4d46-8bb1-0994d071da41" name="Replace Blanks With &quot;'-&quot;" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-150" w="120" h="30" /><inputs><input type="collection" name="inputCollection" friendlyname="inputCollection" narrative="A collection with blank text fields" expr="[reportCollection]" /></inputs><outputs><output type="collection" name="outputCollection" friendlyname="outputCollection" narrative="The collection with empty string instead of blanks" stage="reportCollection" /></outputs><onsuccess>7831d2cb-81f9-47cf-b8cc-88972bf775d5</onsuccess><resource object="EY_Codes_VB" action="Replace Blanks With &quot;'-&quot;" /></stage><stage stageid="d6eb9fa4-59a3-4b31-abd3-616065fcc79a" name="Get Exception Data" type="MultipleCalculation"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><loginhibit onsuccess="true" /><display x="165" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>81f3185b-79b3-47d0-9d92-d25e7da8ff59</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="984fb974-34d9-4c39-94d1-fd32323b9437" name="ENV_PROCESSID_EmailInital" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1650" w="180" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="7ae6fff3-5e03-4122-b7bd-0d0792db2958" name="initialEmailTeam" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="-1650" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="88400941-6188-4e82-8aff-56519c24096c" name="Get Exception Data" type="MultipleCalculation"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="255" y="615" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f04ad81c-d9ef-41bf-98da-7dc0e7a7eade</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="20f6f979-23d9-410b-b43b-289c21ba8a05" name="Get Exception Data" type="MultipleCalculation"><subsheetid>2dcbd84f-c4e5-44e3-92e6-dd23f1cee304</subsheetid><loginhibit onsuccess="true" /><display x="15" y="270" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2729cbc2-b269-411e-96f9-ddd007c11398</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="5f9a0d17-86b2-40e0-8054-81b5e7516f18" name="Get Exception Data" type="MultipleCalculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="255" y="420" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>391c2417-56d1-4ca6-9475-cba926efa9d7</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="dac76f5d-987d-48ed-afc3-4a8c403bdbf9" name="Get Exception Data" type="MultipleCalculation"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="165" y="1035" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4378819f-fc4f-4c91-8a18-2a9bc545cdeb</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="3f9e454a-7a14-4f83-8595-7f7a6ba947c2" name="Get Exception Data" type="MultipleCalculation"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>abd58d34-f223-4d21-9cbe-5ec342a406bd</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="7645f5ce-3ba3-48fe-914c-1a4471cda89d" name="Send Start Email" type="SubSheet"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-540" w="120" h="30" /><onsuccess>b92825db-3dc8-4c65-9c26-7b0333d0cb7c</onsuccess><processid>eb948783-6b10-43e9-8657-286ee1d21b9f</processid></stage><stage stageid="064e332f-c7d8-4907-a733-ae6b66f2676f" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Clear Memory Cache</narrative><display x="105" y="-1980" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>3d49890d-77d8-402d-9e13-ce410e1b8328</onsuccess></stage><stage stageid="3d49890d-77d8-402d-9e13-ce410e1b8328" name="Garbage Collector" type="Action"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-1935" w="120" h="30" /><onsuccess>65b7d479-fc83-42a6-aba8-8a7f2819dd43</onsuccess><resource object="EY_GarbageCollection" action="Garbage Collector" /></stage><stage stageid="8d4915c1-2530-4c38-b5f2-596aaa9b36e8" name="Capture ScreenShot" type="Action"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-405" w="120" h="30" /><inputs><input type="text" name="Save Imagem Path" friendlyname="Save Imagem Path" narrative="Full path with name (without extension)" expr="[pathFolderScreenshots] &amp;&quot;\&quot;&amp; FormatDateTime(Now() + LocalTime() - UTCTime(), &quot;yyyyMMddHHmmss&quot;) &amp; &quot;_Global&quot;" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" stage="" /><output type="text" name="message" friendlyname="message" stage="" /></outputs><onsuccess>77955f79-812a-4b4f-ad01-1a26fdeda16b</onsuccess><resource object="Utility - Screenshot" action="GetScreenShot" /></stage><stage stageid="605b6af8-0ce4-4cc9-b662-659dbea4ef8b" name="Exception" type="Block"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><display x="-90" y="-435" w="240" h="60" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="8ef42011-51c1-4fcc-9cc9-957c60062ba4" name="Recover" type="Recover"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="105" y="-405" /><onsuccess>39a9aa82-d074-494d-b4ca-9ebfd769a5d3</onsuccess></stage><stage stageid="f3159a2b-7399-4fc7-babf-e6ae2f76697c" name="Resume" type="Resume"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><display x="225" y="-330" /><onsuccess>77955f79-812a-4b4f-ad01-1a26fdeda16b</onsuccess></stage><stage stageid="39a9aa82-d074-494d-b4ca-9ebfd769a5d3" name="Note4" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>Unable to take screenshot</narrative><display x="225" y="-405" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>f3159a2b-7399-4fc7-babf-e6ae2f76697c</onsuccess></stage><stage stageid="653bf786-e96c-4a0f-b021-2a445cb6db0c" name="note" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><loginhibit onsuccess="true" /><narrative>Capture ScreemShot</narrative><display x="-15" y="-465" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>8d4915c1-2530-4c38-b5f2-596aaa9b36e8</onsuccess></stage><stage stageid="0d27bf64-623a-45c2-be49-6e09cc677a5e" name="End" type="End"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="30" y="255" /></stage><stage stageid="3bb99f33-c4a4-4d25-8dd3-97b45918c4a7" name="note" type="Note"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><narrative>Get item Data</narrative><display x="30" y="-90" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>20517aee-d0d5-4c46-88d9-222007029ec8</onsuccess></stage><stage stageid="20517aee-d0d5-4c46-88d9-222007029ec8" name="Get Item Data" type="Action"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><narrative>Get data relating to an item in a queue. You do not need to have a lock on the item to do this.</narrative><display x="30" y="-45" w="120" h="30" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to get data from. An error will be raised if this item does not exist." expr="[itemID]" /></inputs><outputs><output type="text" name="Key" narrative="The key value of the item." stage="" /><output type="number" name="Priority" narrative="The priority of the item" stage="" /><output type="text" name="Status" narrative="The status of the item." stage="status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="attempts" /><output type="timespan" name="Worktime" narrative="The total time spent on this item (including previous attempts)" stage="worktime" /><output type="timespan" name="Attempt Worktime" narrative="The amount of time spent on this particular attempt of the item" stage="" /><output type="datetime" name="Loaded DateTime" narrative="The date and time at which this item was first loaded into the queue." stage="loadedDateTime" /><output type="datetime" name="Deferred DateTime" narrative="The date and time at which this item has been deferred to. Empty if this item has not been deferred." stage="" /><output type="datetime" name="Completed DateTime" narrative="The date and time at which this item was marked as complete. Empty if this item has not been marked as complete" stage="completedDateTime" /><output type="datetime" name="Exception DateTime" narrative="The date and time at which this item was marked as an exception. Empty if there has never been an exception on this item." stage="exceptionDateTime" /><output type="text" name="Exception Reason" narrative="The exception reason recorded against this item." stage="exceptionReason" /><output type="text" name="Tags" narrative="The semi-colon separated set of tags which apply to the item. " stage="tag" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="" /></outputs><onsuccess>a21a2c22-e70d-4430-be6e-c6b8498a83af</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Item Data" /></stage><stage stageid="ebc94803-39a7-4628-8c33-36930d630e9e" name="Set Data in ItemData" type="MultipleCalculation"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="30" y="90" w="120" h="30" /><onsuccess>4cd7bed6-9624-485b-b1e5-8730b2d44673</onsuccess><steps><calculation expression="[attempts]" stage="itemData.attempt" /><calculation expression="[completedDateTime] + LocalTime() - UTCTime()" stage="itemData.endAutomationTime" /><calculation expression="Replace([worktime], Left([worktime], InStr([worktime], &quot;.&quot;)), &quot;&quot;)" stage="itemData.processingTime" /></steps></stage><stage stageid="4cd7bed6-9624-485b-b1e5-8730b2d44673" name="note" type="Note"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><narrative>Set collection to report</narrative><display x="30" y="150" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>014bc96c-0d74-40bb-a5e9-66013f3d7745</onsuccess></stage><stage stageid="014bc96c-0d74-40bb-a5e9-66013f3d7745" name="Append Rows to Collection" type="Action"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="30" y="195" w="120" h="30" /><inputs><input type="collection" name="Main Collection" friendlyname="Main Collection" narrative="The collection to append to." expr="[reportCollection]" /><input type="collection" name="Collection to Append" friendlyname="Collection to Append" narrative="The collection to append." expr="[itemData]" /></inputs><outputs><output type="collection" name="Combined Collection" friendlyname="Combined Collection" narrative="The combined collection." stage="reportCollection" /></outputs><onsuccess>0d27bf64-623a-45c2-be49-6e09cc677a5e</onsuccess><resource object="Utility - Collection Manipulation" action="Append Rows to Collection" /></stage><stage stageid="a21a2c22-e70d-4430-be6e-c6b8498a83af" name="Item Successfully Completed?" type="Decision"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="30" y="0" w="120" h="30" /><decision expression="InStr([status], &quot;Completed&quot;) &gt; 0" /><ontrue>1290c201-bde0-4a93-9c3e-0ec0d16ab158</ontrue><onfalse>8d6a7a2c-9695-4c6f-a678-012129e52129</onfalse></stage><stage stageid="ddf6d9c0-fd53-46ec-b4bf-7ce46ce99aec" name="Set Data in ItemData" type="MultipleCalculation"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="330" y="90" w="120" h="30" /><onsuccess>e06fedc7-72dd-437c-bf94-3e9c455ff549</onsuccess><steps><calculation expression="[attempts]" stage="itemData.attempt" /><calculation expression="[loadedDateTime] + [worktime] + LocalTime() - UTCTime()" stage="itemData.endAutomationTime" /><calculation expression="Replace([worktime], Left([worktime], InStr([worktime], &quot;.&quot;)), &quot;&quot;)" stage="itemData.processingTime" /></steps></stage><stage stageid="a30d6c9f-e311-46b4-9937-022252a836ee" name="Last Attempt?" type="Decision"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="330" y="0" w="120" h="30" /><decision expression="[itemAttempts] = ([maximumQueueAttempts] - 1)" /><ontrue>132a111a-6b71-48a6-8cb6-b20b56ace7f2</ontrue><onfalse>59b9cd08-c081-4419-8100-90cc0faaed6b</onfalse></stage><stage stageid="5a356225-46a9-43b6-9f77-24a3731748bf" name="Anchor26" type="Anchor"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="480" y="255" w="10" h="10" /><onsuccess>0d27bf64-623a-45c2-be49-6e09cc677a5e</onsuccess></stage><stage stageid="e06fedc7-72dd-437c-bf94-3e9c455ff549" name="Anchor26" type="Anchor"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><display x="330" y="150" w="10" h="10" /><onsuccess>4cd7bed6-9624-485b-b1e5-8730b2d44673</onsuccess></stage><stage stageid="1290c201-bde0-4a93-9c3e-0ec0d16ab158" name="Note20" type="Note"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><narrative>Item data was successfully completed</narrative><display x="30" y="45" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>ebc94803-39a7-4628-8c33-36930d630e9e</onsuccess></stage><stage stageid="8d6a7a2c-9695-4c6f-a678-012129e52129" name="Note20" type="Note"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><narrative>Item data was not yet completed</narrative><display x="180" y="0" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>a30d6c9f-e311-46b4-9937-022252a836ee</onsuccess></stage><stage stageid="132a111a-6b71-48a6-8cb6-b20b56ace7f2" name="Note20" type="Note"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><narrative>Item data was not successfully completed</narrative><display x="330" y="45" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>ddf6d9c0-fd53-46ec-b4bf-7ce46ce99aec</onsuccess></stage><stage stageid="59b9cd08-c081-4419-8100-90cc0faaed6b" name="Note20" type="Note"><subsheetid>7184b887-65b3-4ba8-b5de-d6fb2921ef09</subsheetid><narrative>Item data was not yet completed</narrative><display x="480" y="0" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>5a356225-46a9-43b6-9f77-24a3731748bf</onsuccess></stage><stage stageid="39ba9670-3631-45ad-bf34-df0e3c0e9a12" name="1 - Work Step 1" type="SubSheetInfo"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><display x="-330" y="-345" w="360" h="90" /></stage><stage stageid="b8e3ee9f-04c2-45bc-a700-e82c0a1e074d" name="Start" type="Start"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><display x="15" y="-375" /><onsuccess>f380dd91-130c-4d93-881e-37b97c4d2811</onsuccess></stage><stage stageid="f9a4b11c-b225-4402-b815-715077d61ddd" name="End" type="End"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><display x="15" y="510" /></stage><stage stageid="cba64f11-cb6e-4c20-8840-204f4d257090" name="note" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.1</narrative><display x="15" y="-225" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>31627112-ea65-4daa-9bce-0327b6969673</onsuccess></stage><stage stageid="617d1bcf-f0ab-4a86-9b81-d264a2905155" name="Local Variables" type="Block"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><display x="-330" y="-285" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="277e402e-f351-4886-a3b5-5bd31af0eb3a" name="note" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Update Queue Item</narrative><display x="15" y="255" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>31f48ea3-d65e-4d9a-b491-d864dc087520</onsuccess></stage><stage stageid="06085511-dbe4-4535-8f2a-2ff1401dd96c" name="note" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.2</narrative><display x="15" y="-75" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>64cd33d0-5daa-4823-b7be-4c1610ef7899</onsuccess></stage><stage stageid="97b6b572-3182-4f5e-a7fe-d843b135c150" name="note" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.3</narrative><display x="15" y="150" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>2dfc0d57-429d-4694-ad80-c0d9727aa0fc</onsuccess></stage><stage stageid="31627112-ea65-4daa-9bce-0327b6969673" name="Note7" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><narrative>Step 1.1a</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>335b4a92-a84c-4cec-8467-0b40fd426eb6</onsuccess></stage><stage stageid="335b4a92-a84c-4cec-8467-0b40fd426eb6" name="Note7" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><narrative>Step 1.1b</narrative><display x="15" y="-135" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>06085511-dbe4-4535-8f2a-2ff1401dd96c</onsuccess></stage><stage stageid="64cd33d0-5daa-4823-b7be-4c1610ef7899" name="Note7" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><narrative>Step 1.2a</narrative><display x="15" y="-15" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>8269d389-402a-42f7-b9f0-43997c537c21</onsuccess></stage><stage stageid="8269d389-402a-42f7-b9f0-43997c537c21" name="Note7" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><narrative>Step 1.2b</narrative><display x="15" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>97b6b572-3182-4f5e-a7fe-d843b135c150</onsuccess></stage><stage stageid="2dfc0d57-429d-4694-ad80-c0d9727aa0fc" name="Note7" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><narrative>Step 1.3a</narrative><display x="15" y="195" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>277e402e-f351-4886-a3b5-5bd31af0eb3a</onsuccess></stage><stage stageid="2b4c77ef-13d2-438f-a152-e865ecbd2a74" name="Recover" type="Recover"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit /><display x="135" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>04ca0195-5d37-4424-a2c2-e64ec478bb76</onsuccess></stage><stage stageid="db2cdde5-1edf-42af-a643-f1a82f732741" name="Resume" type="Resume"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit /><display x="285" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>448229f5-1c81-40f0-b4c5-d54727ca0d0a</onsuccess></stage><stage stageid="cda510aa-aa59-457e-ab96-d22079777b40" name="Exception Handler" type="Block"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="-45" w="240" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d1f4855b-532d-49d8-a884-9ed6cae408d6" name="retryCounter" type="Data"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-240" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f126335b-d5ff-4474-a9e1-8bf7812fc2ef" name="Retry?" type="Decision"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><display x="285" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>db2cdde5-1edf-42af-a643-f1a82f732741</ontrue><onfalse>a5ef4c13-a477-4431-b15c-2106355d35a9</onfalse></stage><stage stageid="a4502352-321e-49b7-8023-bf120649554c" name="retryCounter ++" type="Calculation"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><display x="285" y="-75" w="120" h="30" /><onsuccess>55743c8c-6bf0-407f-ae85-edc75f5a754b</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="448229f5-1c81-40f0-b4c5-d54727ca0d0a" name="Note8" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="285" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>a4502352-321e-49b7-8023-bf120649554c</onsuccess></stage><stage stageid="a5ef4c13-a477-4431-b15c-2106355d35a9" name="Note8" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="435" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>fe93693c-bc2b-4d37-83a2-0ef3263d112d</onsuccess></stage><stage stageid="0459689a-875f-4efb-98ba-35ef0af2a165" name="Set status #1" type="Action"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="15" y="405" w="120" h="30" /><inputs><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="[queueStatus1]" /><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /></inputs><onsuccess>b865bcf6-1e54-4b68-835a-e49b284d5eb3</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="d73200c3-1219-442e-86fb-489fca96d3fd" name="note" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Set Item Status</narrative><display x="15" y="360" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>0459689a-875f-4efb-98ba-35ef0af2a165</onsuccess></stage><stage stageid="b865bcf6-1e54-4b68-835a-e49b284d5eb3" name="Update Queue Status" type="Calculation"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><display x="15" y="450" w="120" h="30" /><onsuccess>f9a4b11c-b225-4402-b815-715077d61ddd</onsuccess><calculation expression="[queueStatus1]" stage="itemStatus" /></stage><stage stageid="31f48ea3-d65e-4d9a-b491-d864dc087520" name="Update Queue Item" type="Action"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="15" y="300" w="120" h="30" /><inputs><input type="collection" name="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[itemData]" /><input type="text" name="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[itemID]" /></inputs><onsuccess>d73200c3-1219-442e-86fb-489fca96d3fd</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="04ca0195-5d37-4424-a2c2-e64ec478bb76" name="Get Exception Data" type="MultipleCalculation"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f126335b-d5ff-4474-a9e1-8bf7812fc2ef</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="f380dd91-130c-4d93-881e-37b97c4d2811" name="note" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Set start time in itemData</narrative><display x="15" y="-330" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>2de1c1ff-7297-4b1a-a307-63ddb094ff94</onsuccess></stage><stage stageid="2de1c1ff-7297-4b1a-a307-63ddb094ff94" name="Set itemData startAutomationTime" type="MultipleCalculation"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-285" w="120" h="30" /><onsuccess>cba64f11-cb6e-4c20-8840-204f4d257090</onsuccess><steps><calculation expression="Now() + LocalTime() - UTCTime()" stage="itemData.startAutomationTime" /></steps></stage><stage stageid="dae8c163-e8e6-41b6-940c-5a67baea23b9" name="2 - Work Step 2" type="SubSheetInfo"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><display x="-420" y="-390" w="360" h="90" /></stage><stage stageid="5a3e7a18-621a-41ab-a692-1588fa823717" name="Start" type="Start"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><display x="15" y="-420" /><onsuccess>4b0107ce-6e58-400e-8246-0bb87723923d</onsuccess></stage><stage stageid="0d366182-311f-4eb0-b8a7-1676da1ae11f" name="End" type="End"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><display x="15" y="510" /></stage><stage stageid="4d455a63-2372-440f-9c3f-afe05edde001" name="note" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.1</narrative><display x="15" y="-225" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>7ff93bdb-5278-4fb8-8e24-8bfb19b0df9c</onsuccess></stage><stage stageid="9b4537a0-4f7e-45b8-9aba-938ceb596fb7" name="Local Variables" type="Block"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><display x="-420" y="-330" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="fd32e130-6f99-445d-bf6c-66205e23766c" name="note" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Update Queue Item</narrative><display x="15" y="255" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>5306b94a-e74f-40f0-9513-680abcfd03c4</onsuccess></stage><stage stageid="9c7848ca-fb5f-4e6c-bca3-ca61fb30d27b" name="note" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.2</narrative><display x="15" y="-75" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>a95b3e14-c92b-4ac4-9b3d-464f3be1d866</onsuccess></stage><stage stageid="608df122-878b-4a7e-83b5-81ece4dc4e1f" name="note" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.3</narrative><display x="15" y="150" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>40e671f1-9c59-473b-8d8f-3043a7e2b014</onsuccess></stage><stage stageid="7ff93bdb-5278-4fb8-8e24-8bfb19b0df9c" name="Note7" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><narrative>Step 1.1a</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>28ea3d05-4246-420c-81bb-9ef5caa77970</onsuccess></stage><stage stageid="28ea3d05-4246-420c-81bb-9ef5caa77970" name="Note7" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><narrative>Step 1.1b</narrative><display x="15" y="-135" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>9c7848ca-fb5f-4e6c-bca3-ca61fb30d27b</onsuccess></stage><stage stageid="a95b3e14-c92b-4ac4-9b3d-464f3be1d866" name="Note7" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><narrative>Step 1.2a</narrative><display x="15" y="-15" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>bc3f1ada-a6f0-4c8b-a69e-87e746b8dde2</onsuccess></stage><stage stageid="bc3f1ada-a6f0-4c8b-a69e-87e746b8dde2" name="Note7" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><narrative>Step 1.2b</narrative><display x="15" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>608df122-878b-4a7e-83b5-81ece4dc4e1f</onsuccess></stage><stage stageid="40e671f1-9c59-473b-8d8f-3043a7e2b014" name="Note7" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><narrative>Step 1.3a</narrative><display x="15" y="195" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>fd32e130-6f99-445d-bf6c-66205e23766c</onsuccess></stage><stage stageid="eddc6f10-9907-47bb-ad9a-f9bad318cac7" name="Recover" type="Recover"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit /><display x="135" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>db04f6a8-ae6b-4766-ac2f-fb7d4b74b08d</onsuccess></stage><stage stageid="898c9f5f-fef5-4374-9f15-6ebc89d83ae9" name="Exception Handler" type="Block"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="-45" w="240" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fe6e8021-fd38-4536-a4cc-52ecd4e18d7f" name="retryCounter" type="Data"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="-285" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="40897c29-8cbe-42e3-a3b6-39ba237bfaed" name="Set status #2" type="Action"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="15" y="405" w="120" h="30" /><inputs><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="[queueStatus2]" /><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /></inputs><onsuccess>57d28963-59b1-4581-8f07-524f5be8dad1</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="36a15e47-7a6a-4c91-b8a7-7690c4e83dcf" name="note" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Set Item Status</narrative><display x="15" y="360" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>40897c29-8cbe-42e3-a3b6-39ba237bfaed</onsuccess></stage><stage stageid="57d28963-59b1-4581-8f07-524f5be8dad1" name="Update Queue Status" type="Calculation"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><display x="15" y="450" w="120" h="30" /><onsuccess>0d366182-311f-4eb0-b8a7-1676da1ae11f</onsuccess><calculation expression="[queueStatus2]" stage="itemStatus" /></stage><stage stageid="5306b94a-e74f-40f0-9513-680abcfd03c4" name="Update Queue Item" type="Action"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="15" y="300" w="120" h="30" /><inputs><input type="collection" name="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[itemData]" /><input type="text" name="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[itemID]" /></inputs><onsuccess>36a15e47-7a6a-4c91-b8a7-7690c4e83dcf</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="db04f6a8-ae6b-4766-ac2f-fb7d4b74b08d" name="Get Exception Data" type="MultipleCalculation"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>35f5fe51-af1e-4a94-bac9-7edbdb947788</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="4b0107ce-6e58-400e-8246-0bb87723923d" name="note" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Verify Processing status</narrative><display x="15" y="-375" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>577d2bf9-c901-49ab-96c2-c45f0ee8a724</onsuccess></stage><stage stageid="577d2bf9-c901-49ab-96c2-c45f0ee8a724" name="Item's Processing Completed?" type="Decision"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><display x="15" y="-330" w="120" h="30" /><decision expression="[itemData.status] &lt;&gt; &quot;&quot;" /><ontrue>36802a85-ae72-4ef1-add0-6c0f6d0791ce</ontrue><onfalse>91fcdcd1-cd97-4a65-896e-891cab167f7d</onfalse></stage><stage stageid="818b0d92-c491-4373-ba16-159140ff258c" name="Anchor17" type="Anchor"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="255" w="10" h="10" /><onsuccess>fd32e130-6f99-445d-bf6c-66205e23766c</onsuccess></stage><stage stageid="36802a85-ae72-4ef1-add0-6c0f6d0791ce" name="Note1" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit /><narrative>Current Item's Processing was already completed at one of the previous steps</narrative><display x="-150" y="-330" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>818b0d92-c491-4373-ba16-159140ff258c</onsuccess></stage><stage stageid="91fcdcd1-cd97-4a65-896e-891cab167f7d" name="Note1" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit /><narrative>Current Item needs further processing</narrative><display x="15" y="-285" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>4d455a63-2372-440f-9c3f-afe05edde001</onsuccess></stage><stage stageid="6ce80d6d-84af-4ced-9e8e-6f7688237c3f" name="Get Next Item" type="Action"><loginhibit onsuccess="true" /><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="-270" y="-360" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[queueName]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="itemID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="itemData" /><output type="text" name="Status" narrative="The status of the item." stage="itemStatus" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="itemAttempts" /></outputs><onsuccess>87b880ec-ded5-41e1-8cc8-29b5c3b01339</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="a609e3a5-168f-430f-a13e-9f09c50d5acb" name="note" type="Note"><loginhibit onsuccess="true" /><narrative>REPORT</narrative><display x="-450" y="-270" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="7d6374ef-a20b-452a-aec8-ad2850833718" name="Control Applications (RESTART Application1)" type="SubSheet"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-195" y="-645" w="120" h="30" /><inputs><input type="text" name="applicationControl" expr="&quot;RESTART&quot;" /><input type="text" name="application" expr="&quot;Application1&quot;" /><input type="text" name="connectionName" friendlyname="connectionName" expr="" /></inputs><onsuccess>d57ca73d-a55d-440e-bfdf-b5805d352a45</onsuccess><processid>53811e5c-56c3-470b-b37f-485ff27ab137</processid></stage><stage stageid="239016ba-c3ab-4295-8885-36f8870e6dd3" name="Update ItemData" type="MultipleCalculation"><subsheetid>7ba524d9-28dd-474d-896c-bf4a00083664</subsheetid><loginhibit onsuccess="true" /><display x="480" y="-570" w="120" h="30" /><onsuccess>5869875f-7332-4d54-8399-ec4752fda962</onsuccess><steps><calculation expression="&quot;Exceção&quot;" stage="itemData.status" /><calculation expression="&quot;SIM&quot;" stage="itemData.reportToBU" /><calculation expression="&quot;Resultado do processamento para a etapa 3/3&quot;" stage="itemData.results" /><calculation expression="[exceptionDetails]" stage="itemData.exceptionDetails" /></steps></stage><stage stageid="ac7c6aa4-4d42-4f29-9062-66d137879bb9" name="Note9" type="Note"><subsheetid>53811e5c-56c3-470b-b37f-485ff27ab137</subsheetid><narrative>Name of the connection/ID/Port/Environment that must be accessed in the provided application,

Example: SAP's SID (PSQ = QA; PSP = PRD)</narrative><display x="-720" y="0" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="aa406494-561f-47b9-8ec3-8ae1e86f716b" name="Note9" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><narrative>List of available Applications:

- Application1
- Application2</narrative><display x="-525" y="-135" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="86137166-176e-4c63-9f61-599bc34803ee" name="Note9" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><narrative>Name of the connection/ID/Port/Environment that must be accessed in the provided application,

Example: SAP's SID (PSQ = QA; PSP = PRD)</narrative><display x="-525" y="-105" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="9f60b7d4-586c-406c-b7da-2380ea16f516" name="Get Application1 Credentials" type="Action"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><narrative>Get the specified set of credentials.

An Exception will occur if access to the credentials is not allowed, based on the running Resource, Process and User.</narrative><display x="-105" y="-60" w="120" h="30" /><inputs><input type="text" name="Credentials Name" narrative="The name of the credentials to get" expr="[application1CredentialName]" /></inputs><outputs><output type="password" name="Password" narrative="The password" stage="applicationPassword" /><output type="text" name="Username" narrative="The user name" stage="applicationUsername" /><output type="date" name="Expiry Date" narrative="The expiry date" stage="" /><output type="text" name="Status" narrative="The status" stage="" /></outputs><onsuccess>3e1697b2-b3e8-4488-abed-f6c62232bd7f</onsuccess><resource object="Blueprism.Automate.clsCredentialsActions" action="Get" /></stage><stage stageid="3e1697b2-b3e8-4488-abed-f6c62232bd7f" name="Note12" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><narrative>Perform necessary steps to initialize the application.</narrative><display x="-105" y="-15" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>728d8dae-4d45-412c-a995-90f7a55d9f65</onsuccess></stage><stage stageid="b353e840-2804-4565-a09d-a07d972d8154" name="Get Application2 Credentials" type="Action"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><narrative>Get the specified set of credentials.

An Exception will occur if access to the credentials is not allowed, based on the running Resource, Process and User.</narrative><display x="195" y="-60" w="120" h="30" /><inputs><input type="text" name="Credentials Name" narrative="The name of the credentials to get" expr="[application1CredentialName]" /></inputs><outputs><output type="password" name="Password" narrative="The password" stage="applicationPassword" /><output type="text" name="Username" narrative="The user name" stage="applicationUsername" /><output type="date" name="Expiry Date" narrative="The expiry date" stage="" /><output type="text" name="Status" narrative="The status" stage="" /></outputs><onsuccess>354fc1ed-8485-450a-9e4c-c33df572b199</onsuccess><resource object="Blueprism.Automate.clsCredentialsActions" action="Get" /></stage><stage stageid="354fc1ed-8485-450a-9e4c-c33df572b199" name="Note12" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><narrative>Perform necessary steps to initialize the application.</narrative><display x="195" y="-15" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>5d288406-e1ee-4072-b485-d7a6b455c6e0</onsuccess></stage><stage stageid="5d288406-e1ee-4072-b485-d7a6b455c6e0" name="note" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><narrative>Configure Application / Access Transaction</narrative><display x="195" y="45" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>e915170c-a1a6-4606-90ee-b5742e838397</onsuccess></stage><stage stageid="e915170c-a1a6-4606-90ee-b5742e838397" name="Note12" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><narrative>Perform necessary steps to provide the necesary configuration to the application, or to initialize the work transaction within the application.
Navigate to the necessary transaction pane/page/module/service.</narrative><display x="195" y="105" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>728d8dae-4d45-412c-a995-90f7a55d9f65</onsuccess></stage><stage stageid="13692d8a-7328-4c4f-bd44-086d7fad5c47" name="note" type="Note"><subsheetid>2ee3acd0-4044-4779-bf0f-e2a0a608763f</subsheetid><loginhibit onsuccess="true" /><narrative>Select which application to manipulate</narrative><display x="-105" y="-225" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>f47fa2b0-3bad-4bd4-9f68-9d0f1dad5252</onsuccess></stage><stage stageid="e6b22b40-5c4a-4d2a-b004-28ec9f66012f" name="Which application?" type="ChoiceStart"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-330" y="-105" w="120" h="30" /><groupid>5ad352d8-dbee-4e7c-a78e-7291b87ecc5c</groupid><choices><choice expression="[application] = &quot;Application1&quot;"><name>Terminate Application1</name><distance>90</distance><ontrue>4adbea5f-0fc8-4784-8cf6-874cdf1b8875</ontrue></choice><choice expression="[application] = &quot;Application2&quot;"><name>Terminate Application2</name><distance>540</distance><ontrue>1f6262b6-739b-4b4b-9719-02e0b0a43ad8</ontrue></choice></choices></stage><stage stageid="7b30a65a-e963-4d33-83da-4ad9b4943f7c" name="Otherwise" type="ChoiceEnd"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="315" y="-105" w="120" h="30" /><onsuccess>3f1110f8-808d-4e7f-8836-f108bce7ed31</onsuccess><groupid>5ad352d8-dbee-4e7c-a78e-7291b87ecc5c</groupid></stage><stage stageid="c067fd9c-f7df-4593-9915-f63c38d7aa70" name="Anchor11" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-240" y="-135" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><onsuccess>9867b43c-e512-413c-9c50-db3cbce620cc</onsuccess></stage><stage stageid="9867b43c-e512-413c-9c50-db3cbce620cc" name="Anchor13" type="Anchor"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-330" y="-135" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><onsuccess>e6b22b40-5c4a-4d2a-b004-28ec9f66012f</onsuccess></stage><stage stageid="3f1110f8-808d-4e7f-8836-f108bce7ed31" name="SE: Unable to Close Application" type="Exception"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><display x="465" y="-105" w="120" h="30" /><exception type="System Exception" detail="&quot;SE: Unable to Close Application &quot; &amp; [application]" /></stage><stage stageid="a0d632cd-775c-4e1d-be8c-20db26301541" name="note" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><narrative>Select which application to manipulate</narrative><display x="-240" y="-165" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>c067fd9c-f7df-4593-9915-f63c38d7aa70</onsuccess></stage><stage stageid="9cd4ee6a-3013-498c-9320-643fd4077ad1" name="application2ProcessName" type="Data"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-510" y="0" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">APP2PROCESSNAME</initialvalue><private /><alwaysinit /></stage><stage stageid="5eb12236-078b-46a6-9a1a-a42be5b2f479" name="application1ProcessName" type="Data"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><display x="-510" y="-30" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">APP1PROCESSNAME</initialvalue><private /><alwaysinit /></stage><stage stageid="381c317b-4643-4db8-b8a1-34b9667f1b1a" name="Note13" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><narrative>Terminate Application 1</narrative><display x="-240" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /><onsuccess>be50480a-a78a-4d48-a48b-43f408185ade</onsuccess></stage><stage stageid="ddb9267c-3b06-4c93-8fe0-ffabce06e0a2" name="Note13" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><narrative>Terminate Application 1</narrative><display x="210" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /><onsuccess>5ae25512-b416-4a5e-b468-2962a0358a96</onsuccess></stage><stage stageid="4adbea5f-0fc8-4784-8cf6-874cdf1b8875" name="Note4" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><narrative>Close Application1</narrative><display x="-240" y="-45" w="270" h="30" /><font family="Tahoma" size="10" style="Bold" color="800080" /><onsuccess>381c317b-4643-4db8-b8a1-34b9667f1b1a</onsuccess></stage><stage stageid="1f6262b6-739b-4b4b-9719-02e0b0a43ad8" name="Note4" type="Note"><subsheetid>6867bdc8-6ddb-40d1-8b15-29e20dc544c3</subsheetid><loginhibit onsuccess="true" /><narrative>Close Application2</narrative><display x="210" y="-45" w="270" h="30" /><font family="Tahoma" size="10" style="Bold" color="800080" /><onsuccess>ddb9267c-3b06-4c93-8fe0-ffabce06e0a2</onsuccess></stage><stage stageid="da742a10-8229-4582-a0f2-a82073445d22" name="Note11" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>Start Cell in which to paste the report collection.
Usefull for when utilizing report templates.</narrative><display x="-570" y="-285" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="02207c34-d46d-44b6-9fb0-f001ec31faef" name="Note8" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Build e-mail's HTML</narrative><display x="15" y="540" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>3478773d-a0c5-4531-862d-bdcf8802c0c0</onsuccess></stage><stage stageid="86bb281b-b1c0-4de5-bd34-0fe9b4bc9ab3" name="Note8" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Send final E-mail</narrative><display x="15" y="870" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>75e9ae7e-afa5-4cfb-9d3d-d942b8d57b7f</onsuccess></stage><stage stageid="5935e3e4-b996-4067-99cb-5ff9aff74de7" name="Release Lock" type="Action"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>Releases the lock(s) associated with the given name and token</narrative><display x="15" y="1035" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="[lockName]" /><input type="text" name="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[lockToken]" /><input type="text" name="Comment" narrative="The comments to set on the lock(s)" expr="&quot;Release lock&quot;" /><input type="flag" name="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="True" /><input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="False" /></inputs><onsuccess>fcad3225-9616-40ee-ac8e-a446be66253b</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" /></stage><stage stageid="e6820053-3591-4466-b4cf-cf2f8eec9e47" name="Lock Received?" type="Decision"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><display x="15" y="-375" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[lockToken] &lt;&gt; &quot;&quot;" /><ontrue>f6465718-1f96-4bc3-ab41-70a101cbd8a8</ontrue><onfalse>c7498d99-3781-4bc5-9f57-b3f535b3e3ff</onfalse></stage><stage stageid="c7498d99-3781-4bc5-9f57-b3f535b3e3ff" name="Note6" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>Current session must not dispatch the current email</narrative><display x="-210" y="-375" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>d406f949-e8c2-466f-a3ba-9fd968435a2e</onsuccess></stage><stage stageid="f6465718-1f96-4bc3-ab41-70a101cbd8a8" name="Note6" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>Session has loaded the queue, therefore must dispatch the final e-mail</narrative><display x="15" y="-330" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>4e987454-f097-4d88-82ca-2e8079069956</onsuccess></stage><stage stageid="7f05e01c-69a0-40a4-b103-5df1c240033c" name="note" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><narrative>Verify if the current session should dispatch the final report</narrative><display x="15" y="-420" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>e6820053-3591-4466-b4cf-cf2f8eec9e47</onsuccess></stage><stage stageid="d406f949-e8c2-466f-a3ba-9fd968435a2e" name="Anchor4" type="Anchor"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="1095" w="10" h="10" /><onsuccess>fcad3225-9616-40ee-ac8e-a446be66253b</onsuccess></stage><stage stageid="13bb906d-df96-4956-9f80-ea9214953cca" name="3 - Work Step 3" type="SubSheetInfo"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><display x="-420" y="-390" w="360" h="90" /></stage><stage stageid="f2d72ff9-c390-4937-b4cf-0c691590b2c9" name="Start" type="Start"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><display x="15" y="-420" /><onsuccess>b069ae08-bf95-44b3-808e-29de8eb76654</onsuccess></stage><stage stageid="4dca9fd1-2103-4704-a04f-8b007487ace0" name="End" type="End"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><display x="15" y="510" /></stage><stage stageid="56460024-932b-4e99-8de5-b549b9c35c41" name="note" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.1</narrative><display x="15" y="-225" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>47dce6ee-e0d2-484d-b8d7-13391dae7ffa</onsuccess></stage><stage stageid="4dce074c-9490-4aa4-acea-5565244a3f51" name="Local Variables" type="Block"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><display x="-420" y="-330" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="b6c1a900-1c67-4352-83d9-ae1940d8a47a" name="note" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Update Queue Item</narrative><display x="15" y="255" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>23ef7366-a2ab-4f45-a48a-6b1fa7e21198</onsuccess></stage><stage stageid="ee5d56ff-74ac-438f-bfe2-f93323b52b1d" name="note" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.2</narrative><display x="15" y="-75" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>c1021a92-b5ff-49ca-b4a2-8be885c5d4ef</onsuccess></stage><stage stageid="71ed3fff-dc54-4aed-9d18-a0c375e89113" name="note" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Perform Work Step 1.3</narrative><display x="15" y="150" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>c2f969bb-2c54-441e-9efa-1fc57321cb1e</onsuccess></stage><stage stageid="47dce6ee-e0d2-484d-b8d7-13391dae7ffa" name="Note7" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><narrative>Step 1.1a</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>0786b046-7b3d-4332-9a9e-5c1c05d1a2f3</onsuccess></stage><stage stageid="0786b046-7b3d-4332-9a9e-5c1c05d1a2f3" name="Note7" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><narrative>Step 1.1b</narrative><display x="15" y="-135" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>ee5d56ff-74ac-438f-bfe2-f93323b52b1d</onsuccess></stage><stage stageid="c1021a92-b5ff-49ca-b4a2-8be885c5d4ef" name="Note7" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><narrative>Step 1.2a</narrative><display x="15" y="-15" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>98d95a88-4176-4a1e-a425-176c9a4572ea</onsuccess></stage><stage stageid="98d95a88-4176-4a1e-a425-176c9a4572ea" name="Note7" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><narrative>Step 1.2b</narrative><display x="15" y="30" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>71ed3fff-dc54-4aed-9d18-a0c375e89113</onsuccess></stage><stage stageid="c2f969bb-2c54-441e-9efa-1fc57321cb1e" name="Note7" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><narrative>Step 1.3a</narrative><display x="15" y="195" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>b6c1a900-1c67-4352-83d9-ae1940d8a47a</onsuccess></stage><stage stageid="2cf1cace-b609-424a-ad27-b78921f46bf9" name="Recover" type="Recover"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit /><display x="135" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>10bce80a-765f-4b53-991f-1cecb705b153</onsuccess></stage><stage stageid="de754880-a0ba-4474-a072-66ecbb054418" name="Exception Handler" type="Block"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="-45" w="240" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a591fdaa-9215-4ec3-b31b-e42c90fb7ece" name="retryCounter" type="Data"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="-285" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2d025285-e4e4-4fa3-aa90-2aec6ec46b98" name="Set status #3" type="Action"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</narrative><display x="15" y="405" w="120" h="30" /><inputs><input type="text" name="Status" narrative="The new status - 255 characters maximum." expr="[queueStatus3]" /><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[itemID]" /></inputs><onsuccess>ff0c7707-f8a3-4913-980b-af9128548522</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Update Status" /></stage><stage stageid="32e312e6-0ab4-48bc-bea0-6a6279fe7f6f" name="note" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Set Item Status</narrative><display x="15" y="360" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>2d025285-e4e4-4fa3-aa90-2aec6ec46b98</onsuccess></stage><stage stageid="ff0c7707-f8a3-4913-980b-af9128548522" name="Update Queue Status" type="Calculation"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><display x="15" y="450" w="120" h="30" /><onsuccess>4dca9fd1-2103-4704-a04f-8b007487ace0</onsuccess><calculation expression="[queueStatus3]" stage="itemStatus" /></stage><stage stageid="23ef7366-a2ab-4f45-a48a-6b1fa7e21198" name="Update Queue Item" type="Action"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><narrative>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</narrative><display x="15" y="300" w="120" h="30" /><inputs><input type="collection" name="Data" narrative="A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly." expr="[itemData]" /><input type="text" name="Item ID" narrative="The ID of the work item to set the data on. This item should be locked by the calling session." expr="[itemID]" /></inputs><onsuccess>32e312e6-0ab4-48bc-bea0-6a6279fe7f6f</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Set Data" /></stage><stage stageid="10bce80a-765f-4b53-991f-1cecb705b153" name="Get Exception Data" type="MultipleCalculation"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>73e92fe3-d364-4ad8-9af9-605c3fe2a121</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="b069ae08-bf95-44b3-808e-29de8eb76654" name="note" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Verify Processing status</narrative><display x="15" y="-375" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>feadd6a5-c2d1-4b48-84e4-0bbeff71acbd</onsuccess></stage><stage stageid="feadd6a5-c2d1-4b48-84e4-0bbeff71acbd" name="Item's Processing Completed?" type="Decision"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><display x="15" y="-330" w="120" h="30" /><decision expression="[itemData.status] &lt;&gt; &quot;&quot;" /><ontrue>ac6858a7-1be4-4e9e-b794-3df94b568498</ontrue><onfalse>0bac30b1-fa3b-4655-970e-b4a22e1b2d55</onfalse></stage><stage stageid="cb0979ad-1f89-49b7-a619-1c8f85824cba" name="Anchor17" type="Anchor"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><display x="-150" y="255" w="10" h="10" /><onsuccess>b6c1a900-1c67-4352-83d9-ae1940d8a47a</onsuccess></stage><stage stageid="ac6858a7-1be4-4e9e-b794-3df94b568498" name="Note1" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit /><narrative>Current Item's Processing was already completed at one of the previous steps</narrative><display x="-150" y="-330" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>cb0979ad-1f89-49b7-a619-1c8f85824cba</onsuccess></stage><stage stageid="0bac30b1-fa3b-4655-970e-b4a22e1b2d55" name="Note1" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit /><narrative>Current Item needs further processing</narrative><display x="15" y="-285" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>56460024-932b-4e99-8de5-b549b9c35c41</onsuccess></stage><stage stageid="84a469b4-7403-494a-a8d5-2e4de32187b9" name="Note21" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>Verify Automation's Folders Path</narrative><display x="105" y="-705" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>2e5d7bdc-af48-4124-81bd-4839644932ee</onsuccess></stage><stage stageid="3f15500b-736a-4848-9c27-95cace638c4f" name="note" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><narrative>Get Data from Textos Comunicacaoexcel File

This file contains all the texts that will be used in the communication with the client</narrative><display x="405" y="435" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>be61cf4d-bd88-4a2c-a204-c3751919e500</onsuccess></stage><stage stageid="c9166f82-173c-4c67-8479-90bf6f2d9f8c" name="Add to Queue" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="-30" y="405" w="120" h="30" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to add items to" expr="[queueName]" /><input type="collection" name="Data" narrative="A collection containing the data, one row for each item to be added" expr="[registerToBeManipulated]" /><input type="datetime" name="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr=""><validator type="BluePrism.AutomateProcessCore.RangeParameterValidation" parameter="0:25000" /></input></inputs><outputs><output type="collection" name="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="" /></outputs><onsuccess>b9c452c4-166a-40a8-a153-ad5a4ecabf10</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="edf08937-e79d-48fe-827a-04b32c7387cf" name="Loop registerToBeManipulated" type="LoopStart"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-30" y="255" w="120" h="30" /><onsuccess>19025892-4f59-4356-9832-a83ee66bd73f</onsuccess><groupid>e123756b-3f25-47c4-b1e0-605201f2bc24</groupid><looptype>ForEach</looptype><loopdata>registerToBeManipulated</loopdata></stage><stage stageid="a124a560-a660-4336-bc46-00a788031437" name="Loop registerToBeManipulated" type="LoopEnd"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-30" y="345" w="120" h="30" /><onsuccess>c9166f82-173c-4c67-8479-90bf6f2d9f8c</onsuccess><groupid>e123756b-3f25-47c4-b1e0-605201f2bc24</groupid></stage><stage stageid="19025892-4f59-4356-9832-a83ee66bd73f" name="Adjust Items ID" type="MultipleCalculation"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-30" y="300" w="120" h="30" /><onsuccess>a124a560-a660-4336-bc46-00a788031437</onsuccess><steps><calculation expression="FormatDateTime(Now() + LocalTime() - UTCTime(), &quot;yyyyMMddhhmmss&quot;) &amp; &quot;_&quot; &amp; [registerToBeManipulated.ID]" stage="registerToBeManipulated.ID" /></steps></stage><stage stageid="891016fc-d45e-421a-a8bd-042ff2704f77" name="note" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>Get Data to be Manipulated.</narrative><display x="-30" y="-435" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>7f51afb1-9d2e-4185-9dff-c391d34f7d81</onsuccess></stage><stage stageid="8534cb4c-7385-4c09-b7db-37aa3b6eecf1" name="Anchor10" type="Anchor"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="210" y="465" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="FF6600" /><onsuccess>b9c452c4-166a-40a8-a153-ad5a4ecabf10</onsuccess></stage><stage stageid="7f51afb1-9d2e-4185-9dff-c391d34f7d81" name="Create Excel Instance" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-375" w="120" h="30" /><inputs><input type="flag" name="Enable Events" friendlyname="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="False" /></inputs><outputs><output type="number" name="handle" friendlyname="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="excelHandler" /></outputs><onsuccess>430d70a9-252b-44c2-a31d-a9f3608291b6</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="430d70a9-252b-44c2-a31d-a9f3608291b6" name="Open Workbook" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-330" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="File name" friendlyname="File name" narrative="The path and name of the file which should be opened." expr="[dataSource]" /></inputs><outputs><output type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookName" /></outputs><onsuccess>eb63823c-8e97-47ea-86aa-81e79a5af6fe</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="8fde59e5-2bd4-477f-9313-cbc584f34912" name="Get Worksheet as Collection" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-240" w="120" h="30" /><outputs><output type="collection" name="Data" friendlyname="Data" narrative="The data output" stage="registerToBeManipulated" /></outputs><onsuccess>bb659988-7beb-43bb-b0fb-cffd58c59f76</onsuccess><resource object="MS Excel VBO" action="Get Worksheet As Collection (Fast)" /></stage><stage stageid="eb63823c-8e97-47ea-86aa-81e79a5af6fe" name="Activate Worksheet" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-285" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookName]" /><input type="text" name="Worksheet Name" friendlyname="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetName]" /><input type="flag" name="Create If Missing?" friendlyname="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>8fde59e5-2bd4-477f-9313-cbc584f34912</onsuccess><resource object="MS Excel VBO" action="Activate Worksheet" /></stage><stage stageid="5801b1be-21ad-4ce2-bade-5f1201d2a41c" name="Retry?" type="Decision"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>6ef8f4a0-8420-4471-8081-7b32794780dc</ontrue><onfalse>312b3ade-2fc8-42b5-ba18-6be345f79ce4</onfalse></stage><stage stageid="e28ed3f7-6153-4ce9-9d5c-df8d3475ba3e" name="Note8" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="210" y="-240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>e2caf50a-6ebc-4724-900b-1c2a4b224186</onsuccess></stage><stage stageid="e2caf50a-6ebc-4724-900b-1c2a4b224186" name="retryCounter ++" type="Calculation"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-285" w="120" h="30" /><onsuccess>39627833-684f-4570-9d7d-13004f158cba</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="6c379b66-3e33-4cb6-b6e4-298fd780deaa" name="Wait" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-375" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[waitInterval]" /></inputs><onsuccess>7f51afb1-9d2e-4185-9dff-c391d34f7d81</onsuccess><breakpoint type="0"><condition></condition></breakpoint><resource object="Utility - General" action="Sleep" /></stage><stage stageid="312b3ade-2fc8-42b5-ba18-6be345f79ce4" name="Note8" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="360" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>15b0bd0b-9466-47ba-b8dd-bf43a6d0ad52</onsuccess></stage><stage stageid="bb659988-7beb-43bb-b0fb-cffd58c59f76" name="Close Workbook" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-195" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[excelHandler]" /><input type="text" name="Workbook Name" friendlyname="Workbook Name" narrative="The name of the workbook which should be closed." expr="[workbookName]" /><input type="flag" name="Save Data" friendlyname="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." expr="False" /></inputs><onsuccess>53fec1ab-854d-424c-a54e-51b3e116a89d</onsuccess><resource object="MS Excel VBO" action="Close Workbook" /></stage><stage stageid="53fec1ab-854d-424c-a54e-51b3e116a89d" name="Close All Instances" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-150" w="120" h="30" /><onsuccess>4a9b8115-7497-4b63-866c-46e0542eb84b</onsuccess><resource object="MS Excel VBO" action="Close All Instances" /></stage><stage stageid="b2d66f8b-960c-4dc3-9267-aa606823db12" name="Recover" type="Recover"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit /><display x="90" y="-150" /><onsuccess>9c20fb80-7b91-4139-9c18-a457544388f5</onsuccess></stage><stage stageid="8829e7b2-ba8b-49c4-bd99-1f2d98027641" name="Excel Exception Handler" type="Block"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="-405" w="240" h="285" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4a9b8115-7497-4b63-866c-46e0542eb84b" name="note" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>Adjust Data to be Manipulated</narrative><display x="-30" y="-30" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>57ada798-3a42-48d6-8fc8-adbba27cacc0</onsuccess></stage><stage stageid="62939f61-251d-46c0-bbcf-385c9207a402" name="Note1" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit /><narrative>Adding items to the queue</narrative><display x="-30" y="105" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>f313a8bc-4874-4022-88cf-f34b5c509f10</onsuccess></stage><stage stageid="57ada798-3a42-48d6-8fc8-adbba27cacc0" name="Count registerToBeManipulated Registers" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-30" y="15" w="120" h="30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;registerToBeManipulated&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="amountRows" /></outputs><onsuccess>3589916d-df1b-4b99-8a63-317f7cd97972</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="3589916d-df1b-4b99-8a63-317f7cd97972" name="Has Queue Items?" type="Decision"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-30" y="60" w="120" h="30" /><decision expression="[amountRows] &gt; 0" /><ontrue>62939f61-251d-46c0-bbcf-385c9207a402</ontrue><onfalse>ddd98e74-4d89-4bcc-98db-cf733bcc5b33</onfalse></stage><stage stageid="ddd98e74-4d89-4bcc-98db-cf733bcc5b33" name="Note1" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit /><narrative>No itens to Add to the Queue</narrative><display x="210" y="60" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>8534cb4c-7385-4c09-b7db-37aa3b6eecf1</onsuccess></stage><stage stageid="1684aa25-186b-4d63-b00e-52c889266b44" name="Re-Throw" type="Exception"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="660" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="15b0bd0b-9466-47ba-b8dd-bf43a6d0ad52" name="Release Lock" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><narrative>Releases the lock(s) associated with the given name and token</narrative><display x="510" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="[lockName]" /><input type="text" name="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[lockToken]" /><input type="text" name="Comment" narrative="The comments to set on the lock(s)" expr="&quot;Release lock&quot;" /><input type="flag" name="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="True" /><input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="False" /></inputs><onsuccess>1684aa25-186b-4d63-b00e-52c889266b44</onsuccess><resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" /></stage><stage stageid="88c394b6-6189-4232-b0d9-fdcbb2f510d0" name="note" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>Get Data to be Manipulated.</narrative><display x="-30" y="-585" w="270" h="30" /><font family="Segoe UI" size="10" style="Bold" color="800080" /><onsuccess>7645f5ce-3ba3-48fe-914c-1a4471cda89d</onsuccess></stage><stage stageid="9c20fb80-7b91-4139-9c18-a457544388f5" name="Get Exception Data" type="MultipleCalculation"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="90" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3fc9ee5d-2adb-4e43-97d1-852e68f68fe1</onsuccess><steps><calculation expression="ExceptionType()" stage="exceptionType" /><calculation expression="ExceptionDetail()" stage="exceptionDetails" /></steps></stage><stage stageid="6ef8f4a0-8420-4471-8081-7b32794780dc" name="Resume" type="Resume"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit /><display x="210" y="-195" /><onsuccess>e28ed3f7-6153-4ce9-9d5c-df8d3475ba3e</onsuccess></stage><stage stageid="47ac21de-ec9f-4983-844b-299e66a57a93" name="Local Variables" type="Block"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-465" y="-615" w="180" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="5834c157-99f1-4469-9d46-50d22efc6db8" name="amountRows" type="Data"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-375" y="-525" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e301a4fb-60ef-437c-96d7-dcf16ea2496d" name="excelHandler" type="Data"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-375" y="-585" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0f11946-803f-4aee-8121-c857405599c3" name="registerToBeManipulated" type="Collection"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-375" y="-465" w="180" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="23538247-9283-4080-ad7a-ee2e4497ebef" name="Settings Variables" type="Block"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-465" y="-735" w="180" h="105" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="7a252d9a-9545-4c63-a126-f8b658f0107a" name="worksheetName" type="Data"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-375" y="-645" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">DADOS</initialvalue><private /><alwaysinit /></stage><stage stageid="b40bb6d2-749d-46be-8e65-a02ba088e576" name="workbookName" type="Data"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><display x="-375" y="-555" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="caa744b9-582c-44a3-a757-e79026ca6906" name="retryCounter" type="Data"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-375" y="-495" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5ab08e44-00ce-4080-869d-8b9740db9a7e" name="note" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>GENERAL SETTINGS</narrative><display x="-375" y="-690" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="f313a8bc-4874-4022-88cf-f34b5c509f10" name="Get distinct values (extractedVisitecNotes)" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="150" w="120" h="30" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="Any data set." expr="[registerToBeManipulated]" /><input type="text" name="Key Column" friendlyname="Key Column" narrative="Column that you wish to retrieve." expr="&quot;ID&quot;" /></inputs><outputs><output type="number" name="Count Distinct" friendlyname="Count Distinct" narrative="Unique Key Column values." stage="" /><output type="collection" name="Distinct" friendlyname="Distinct" narrative="Number of distinct values." stage="registerToBeManipulated" /></outputs><onsuccess>b1a8f73c-5f4f-415e-8583-33d61ee06da0</onsuccess><resource object="EY_Codes_C#" action="Get Distinct values from collection" /></stage><stage stageid="b1a8f73c-5f4f-415e-8583-33d61ee06da0" name="Insert New Columns and Values to Collection" type="Action"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="195" w="120" h="30" /><inputs><input type="collection" name="inputCollection" friendlyname="inputCollection" expr="[registerToBeManipulated]" /><input type="text" name="inputColumnName" friendlyname="inputColumnName" expr="&quot;ID,OUTRAS_COLUNAS_NECESSARIAS,startAutomationTime,endAutomationTime,processingTime,status,reportToBU,results,exceptionDetails,attempt&quot;" /><input type="text" name="inputColumnValue" friendlyname="inputColumnValue" expr="&quot;,,,,,,,,,&quot;" /><input type="text" name="inputColumnType" friendlyname="inputColumnType" expr="&quot;System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String&quot;" /></inputs><outputs><output type="collection" name="outputCollection" friendlyname="outputCollection" stage="registerToBeManipulated" /></outputs><onsuccess>edf08937-e79d-48fe-827a-04b32c7387cf</onsuccess><resource object="EY_Codes_C#" action="Insert New Columns and Values to Collection" /></stage><stage stageid="bbb09cfb-a85e-4f5b-b6f9-e9eb04fbc552" name="Enviroment Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="-75" w="180" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF6600" /></stage><stage stageid="81342a2c-50be-44c2-9fb5-1a8bd3943ae5" name="Global Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="105" w="180" h="45" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /></stage><stage stageid="c6c5dbd0-1638-4b62-83eb-b5edb88e4036" name="Local Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="225" w="180" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="abeab898-a9a4-4241-9952-a48739dd15a2" name="Input Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="165" w="180" h="45" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="dfb1e4e4-2362-40a6-b78a-c5bed6cefd4b" name="Output Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="285" w="180" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="c919b674-db1e-4647-82d9-e31093507f35" name="Settings Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="-135" w="180" h="45" /></stage><stage stageid="094f66b3-a565-476e-af4e-2a058dbff854" name="Session Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="45" w="180" h="45" /><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="b29f77f5-b4c9-4609-818b-1061247d6c0d" name="Credentials Variables" type="Block"><loginhibit onsuccess="true" /><display x="-540" y="-15" w="180" h="45" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="7ffe1760-47a6-4a95-83fd-cf9dbfb1350c" name="note" type="Note"><loginhibit onsuccess="true" /><narrative>EXEMPLE OF VARIABLE
ORDER</narrative><display x="-450" y="-165" w="180" h="30" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="fe93693c-bc2b-4d37-83a2-0ef3263d112d" name="Re-Throw" type="Exception"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit /><display x="585" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="62bd948c-a628-4b0e-85d0-2164493eda33" name="Note7" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><narrative>Navigate Back to the start of the transaction</narrative><display x="285" y="-180" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>31627112-ea65-4daa-9bce-0327b6969673</onsuccess></stage><stage stageid="5f689e7b-c9fe-4731-a776-d517f00cb1dc" name="Resume" type="Resume"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit /><display x="285" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>21649231-4381-40af-9d84-0791592cacad</onsuccess></stage><stage stageid="35f5fe51-af1e-4a94-bac9-7edbdb947788" name="Retry?" type="Decision"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><display x="285" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>5f689e7b-c9fe-4731-a776-d517f00cb1dc</ontrue><onfalse>4563f975-b9a1-40cf-94ea-7ef915bc2d1e</onfalse></stage><stage stageid="136370d9-29c2-4b0c-9194-453bfd89d2d1" name="retryCounter ++" type="Calculation"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><display x="285" y="-75" w="120" h="30" /><onsuccess>7600cd42-c301-4c5b-8cc4-0b19a4eb40e9</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="21649231-4381-40af-9d84-0791592cacad" name="Note8" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="285" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>136370d9-29c2-4b0c-9194-453bfd89d2d1</onsuccess></stage><stage stageid="4563f975-b9a1-40cf-94ea-7ef915bc2d1e" name="Note8" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="435" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>23455468-6e70-4f97-a928-fff9c1da7122</onsuccess></stage><stage stageid="23455468-6e70-4f97-a928-fff9c1da7122" name="Re-Throw" type="Exception"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit /><display x="585" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="7eea98fc-9098-46a0-aa5a-e9a5f2c86bdf" name="Note7" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><narrative>Navigate Back to the start of the transaction</narrative><display x="285" y="-180" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>7ff93bdb-5278-4fb8-8e24-8bfb19b0df9c</onsuccess></stage><stage stageid="fbb2bf62-c2a6-4aa4-aa24-0d88725d8c3c" name="Resume" type="Resume"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit /><display x="285" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2906c31e-b749-4923-a21f-216460a2a48e</onsuccess></stage><stage stageid="73e92fe3-d364-4ad8-9af9-605c3fe2a121" name="Retry?" type="Decision"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><display x="285" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>fbb2bf62-c2a6-4aa4-aa24-0d88725d8c3c</ontrue><onfalse>8377af5f-080b-48a1-8e41-31ffef6a60f1</onfalse></stage><stage stageid="0977a6c3-940e-46a2-8ce5-c24000f437d6" name="retryCounter ++" type="Calculation"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><display x="285" y="-75" w="120" h="30" /><onsuccess>0dca78b3-5be9-4422-a54f-51a37d8426a0</onsuccess><calculation expression="[retryCounter] + 1" stage="retryCounter" /></stage><stage stageid="2906c31e-b749-4923-a21f-216460a2a48e" name="Note8" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Try once more.</narrative><display x="285" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>0977a6c3-940e-46a2-8ce5-c24000f437d6</onsuccess></stage><stage stageid="8377af5f-080b-48a1-8e41-31ffef6a60f1" name="Note8" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Maximum Amount of Retries reached</narrative><display x="435" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="3366FF" /><onsuccess>51b11fa7-2266-4600-915c-596159a22bf0</onsuccess></stage><stage stageid="51b11fa7-2266-4600-915c-596159a22bf0" name="Re-Throw" type="Exception"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit /><display x="585" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="3b2cb3c5-494a-4fda-971e-eed8dfbb3982" name="Note7" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><narrative>Navigate Back to the start of the transaction</narrative><display x="285" y="-180" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /><onsuccess>47dce6ee-e0d2-484d-b8d7-13391dae7ffa</onsuccess></stage><stage stageid="d071f368-4baa-4cff-ac20-e2fe8f57a7b3" name="Note25" type="Note"><narrative>There are no more pending items for processing at the Queue</narrative><display x="-150" y="-495" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><onsuccess>8d7c42ea-bdfa-4c20-89ae-e18d90ab3d64</onsuccess></stage><stage stageid="39627833-684f-4570-9d7d-13004f158cba" name="Note8" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><narrative>Reset/kill process may be necessary</narrative><display x="210" y="-330" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="999999" /><onsuccess>6c379b66-3e33-4cb6-b6e4-298fd780deaa</onsuccess></stage><stage stageid="55743c8c-6bf0-407f-ae85-edc75f5a754b" name="Note8" type="Note"><subsheetid>5369d91a-f33b-4b55-8565-d145b541bbbf</subsheetid><loginhibit onsuccess="true" /><narrative>Reset/kill process may be necessary</narrative><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="999999" /><onsuccess>62bd948c-a628-4b0e-85d0-2164493eda33</onsuccess></stage><stage stageid="7600cd42-c301-4c5b-8cc4-0b19a4eb40e9" name="Note8" type="Note"><subsheetid>f1a3ef65-0397-48f6-aba7-835b950bf617</subsheetid><loginhibit onsuccess="true" /><narrative>Reset/kill process may be necessary</narrative><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="999999" /><onsuccess>7eea98fc-9098-46a0-aa5a-e9a5f2c86bdf</onsuccess></stage><stage stageid="0dca78b3-5be9-4422-a54f-51a37d8426a0" name="Note8" type="Note"><subsheetid>13844f7e-530b-46b3-834e-c2c4993b365f</subsheetid><loginhibit onsuccess="true" /><narrative>Reset/kill process may be necessary</narrative><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="999999" /><onsuccess>3b2cb3c5-494a-4fda-971e-eed8dfbb3982</onsuccess></stage><stage stageid="7598cb3c-7f41-4219-8afb-b269562102a1" name="Note3" type="Note"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><narrative>Reserved to Collections returned by DataSources Reading</narrative><display x="-150" y="-855" w="180" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="13d180ba-567c-45e5-99d7-36a5d714a7ab" name="Note12" type="Note"><subsheetid>1f15f6a2-37df-465c-8b7f-cb2292377042</subsheetid><narrative>"INSERT_HTML" And "INSERT_ASSUNTO" variables must be provided</narrative><display x="135" y="405" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="e0f9f9e9-61a0-4eb8-a581-1dd11a0ec923" name="Note12" type="Note"><subsheetid>5989e13c-a9a8-4d67-9fea-e76fb4b13956</subsheetid><narrative>"INSERT_HTML" And "INSERT_ASSUNTO" variables must be provided</narrative><display x="-120" y="810" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="660910d2-27e9-4102-868f-d7d871ef19bd" name="Note12" type="Note"><subsheetid>eb948783-6b10-43e9-8657-286ee1d21b9f</subsheetid><narrative>"INSERT_HTML" And "INSERT_ASSUNTO" variables must be provided</narrative><display x="180" y="-45" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="3fc9ee5d-2adb-4e43-97d1-852e68f68fe1" name="Anchor2" type="Anchor"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-90" w="10" h="10" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><onsuccess>5801b1be-21ad-4ce2-bade-5f1201d2a41c</onsuccess></stage><stage stageid="ebf6b15d-681c-42d6-b2e2-dd99c60a0717" name="pathReportFile" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-945" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="347a7c36-5de0-4d1a-9a12-e472cd7b2e29" name="Note6" type="Note"><subsheetid>567102a0-ea3e-452b-b3ad-cdc005d270f3</subsheetid><narrative>The cleaningof the queue may or may not be necessary accordingly to your process' needs</narrative><display x="120" y="-495" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="999999" /></stage><stage stageid="d518529a-321d-4990-a6c8-94d3ace46738" name="ENV_PROCESSID_DataSource" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><loginhibit onsuccess="true" /><display x="-345" y="-1230" w="180" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="17cc8ad5-0dd9-4ff8-97b3-1f358c93e659" name="dataSource" type="Data"><subsheetid>6a0fd76f-f946-41de-a25c-077f26b867a2</subsheetid><display x="-150" y="-1230" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage></process></process>
        <object id="b09d5717-672d-4f9d-81de-b724d7075436" name="EY_Codes_C#" xmlns="http://www.blueprism.co.uk/product/process"><process name="EY_Codes_C#" version="1.0" bpversion="7.1.1.65484" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>feb6e406-26da-46ca-9bb7-1c362ef169a7</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-90</camerax><cameray>9</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="f9755a79-5cd6-40c9-8c0e-1d673da0950e" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="457255ac-3b8a-4666-84de-295499f9ee68" type="Normal" published="True"><name>CSVs with custom delimiters</name><view><camerax>-8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c" type="Normal" published="True"><name>Convert Collection Column Type to Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5027a5af-6313-4b09-8abf-8447514b51ae" type="Normal" published="True"><name>Extract Collection inside Collection</name><view><camerax>0</camerax><cameray>36</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fa7bac8c-d76c-4191-9186-7a9c073d44bd" type="Normal" published="True"><name>Insert New Columns and Values to Collection</name><view><camerax>0</camerax><cameray>57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="786de76f-2d79-45cc-a030-6983e8645479" type="Normal" published="True"><name>Insert New Columns and Values to Collection_V2</name><view><camerax>-80</camerax><cameray>57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="48032f0e-0ac7-4b82-ab51-cb1593f05b1c" type="Normal" published="True"><name>Left Join (Collections Rows)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d033d770-4bcd-4a31-8947-3fe3c157a818" type="Normal" published="True"><name>Extract Regex From String</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9a27fe51-de91-4a07-8e5f-6975a11f1a40" type="Normal" published="True"><name>Reset Collection</name><view><camerax>0</camerax><cameray>-7</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b378e075-a39d-43a5-afcf-be25311ec661" type="Normal" published="True"><name>Insert WorkTime Value</name><view><camerax>-14</camerax><cameray>36</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd" type="Normal" published="True"><name>Sort Collection Columns</name><view><camerax>0</camerax><cameray>36</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="867bb26b-30f9-4e26-8c64-5a08b503cbfc" type="Normal" published="True"><name>Left Minus Join</name><view><camerax>0</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9" type="Normal" published="True"><name>Format Query</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c6a15daa-8e94-4954-86dd-6115007897ae" type="Normal" published="True"><name>Get Column Names</name><view><camerax>60</camerax><cameray>54</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef31fa05-3ec2-4c36-8083-b12d3818206c" type="Normal" published="True"><name>Format Condition</name><view><camerax>-90</camerax><cameray>57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b50c503f-349c-4df8-807c-21447b1e2ffb" type="Normal" published="True"><name>Checks if the value of a column in two collections are equal - Sequencial</name><view><camerax>60</camerax><cameray>125</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cefeb397-1f74-4017-9267-6d2c04b0aae4" type="Normal" published="True"><name>Checks if the value of a column in two collections are equal - Whole column</name><view><camerax>60</camerax><cameray>118</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aab27435-aa34-42e3-a346-09d1567c3e19" type="Normal" published="True"><name>Checks if the value of a column in two collections are equal - By filter</name><view><camerax>3</camerax><cameray>54</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5c365ed2-10d3-412f-ac72-94862c8127cc" type="Normal" published="True"><name>Sum columns values in the collection</name><view><camerax>60</camerax><cameray>54</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="267e9615-ad8a-4239-b212-17c0f5f7f1ba" type="Normal" published="True"><name>Insert Leading Zeros</name><view><camerax>60</camerax><cameray>6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b52c7222-aaa0-4581-9ed3-ec6c2445d5a0" type="Normal" published="True"><name>Count the number of lines of a text</name><view><camerax>60</camerax><cameray>33</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85066b4e-9af5-41bc-9d56-ccb8e670a743" type="Normal" published="True"><name>Join Collection Text</name><view><camerax>60</camerax><cameray>75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="170b5396-26d3-44ed-91dd-02df1be75503" type="Normal" published="True"><name>Format Update Query</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8f99ec62-b233-42b9-8004-0041a903c779" type="Normal" published="True"><name>Get Distinct Column Values</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cae4629b-eea3-44e0-8746-7bd278d527a8" type="Normal" published="True"><name>Get Distinct Collection Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="be6334de-f512-422f-ab0a-29421eca47f2" type="Normal" published="True"><name>Get Distinct values from collection</name><view><camerax>67</camerax><cameray>-82</cameray><zoom version="2">1.5625</zoom></view></subsheet><stage stageid="2a73210b-18e5-4a18-b5e2-25f0dd4cc449" name="Start" type="Start"><loginhibit /><display x="-60" y="-135" /><onsuccess>2b82031c-e8db-4275-8ee1-8712a3c01020</onsuccess></stage><stage stageid="2b82031c-e8db-4275-8ee1-8712a3c01020" name="End" type="End"><loginhibit /><display x="-60" y="-75" /></stage><stage stageid="bb7e9b5b-4538-43e2-b5c4-ab513823df2e" name="Stage1" type="ProcessInfo"><display x="-270" y="-105" w="300" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Linq.dll</reference><reference>Microsoft.VisualBasic.dll</reference><reference>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\System.Core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Collections.Generic</import><import>System.Linq</import><import>System.IO</import><import>System.Text.RegularExpressions</import><import>Microsoft.VisualBasic</import><import>System.Text</import><import>Microsoft.VisualBasic.FileIO</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="ab372ff1-09c6-4928-9bea-cc1e4bebf5af" name="Clean Up" type="SubSheetInfo"><subsheetid>f9755a79-5cd6-40c9-8c0e-1d673da0950e</subsheetid><display x="-270" y="-105" w="300" h="90" /></stage><stage stageid="06c39a53-e1bf-4aaa-a0ee-6248406ec02d" name="Start" type="Start"><subsheetid>f9755a79-5cd6-40c9-8c0e-1d673da0950e</subsheetid><loginhibit /><display x="-60" y="-135" /><onsuccess>258655d0-f0b9-4aec-ad9f-0007cfff8748</onsuccess></stage><stage stageid="258655d0-f0b9-4aec-ad9f-0007cfff8748" name="End" type="End"><subsheetid>f9755a79-5cd6-40c9-8c0e-1d673da0950e</subsheetid><loginhibit /><display x="-60" y="-75" /></stage><stage stageid="1be584f7-b6e9-4db4-860b-b138fe550ad9" name="Format Query" type="SubSheetInfo"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><display x="-195" y="-105" w="300" h="90" /></stage><stage stageid="c899fdd2-0879-42ab-8604-14613a3bdd1a" name="Start" type="Start"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="60" y="-135" /><inputs><input type="text" name="condition" stage="condition" /><input type="collection" name="parameters" stage="parameters" /></inputs><onsuccess>097b8d74-a41f-43a7-bf71-7162299ac783</onsuccess></stage><stage stageid="09556743-c3fc-4839-a6f8-f4a2a8aa858f" name="End" type="End"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="60" y="75" /><outputs><output type="text" name="resultCondition" stage="resultCondition" /></outputs></stage><stage stageid="705262f4-3b80-4acc-b53e-d307eefa23e3" name="Note1" type="Note"><subsheetid>f9755a79-5cd6-40c9-8c0e-1d673da0950e</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="90" y="-45" w="180" h="230" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="dba0c2b5-71ed-4c45-8bd7-f238d246f72b" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="90" y="-45" w="180" h="230" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="3fc9e802-d986-48cb-8ce8-9dc8e704d151" name="condition" type="Data"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><display x="-120" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eaab10c8-57b6-4310-be89-96f038b7027d" name="parameters" type="Collection"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="-120" y="75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2bb52da6-9ceb-433f-bf4a-85baa7fa3296" name="Input Variables" type="Block"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="15" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="23059544-4805-4d81-b183-4e6fce9aa1e1" name="Output Variables" type="Block"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="e2d3db21-8b80-4833-a637-7dc0dccf9738" name="Exception" type="Block"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-105" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="80341cda-89cc-4528-b234-f003893ad6ee" name="Recover" type="Recover"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="210" y="15" /><onsuccess>2bc123e3-92b2-480e-95b9-59da4ecf116f</onsuccess></stage><stage stageid="39508967-ef84-4751-a9d2-433342fc85b1" name="Resume" type="Resume"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="360" y="-75" /><onsuccess>0dd569a6-1ee7-412e-8773-c95e43776ce6</onsuccess></stage><stage stageid="2bc123e3-92b2-480e-95b9-59da4ecf116f" name="Retry?" type="Decision"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="360" y="15" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>f73d39ca-0dc6-4f69-a08d-75807fac6eee</ontrue><onfalse>f4d2e4a1-2ad4-414b-af12-230a7651bc79</onfalse></stage><stage stageid="116ad499-ced4-49e8-abb5-866ab5ea321f" name="retryCounter" type="Data"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><display x="-120" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="afee95a4-02ad-43a9-a6be-ebe0bfa733fd" name="Local Variables" type="Block"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="f73d39ca-0dc6-4f69-a08d-75807fac6eee" name="Increment retryCount" type="Calculation"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="360" y="-30" w="120" h="30" /><onsuccess>39508967-ef84-4751-a9d2-433342fc85b1</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="f4d2e4a1-2ad4-414b-af12-230a7651bc79" name="Re-Throw" type="Exception"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><display x="495" y="15" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="0dd569a6-1ee7-412e-8773-c95e43776ce6" name="Sleep XS" type="Action"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-75" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>097b8d74-a41f-43a7-bf71-7162299ac783</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="19c5dfcf-95a2-4f27-bd48-1447d8b8644c" name="Settings Variables" type="Block"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><display x="-195" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="d151ab41-9fd9-46e9-afbc-ab1c42dfd50f" name="maxRetry" type="Data"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><display x="-120" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="097b8d74-a41f-43a7-bf71-7162299ac783" name="Format Query" type="Code"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><loginhibit /><display x="60" y="-75" w="120" h="30" /><inputs><input type="text" name="condition" expr="[condition]" /><input type="collection" name="parameters" expr="[parameters]" /></inputs><outputs><output type="text" name="resultCondition" stage="resultCondition" /></outputs><onsuccess>09556743-c3fc-4839-a6f8-f4a2a8aa858f</onsuccess><code><![CDATA[var listCondition = new List<string>();
resultCondition = "";

foreach (DataRow row in parameters.Rows)
{
  listCondition.Add(condition.Replace("$value1$", row["cfop"].ToString()).Replace("$value2$", row["cnpj"].ToString()));
}

resultCondition = String.Join(" OR ", listCondition);]]></code></stage><stage stageid="7f8b811f-30fe-4af3-935f-e1a44bb0839e" name="resultCondition" type="Data"><subsheetid>fd4b609d-7c91-4075-b4ed-dfd4fa8d6eb9</subsheetid><display x="-120" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25eaa1ed-1a87-4c6a-a5b6-94db2a509f1b" name="Get Column Names" type="SubSheetInfo"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><display x="-225" y="-90" w="300" h="90" /></stage><stage stageid="f4f0308f-4282-41bb-9a03-91b75a356fcc" name="Start" type="Start"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="30" y="-120" /><inputs><input type="text" name="patternRowValue" stage="patternRowValue" /><input type="text" name="patternColumnName" stage="patternColumnName" /><input type="collection" name="inputCollection" stage="inputCollection" /></inputs><onsuccess>49341d29-976f-44f7-82e5-8f957bfa53a4</onsuccess></stage><stage stageid="bf639dd2-1c3c-48ef-ae48-7f0d8bca8c8e" name="End" type="End"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="30" y="90" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="5172fe59-a8db-4e5c-a34a-f2a86f7390f8" name="patternColumnName" type="Data"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><display x="-150" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef156ddf-a01a-4c59-9131-1c130c3e2bbc" name="inputCollection" type="Collection"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="-150" y="120" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fd0d1d41-b2d4-4375-93b4-19921efbd883" name="Input Variables" type="Block"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit onsuccess="true" /><display x="-225" y="30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="4181d629-eb11-44a9-8969-330c60391965" name="Output Variables" type="Block"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="-225" y="210" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="3e0743ac-5bb5-4ca5-88b8-2deb5f94f20e" name="Exception" type="Block"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit onsuccess="true" /><display x="-45" y="-90" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="8883185e-7cae-4bea-b568-ac0f794414f2" name="Recover" type="Recover"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="180" y="30" /><onsuccess>7a570a03-4b4a-4aae-a070-5611d68ebf24</onsuccess></stage><stage stageid="dbfaa262-9b92-40c8-b018-58f1b854f394" name="Resume" type="Resume"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="330" y="-60" /><onsuccess>3d7b6861-315f-40ac-a8a1-aff0b8670c92</onsuccess></stage><stage stageid="7a570a03-4b4a-4aae-a070-5611d68ebf24" name="Retry?" type="Decision"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="330" y="30" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>8b4f5e1d-8b88-4529-95f2-348814bdde94</ontrue><onfalse>cb0cf778-dc7a-4d61-8ddf-6321183376b6</onfalse></stage><stage stageid="90a9df27-0d5e-4150-86d4-2cc05bb23469" name="retryCounter" type="Data"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><display x="-150" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="777ebc50-2b8b-4f21-9f22-6d8a7eb0f010" name="Local Variables" type="Block"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="-225" y="150" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="8b4f5e1d-8b88-4529-95f2-348814bdde94" name="Increment retryCount" type="Calculation"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="330" y="-15" w="120" h="30" /><onsuccess>dbfaa262-9b92-40c8-b018-58f1b854f394</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="cb0cf778-dc7a-4d61-8ddf-6321183376b6" name="Re-Throw" type="Exception"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><display x="465" y="30" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="3d7b6861-315f-40ac-a8a1-aff0b8670c92" name="Sleep XS" type="Action"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit onsuccess="true" /><display x="180" y="-60" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>49341d29-976f-44f7-82e5-8f957bfa53a4</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="7059e76f-6e47-4d9f-bcc4-f80b5440f8cd" name="Settings Variables" type="Block"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><display x="-225" y="-30" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="edf40dc6-9dd8-4128-a0fa-31f37739e189" name="maxRetry" type="Data"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><display x="-150" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="49341d29-976f-44f7-82e5-8f957bfa53a4" name="Get column names" type="Code"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="30" y="-60" w="120" h="30" /><inputs><input type="text" name="patternColumnName" expr="[patternColumnName]" /><input type="text" name="patternRowValue" expr="[patternRowValue]" /><input type="collection" name="inputCollection" expr="[inputCollection]" /></inputs><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>bf639dd2-1c3c-48ef-ae48-7f0d8bca8c8e</onsuccess><code><![CDATA[            outputCollection = new DataTable();
			outputCollection.Columns.Add("column_name", typeof(string));
            outputCollection.Columns.Add("value", typeof(string));
			
			var listColumns = new List<string>();
            var columnNames = inputCollection.Columns;

            foreach (DataColumn column in inputCollection.Columns)
            {
                if (column.ColumnName.Trim().ToUpper().Contains(patternColumnName.Trim().ToUpper()))
                    listColumns.Add(column.ColumnName);
            }

            foreach (DataRow row1 in inputCollection.Rows)
            {
                foreach (String column in listColumns)
                    {
                    if (row1[column].ToString().Trim().ToUpper().Contains(patternRowValue.Trim().ToUpper()))
                    {                   
                        DataRow row2 = outputCollection.NewRow();
                        row2["column_name"] = column;
                        row2["value"] = row1[column.Replace(patternColumnName, String.Empty)];
						outputCollection.Rows.Add(row2);
                    }
                }
            }
]]></code></stage><stage stageid="cbff5180-ce09-4a21-beb8-aae6137b97c9" name="patternRowValue" type="Data"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><display x="-150" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7d6d1cd-4432-42bc-9116-7baf2989f80e" name="outputCollection" type="Collection"><subsheetid>c6a15daa-8e94-4954-86dd-6115007897ae</subsheetid><loginhibit /><display x="-150" y="240" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3d018530-8ca6-40a9-914b-41000eac85e7" name="Format Condition" type="SubSheetInfo"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="3973142a-b34c-4de5-8a0a-2dc909292901" name="Start" type="Start"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="patternColumnName" stage="patternColumnName" /><input type="text" name="condition" stage="condition" /><input type="collection" name="inputCollection" stage="inputCollection" /></inputs><onsuccess>298aee7a-7e2a-4250-9a33-f661328a58df</onsuccess></stage><stage stageid="2efe77cd-a8d2-471c-b220-ba972dcd4d0f" name="End" type="End"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="text" name="resultCondition" stage="resultCondition" /></outputs></stage><stage stageid="2be50f8c-2c41-4c5e-8182-1bd6dc6580ad" name="patternColumnName" type="Data"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="-165" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dabfaaf-a50a-4b5e-9f3a-526691def75e" name="inputCollection" type="Collection"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="-165" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c1c94469-9578-4664-94a9-f42caa433282" name="Input Variables" type="Block"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="15" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="dbb61e12-d31b-40bb-b721-384b13e21bf8" name="Output Variables" type="Block"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="-240" y="195" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="2b067f07-7949-42a0-bd5f-b7e78ce90fdf" name="Exception" type="Block"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit onsuccess="true" /><display x="-60" y="-105" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="3e47d741-09f9-416f-89c0-22b096a12ec9" name="Recover" type="Recover"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="165" y="15" /><onsuccess>8200297d-fbfa-4fc8-808c-a6742c82ff43</onsuccess></stage><stage stageid="fcb41c7e-acec-459d-9b7b-3e8cbc42fe98" name="Resume" type="Resume"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="315" y="-75" /><onsuccess>3a9921be-4eb8-49ee-b0d4-612e227ce11a</onsuccess></stage><stage stageid="8200297d-fbfa-4fc8-808c-a6742c82ff43" name="Retry?" type="Decision"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="315" y="15" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>9150f8ee-3dec-4409-9761-f0819191d639</ontrue><onfalse>d6219158-2eec-41b4-9c7c-f67459e52e28</onfalse></stage><stage stageid="076c7e82-4172-4205-982c-f56ae26c5a84" name="retryCounter" type="Data"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="-165" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="74aefb92-1a74-46a2-8d3b-c66b56abdd54" name="Local Variables" type="Block"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="-240" y="135" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="9150f8ee-3dec-4409-9761-f0819191d639" name="Increment retryCount" type="Calculation"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="315" y="-30" w="120" h="30" /><onsuccess>fcb41c7e-acec-459d-9b7b-3e8cbc42fe98</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="d6219158-2eec-41b4-9c7c-f67459e52e28" name="Re-Throw" type="Exception"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="465" y="15" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="3a9921be-4eb8-49ee-b0d4-612e227ce11a" name="Sleep XS" type="Action"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit onsuccess="true" /><display x="165" y="-75" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>298aee7a-7e2a-4250-9a33-f661328a58df</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="939949ba-b3aa-49f1-a548-064e9ec70a5f" name="Settings Variables" type="Block"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="-240" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="d85e2b20-a771-4d41-9046-a1d6e66486f6" name="maxRetry" type="Data"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="-165" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="298aee7a-7e2a-4250-9a33-f661328a58df" name="Format condition" type="Code"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><inputs><input type="text" name="patternColumnName" expr="[patternColumnName]" /><input type="text" name="condition" expr="[condition]" /><input type="collection" name="inputCollection" expr="[inputCollection]" /></inputs><outputs><output type="text" name="resultCondition" stage="resultCondition" /></outputs><onsuccess>2efe77cd-a8d2-471c-b220-ba972dcd4d0f</onsuccess><code><![CDATA[			//OP
			var listColumns = new List<string>();
			var listCondition1 = new List<string>();
            var columnNames = inputCollection.Columns;
			resultCondition = "";
		
            foreach (DataColumn column in inputCollection.Columns)
            {
                if (column.ColumnName.Trim().ToUpper().Contains(patternColumnName.Trim().ToUpper()))
                    listColumns.Add(column.ColumnName);
            }

            foreach (DataRow row1 in inputCollection.Rows)
            {
                foreach (String column in listColumns)
                {
                    if (!String.IsNullOrEmpty(row1[column].ToString()))
						listCondition1.Add("["+column.Replace(patternColumnName, String.Empty).Trim().ToUpper() + "] " + row1[column].ToString() + " " + row1[column.Replace(patternColumnName, String.Empty)].ToString());					
			    }
            }
						
			//EXP
			listColumns.Clear();
            var listCondition2 = new List<string>();
            var counter = 0;
            var listCounter = 0;

            do
            {
                listCounter = listColumns.Count;
                ++counter;

                foreach (DataColumn column in inputCollection.Columns)
                {
                    if (column.ColumnName.Trim().ToUpper().Equals("EXP" + counter))
                        listColumns.Add(column.ColumnName);
                }

            } while (listCounter<listColumns.Count);

            foreach (DataRow row1 in inputCollection.Rows)
            {
                foreach (String column in listColumns)
                {
                    if (!String.IsNullOrEmpty(row1[column].ToString()))
                    {
                        listCondition2.Add(row1[column].ToString() + " " + row1[column+"_op"].ToString() + " " + row1[column + "_value"].ToString());
                    }
                }
            }

            listCondition1.AddRange(listCondition2);
			resultCondition = String.Join(" " + condition.Trim() + " ", listCondition1);]]></code></stage><stage stageid="b550adcb-f24e-4bc3-b8ef-feafc180cccf" name="condition" type="Data"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="-165" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd8b6574-57be-4b37-9022-89029a528c9f" name="resultCondition" type="Data"><subsheetid>ef31fa05-3ec2-4c36-8083-b12d3818206c</subsheetid><display x="-165" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d70f488-a7d4-4cf5-91a2-b41cd75223f1" name="Format Update Query" type="SubSheetInfo"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><display x="-240" y="-120" w="300" h="90" /></stage><stage stageid="1a181eb8-25d3-4a1d-88e2-722d17003c66" name="Start" type="Start"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="15" y="-150" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /><input type="collection" name="referenceTableParameters" stage="referenceTableParameters" /></inputs><onsuccess>9c7fae70-3fca-4e1e-936b-6acfa376016b</onsuccess></stage><stage stageid="07dc8284-11c5-4c76-98ca-01b27cb67ee7" name="End" type="End"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="resultCondition" stage="resultCondition" /></outputs></stage><stage stageid="9c7fae70-3fca-4e1e-936b-6acfa376016b" name="Format Update" type="Code"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><inputs><input type="collection" name="inputCollection" expr="[inputCollection]" /><input type="collection" name="referenceTableParameters" expr="[referenceTableParameters]" /></inputs><outputs><output type="text" name="resultCondition" stage="resultCondition" /></outputs><onsuccess>07dc8284-11c5-4c76-98ca-01b27cb67ee7</onsuccess><code><![CDATA[    // ************************************************************************************
    // Task Name: Format SQL Update Terms.
    // Description: This code aims to format each column which has value on its single-row input collection, into SQL's Update terms.
    // Input List:
    //		inputCollection: Single-Row collection.
	//		columnsToIgnore: Lists all columns which must be utilized in the concatenation, in comma separated values.
    // Last Updated On: 2021-06-29
    // Last Updated By: Lucas.RodriguesOliveira@br.ey.com
    // ************************************************************************************
	
	//Variables Declaration
	var listColumns = new List<string>();
	var listCondition1 = new List<string>();
    var columnNames = inputCollection.Columns;
	resultCondition = "";
	
	//Get Columns With Value
	foreach (DataColumn column in inputCollection.Columns) {
		foreach (DataRow row in referenceTableParameters.Rows) {
			if (row[0].ToString().ToUpper() == column.ColumnName.Trim().ToUpper()) {
				listColumns.Add(column.ColumnName);
			}
		}
	}
	
	// Build Query Terms. E.G: [Column] = 'newValue'
    foreach (DataRow row1 in inputCollection.Rows) {
		foreach (String column in listColumns) {
			if (!String.IsNullOrEmpty(row1[column].ToString())) {
				if (row1[column].ToString().Contains("[")){
					listCondition1.Add("["+column.Trim().ToUpper() + "] = " + row1[column].ToString());
				}
				else{
					listCondition1.Add("["+column.Trim().ToUpper() + "] = '" + row1[column].ToString() + "'");
				}
			}	
		}
	}
	
	// Concatenates all generated Terms.
	resultCondition = String.Join(", ", listCondition1);]]></code></stage><stage stageid="2522200e-bb24-4132-b4e5-83adeda0af76" name="inputCollection" type="Collection"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="-165" y="30" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3dec497b-ea2e-49c2-bb3d-8ee9533a6375" name="Input Variables" type="Block"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="0" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="a1e02e7c-09ab-4ca1-9838-7db0ad80e0c9" name="Output Variables" type="Block"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="-240" y="150" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="f8d0cb4a-1445-429c-8fa4-1160fdfb3927" name="Recover" type="Recover"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="165" y="0" /><onsuccess>2ef940bb-a260-401d-bf37-a4ed42da406d</onsuccess></stage><stage stageid="96e06886-9c49-44f7-be56-125be034cf75" name="Resume" type="Resume"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="315" y="-90" /><onsuccess>0eac7abc-c2ed-4ebf-a17e-16a8e071b796</onsuccess></stage><stage stageid="2ef940bb-a260-401d-bf37-a4ed42da406d" name="Retry?" type="Decision"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="315" y="0" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>3943256d-8af7-4b59-8425-f5220bfe6c72</ontrue><onfalse>19200769-a156-43ea-9fc8-27f287075a8d</onfalse></stage><stage stageid="d9a6a38d-9e68-4610-bc46-c1a978273aea" name="retryCounter" type="Data"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><display x="-165" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="05296232-768a-4bcf-8935-93f08a9e5b6f" name="Local Variables" type="Block"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="-240" y="90" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="3943256d-8af7-4b59-8425-f5220bfe6c72" name="Increment retryCount" type="Calculation"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="315" y="-45" w="120" h="30" /><onsuccess>96e06886-9c49-44f7-be56-125be034cf75</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="19200769-a156-43ea-9fc8-27f287075a8d" name="Re-Throw" type="Exception"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><display x="465" y="0" w="120" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="0eac7abc-c2ed-4ebf-a17e-16a8e071b796" name="Sleep M" type="Action"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit onsuccess="true" /><display x="165" y="-90" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeM]" /></inputs><onsuccess>9c7fae70-3fca-4e1e-936b-6acfa376016b</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="70da2cf6-b5ef-4cc3-8fcb-69845fce6d0a" name="Settings Variables" type="Block"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><display x="-240" y="-60" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="11651e65-c944-4348-80cb-03c737a20b5f" name="maxRetry" type="Data"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><display x="-165" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="70f4e1ea-3e91-4a8c-bd9a-9df83ad01c80" name="resultCondition" type="Data"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><display x="-165" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="829f5fd1-fe4a-4c11-b3bb-26ed77b2d6d9" name="Exception" type="Block"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><loginhibit /><display x="-60" y="-120" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="96f43ffe-b3ea-482a-931e-6f551a7bd8f0" name="referenceTableParameters" type="Collection"><subsheetid>170b5396-26d3-44ed-91dd-02df1be75503</subsheetid><display x="-165" y="60" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2c483ea8-f2c6-4b90-823d-01c0b5884190" name="Checks if the value of a column in two collections are equal - Sequencial" type="SubSheetInfo"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="-210" y="-105" w="300" h="90" /></stage><stage stageid="c11cf979-b1cf-460c-a705-12658b2fafbc" name="Start" type="Start"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="45" y="-135" /><inputs><input type="collection" name="inputCollection1" stage="inputCollection1" /><input type="collection" name="inputCollection2" stage="inputCollection2" /><input type="text" name="columnName1" stage="columnName1" /><input type="text" name="columnName2" stage="columnName2" /></inputs><onsuccess>96b59ee7-4bd7-416a-bd44-2453440b8eb8</onsuccess></stage><stage stageid="73a525e0-0bed-4a5c-8cbc-5e5cc908c006" name="End" type="End"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="45" y="75" /><outputs><output type="flag" name="equal" stage="equal" /></outputs></stage><stage stageid="3784fa38-11fb-4a81-b020-7690599d8c2e" name="columnName1" type="Data"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="-135" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="403dba27-72df-4bd2-af53-1f66e5b33768" name="Input Variables" type="Block"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="15" w="150" h="135" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="06ba5130-5334-41e9-89e4-ffbb08d4f318" name="Output Variables" type="Block"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="-210" y="225" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="009c1ff1-e739-4691-8529-dfcc84a918e1" name="Exception" type="Block"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-105" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="277c33f2-0703-459d-a8b2-2991a4ba24cc" name="Recover" type="Recover"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="195" y="15" /><onsuccess>8112ca7a-e114-4a9a-9dd3-d14e1ac1aef0</onsuccess></stage><stage stageid="f1b6c8ab-ecc6-4b55-bca1-a45aa9cd2262" name="Resume" type="Resume"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="345" y="-75" /><onsuccess>8d1a453b-c8b0-4d12-b670-ca811328c407</onsuccess></stage><stage stageid="8112ca7a-e114-4a9a-9dd3-d14e1ac1aef0" name="Retry?" type="Decision"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="345" y="15" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>3199e644-555f-4287-b759-ec189f99398f</ontrue><onfalse>e63c4e73-32c9-4825-a77a-c29ea4daf131</onfalse></stage><stage stageid="20367191-d3a7-4049-9ef7-007b5ebc3ed5" name="retryCounter" type="Data"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="-135" y="195" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="b8554de6-889d-4839-be3a-f8f7f4c67543" name="Local Variables" type="Block"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="-210" y="165" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="3199e644-555f-4287-b759-ec189f99398f" name="Increment retryCount" type="Calculation"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="345" y="-30" w="120" h="30" /><onsuccess>f1b6c8ab-ecc6-4b55-bca1-a45aa9cd2262</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="e63c4e73-32c9-4825-a77a-c29ea4daf131" name="Re-Throw" type="Exception"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="480" y="15" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="8d1a453b-c8b0-4d12-b670-ca811328c407" name="Sleep XS" type="Action"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-75" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>96b59ee7-4bd7-416a-bd44-2453440b8eb8</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="c909a705-c5d1-41ab-9c27-8888ebc58ad1" name="Settings Variables" type="Block"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="-210" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="0ab15d66-4723-4276-aae8-f4e11fa93079" name="maxRetry" type="Data"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="-135" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="96b59ee7-4bd7-416a-bd44-2453440b8eb8" name="Check if column value is equal - sequencial" type="Code"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><inputs><input type="text" name="columnName1" expr="[columnName1]" /><input type="text" name="columnName2" expr="[columnName2]" /><input type="collection" name="inputCollection1" expr="[inputCollection1]" /><input type="collection" name="inputCollection2" expr="[inputCollection2]" /></inputs><outputs><output type="flag" name="equal" stage="equal" /></outputs><onsuccess>73a525e0-0bed-4a5c-8cbc-5e5cc908c006</onsuccess><code><![CDATA[              equal = true;
			  var index = 0;
			   foreach (DataRow row1 in inputCollection1.Rows)
               {
				   Double num = 0;
				   bool isDouble = false;
				   isDouble  = Double.TryParse(row1[columnName1].ToString().Trim(), out num);
				   //var teste = Double.TryParse(row1[columnName1].ToString().Trim(), out parsedNumber);
                   if (isDouble)
                   {
                       if (!(Convert.ToDouble(row1[columnName1].ToString().Trim()) == Convert.ToDouble(inputCollection2.Rows[index][columnName2].ToString().Trim())))
                       {
                           equal = false;
                           break;
                       }
                   }
                   else
                   {
                       if (!row1[columnName1].ToString().Trim().ToUpper().Equals(inputCollection2.Rows[index][columnName2].ToString().Trim().ToUpper()))
                       {
                           equal = false;
                           break;
                       }

                   }
                   index = ++index;
               }
               
            Console.WriteLine(equal);]]></code></stage><stage stageid="4f8c2d04-398b-4e78-bb6f-488c92016973" name="columnName2" type="Data"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="-135" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b7fd18a-1ba8-440d-adbe-33e909334d4e" name="inputCollection1" type="Collection"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="-135" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="331af19e-1c8c-4b68-9455-71011e9caa30" name="equal" type="Data"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><display x="-135" y="255" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859a1be2-0ed0-472f-8a44-536b0c035d60" name="inputCollection2" type="Collection"><subsheetid>b50c503f-349c-4df8-807c-21447b1e2ffb</subsheetid><loginhibit /><display x="-135" y="135" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8834ca57-b66c-4bae-a548-2c7e3f1aaee4" name="Checks if the value of a column in two collections are equal - Whole column" type="SubSheetInfo"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-210" y="-105" w="300" h="90" /></stage><stage stageid="0845501a-f21e-4b19-8681-158e0c37d0e1" name="Start" type="Start"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="45" y="-135" /><inputs><input type="collection" name="inputCollection1" stage="inputCollection1" /><input type="collection" name="inputCollection2" stage="inputCollection2" /><input type="text" name="indexColumnNameToCheckValue1" stage="indexColumnNameToCheckValue1" /><input type="text" name="indexColumnNameToCheckValue2" stage="indexColumnNameToCheckValue2" /><input type="text" name="indexColumnNameToMatch1" stage="indexColumnNameToMatch1" /><input type="text" name="indexColumnNameToMatch2" stage="indexColumnNameToMatch2" /></inputs><onsuccess>7d4479d3-d22c-491e-9e87-953ccd756808</onsuccess></stage><stage stageid="00824ce3-fca9-45a4-95d2-fcb39e1d39b7" name="End" type="End"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="45" y="75" /><outputs><output type="flag" name="allRowsAreEqual" stage="allRowsAreEqual" /><output type="flag" name="successToMatchColumns" stage="successToMatchColumns" /></outputs></stage><stage stageid="a5d34060-45a8-42e7-9747-395061993f5d" name="indexColumnNameToMatch1" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa7ef78a-dc9d-420c-bc67-d6a5ea070392" name="Input Variables" type="Block"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="15" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="ff81e6ce-e3ba-425c-adeb-bd1656c08774" name="Output Variables" type="Block"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="-210" y="285" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="b4a0d5b2-248b-4668-8203-da35fd56d7be" name="Exception" type="Block"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-105" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="15c1d001-a948-4be7-a9f7-cdd793525cec" name="Recover" type="Recover"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="195" y="15" /><onsuccess>f99706ae-5940-4055-b1db-752c6557276e</onsuccess></stage><stage stageid="8af65cef-b30e-4d6f-8271-cbf487001e65" name="Resume" type="Resume"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="345" y="-75" /><onsuccess>54d842d3-563c-4602-a143-85c4be400650</onsuccess></stage><stage stageid="f99706ae-5940-4055-b1db-752c6557276e" name="Retry?" type="Decision"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="345" y="15" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>be7f9a8b-a0d5-469c-a8f5-3d1cbd2dcaae</ontrue><onfalse>5d44b707-2cad-4915-a408-e3dbd573d06e</onfalse></stage><stage stageid="0314cddd-4ba9-4733-aed8-49167e260d49" name="retryCounter" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="255" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="8f066bb5-3297-40cd-957b-148ce80b1765" name="Local Variables" type="Block"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="-210" y="225" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="be7f9a8b-a0d5-469c-a8f5-3d1cbd2dcaae" name="Increment retryCount" type="Calculation"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="345" y="-30" w="120" h="30" /><onsuccess>8af65cef-b30e-4d6f-8271-cbf487001e65</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="5d44b707-2cad-4915-a408-e3dbd573d06e" name="Re-Throw" type="Exception"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="480" y="15" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="54d842d3-563c-4602-a143-85c4be400650" name="Sleep XS" type="Action"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-75" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>7d4479d3-d22c-491e-9e87-953ccd756808</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="02d8884d-d45a-49a6-a63e-087c01ec0d93" name="Settings Variables" type="Block"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-210" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="cf9f414f-4526-4175-8e9b-ca623b219d7f" name="maxRetry" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="7d4479d3-d22c-491e-9e87-953ccd756808" name="Check if column value is equal - check columns" type="Code"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><inputs><input type="text" name="indexColumnNameToMatch1" expr="[indexColumnNameToMatch1]" /><input type="text" name="indexColumnNameToMatch2" expr="[indexColumnNameToMatch2]" /><input type="text" name="indexColumnNameToCheckValue1" expr="[indexColumnNameToCheckValue1]" /><input type="text" name="indexColumnNameToCheckValue2" expr="[indexColumnNameToCheckValue2]" /><input type="collection" name="inputCollection1" expr="[inputCollection1]" /><input type="collection" name="inputCollection2" expr="[inputCollection2]" /></inputs><outputs><output type="flag" name="allRowsAreEqual" stage="allRowsAreEqual" /><output type="flag" name="successToMatchColumns" stage="successToMatchColumns" /></outputs><onsuccess>00824ce3-fca9-45a4-95d2-fcb39e1d39b7</onsuccess><code><![CDATA[            allRowsAreEqual = true;
			successToMatchColumns = true;
            var auxTable = new DataTable();
            DataView dv = inputCollection2.DefaultView;
			
            foreach (DataRow row1 in inputCollection1.Rows)
            {
                dv.RowFilter = String.Format("[{0}] = '{1}'", indexColumnNameToMatch2, row1[indexColumnNameToMatch1]);
                auxTable = dv.ToTable();

                if (auxTable.Rows.Count == 1)
                {
                    Double num = 0;
                    bool isDouble = false;
                    isDouble = Double.TryParse(row1[indexColumnNameToCheckValue1].ToString().Trim(), out num);
                    if (isDouble)
                    {
                        if (!(Convert.ToDouble(row1[indexColumnNameToCheckValue1].ToString().Trim()) == Convert.ToDouble(auxTable.Rows[0][indexColumnNameToCheckValue2].ToString().Trim())))
                        {
                            allRowsAreEqual = false;
                            break;
                        }
                    }
                    else
                    {
                        if (!row1[indexColumnNameToCheckValue1].ToString().Trim().ToUpper().Equals(auxTable.Rows[0][indexColumnNameToCheckValue2].ToString().Trim().ToUpper()))
                        {
                            allRowsAreEqual = false;
                            break;
                        }
                    }
                }else
                {
                    successToMatchColumns = false;
                    allRowsAreEqual = false;
                    break;
                }
            }]]></code></stage><stage stageid="4ab7308e-a8f6-4f6f-82e4-f60c3079f4fd" name="indexColumnNameToMatch2" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57c8dbd3-e19e-4f5a-a9c5-3ef9915bbebf" name="inputCollection1" type="Collection"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="-135" y="165" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61680709-83fa-4398-8af9-fc3fd46d07a1" name="inputCollection2" type="Collection"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><loginhibit /><display x="-135" y="195" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0b07b023-08f0-4f04-bf37-a486cda60b0f" name="indexColumnNameToCheckValue1" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">value</initialvalue><private /><alwaysinit /></stage><stage stageid="8e16a568-55dd-4d67-9a33-8e6baed998dc" name="indexColumnNameToCheckValue2" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">value</initialvalue><private /><alwaysinit /></stage><stage stageid="5a8f5731-3af0-4e3a-b2e0-0ce4cc9638b1" name="successToMatchColumns" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="345" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7452bec1-83f6-4bb4-b933-7cbef13c3d17" name="allRowsAreEqual" type="Data"><subsheetid>cefeb397-1f74-4017-9267-6d2c04b0aae4</subsheetid><display x="-135" y="315" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54f550e2-91d3-49b2-885e-924f8b1fc88e" name="Checks if the value of a column in two collections are equal - By filter" type="SubSheetInfo"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><display x="-210" y="-90" w="300" h="90" /></stage><stage stageid="a267c4db-fb7a-4162-8f6f-711ef49aff2f" name="Start" type="Start"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="45" y="-120" /><inputs><input type="text" name="filter" stage="filter" /><input type="collection" name="inputCollection1" stage="inputCollection1" /><input type="collection" name="inputCollection2" stage="inputCollection2" /></inputs><onsuccess>611d9d18-4bdf-41ca-8e53-dbc55521da07</onsuccess></stage><stage stageid="d1e6835f-2757-46e0-95eb-29c05a9b07b2" name="End" type="End"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="45" y="90" /><outputs><output type="flag" name="allRowsAreEqual" stage="allRowsAreEqual" /></outputs></stage><stage stageid="648103cf-849f-488c-ae6b-fde95e6c5a34" name="filter" type="Data"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><display x="-135" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4102e7a1-f72b-483e-b175-38d46f18f45f" name="Input Variables" type="Block"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="dec2c4e8-b430-4e8c-aeaa-cfc760ae1b72" name="Output Variables" type="Block"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="-210" y="210" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="efb7ac8f-b939-4078-ba4f-20dc35833fe4" name="Exception" type="Block"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-90" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="fd9e40f4-1d82-4221-80af-3a0dc01be0c1" name="Recover" type="Recover"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="195" y="30" /><onsuccess>6085a48f-d978-440e-8181-5d2eaedf49eb</onsuccess></stage><stage stageid="5dcc184d-fa6a-4999-9861-f245140e2e3e" name="Resume" type="Resume"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="345" y="-60" /><onsuccess>9401a0f5-8fe9-4ed0-8077-42f69db668fd</onsuccess></stage><stage stageid="6085a48f-d978-440e-8181-5d2eaedf49eb" name="Retry?" type="Decision"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="345" y="30" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>27363ea5-d1e4-4ef9-ba2d-b4307da523ba</ontrue><onfalse>cce85029-f711-4af7-8c4c-d504d70c7517</onfalse></stage><stage stageid="3c3c5d08-884a-4eb8-9208-a5ade9f38230" name="retryCounter" type="Data"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><display x="-135" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="bf5cd69d-da2f-41fe-99d0-3e88d0cf9ba1" name="Local Variables" type="Block"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="-210" y="150" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="27363ea5-d1e4-4ef9-ba2d-b4307da523ba" name="Increment retryCount" type="Calculation"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="345" y="-15" w="120" h="30" /><onsuccess>5dcc184d-fa6a-4999-9861-f245140e2e3e</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="9401a0f5-8fe9-4ed0-8077-42f69db668fd" name="Sleep XS" type="Action"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-60" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>611d9d18-4bdf-41ca-8e53-dbc55521da07</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="9137d0b3-da06-4a47-95c9-ba4915e9e04f" name="Settings Variables" type="Block"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><display x="-210" y="-30" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="809fd200-58a8-4785-a6e3-8eda32c96778" name="maxRetry" type="Data"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><display x="-135" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="611d9d18-4bdf-41ca-8e53-dbc55521da07" name="Check if column value is equal - by filter" type="Code"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="45" y="-60" w="120" h="30" /><inputs><input type="text" name="filter" expr="[filter]" /><input type="collection" name="inputCollection1" expr="[inputCollection1]" /><input type="collection" name="inputCollection2" expr="[inputCollection2]" /></inputs><outputs><output type="flag" name="allRowsAreEqual" stage="allRowsAreEqual" /></outputs><onsuccess>d1e6835f-2757-46e0-95eb-29c05a9b07b2</onsuccess><code><![CDATA[			allRowsAreEqual = true;
            var index = 0;
            var auxTable = new DataTable();
            DataView dv = inputCollection2.DefaultView;
            var listFilter = filter.Split(new[] { " " }, StringSplitOptions.None);
     
            foreach (DataRow row1 in inputCollection1.Rows)
            {
                //Set variables
                var itemIndex = 0;
                var itemIndexMatch = 2;
                var formatedFilter = "";
                //Format filter
				
                foreach (String item in listFilter)
                {
                    if (itemIndex == itemIndexMatch)
                    {
                        if(item.Contains("'"))
						{
							formatedFilter = formatedFilter + "'" + row1[item.Replace("'[", "").Replace("]'", "")].ToString()+ "'";
                            itemIndexMatch = itemIndexMatch + 4;
						}else
						{
							formatedFilter = formatedFilter + row1[item.Replace("[", "").Replace("]", "")].ToString();
                            itemIndexMatch = itemIndexMatch + 4;
						}
                    }
                    else
                    {
                        formatedFilter = formatedFilter + " " + item;   
                    }
                    itemIndex = ++itemIndex;
                } 
                dv.RowFilter = formatedFilter.Trim();
                auxTable = dv.ToTable();

                if (auxTable.Rows.Count != 1)
                {
                    allRowsAreEqual = false;
                    break;
                }  
                index = ++index;
            }]]></code></stage><stage stageid="be30fb4e-31db-4b22-8b69-13c97d135388" name="inputCollection1" type="Collection"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="-135" y="90" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="751453ce-f67d-4c8d-8050-ddb4dd66f14a" name="inputCollection2" type="Collection"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><loginhibit /><display x="-135" y="120" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ac889064-f3d1-4832-99f7-de5ec053dfc2" name="allRowsAreEqual" type="Data"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><display x="-135" y="240" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="49a1e4f3-634f-4b55-97ff-58bf4f2ff9a8" name="Sum columns values in the collection" type="SubSheetInfo"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><display x="-210" y="-105" w="300" h="90" /></stage><stage stageid="f76f8245-718d-4de0-b943-436f5fc2530a" name="Start" type="Start"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="45" y="-135" /><inputs><input type="text" name="columnName" stage="columnName" /><input type="collection" name="inputCollection1" stage="inputCollection1" /></inputs><onsuccess>b0286f8b-f13f-4e2c-b88d-24d5ecdf8e8d</onsuccess></stage><stage stageid="4cd901ec-10cc-498e-b509-8230522262a5" name="End" type="End"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="45" y="75" /><outputs><output type="number" name="sum" stage="sum" /></outputs></stage><stage stageid="91cca583-0228-4b2f-91a7-e947d889b802" name="columnName" type="Data"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><display x="-135" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4745000e-c35e-4055-857f-15542b149fe1" name="Input Variables" type="Block"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="15" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="71664c45-cf06-4f99-a9fc-6ae196ba8e3e" name="Output Variables" type="Block"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="-210" y="165" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="d7b045dd-2272-4edd-85cf-76105973975d" name="Exception" type="Block"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-105" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="a2d806c3-e06d-4070-9e7b-a53488030556" name="Recover" type="Recover"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="195" y="15" /><onsuccess>e1c12d83-00b5-48eb-82ae-2b3fce3901ae</onsuccess></stage><stage stageid="6cb052b0-4792-4087-8d06-9032634e4817" name="Resume" type="Resume"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="345" y="-75" /><onsuccess>8cda69af-16c6-4aa7-89e4-304adcaaa37b</onsuccess></stage><stage stageid="e1c12d83-00b5-48eb-82ae-2b3fce3901ae" name="Retry?" type="Decision"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="345" y="15" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>cae8a5d4-9c90-42fe-9f69-87e1076b0b54</ontrue><onfalse>fd77c410-f3ab-4d96-8435-0152d153b6e2</onfalse></stage><stage stageid="acff2daf-9c14-47c6-9d26-2291e952a64d" name="retryCounter" type="Data"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><display x="-135" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="206f494a-ba38-4e7d-9d81-388869dd1a2e" name="Local Variables" type="Block"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="-210" y="105" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="cae8a5d4-9c90-42fe-9f69-87e1076b0b54" name="Increment retryCount" type="Calculation"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="345" y="-30" w="120" h="30" /><onsuccess>6cb052b0-4792-4087-8d06-9032634e4817</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="fd77c410-f3ab-4d96-8435-0152d153b6e2" name="Re-Throw" type="Exception"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><display x="480" y="15" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="8cda69af-16c6-4aa7-89e4-304adcaaa37b" name="Sleep XS" type="Action"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-75" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>b0286f8b-f13f-4e2c-b88d-24d5ecdf8e8d</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="0499b65a-f859-47ba-9e85-93c4a801f569" name="Settings Variables" type="Block"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><display x="-210" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="a8ff8ea6-e3c8-4f4e-a5de-60a1e8803688" name="maxRetry" type="Data"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><display x="-135" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="b0286f8b-f13f-4e2c-b88d-24d5ecdf8e8d" name="Sum columns values" type="Code"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><inputs><input type="text" name="columnName" expr="[columnName]" /><input type="collection" name="inputCollection1" expr="[inputCollection1]" /></inputs><outputs><output type="number" name="sum" stage="sum" /></outputs><onsuccess>4cd901ec-10cc-498e-b509-8230522262a5</onsuccess><code><![CDATA[//sum = Convert.ToDecimal(inputCollection1.Compute("SUM("+columnName+")", string.Empty));
sum = 0;
foreach (DataRow row in inputCollection1.Rows){
	sum += Convert.ToDecimal(row[columnName]);
	}]]></code></stage><stage stageid="042eb6d3-eed4-4b50-aff3-3d4f8e496ffc" name="inputCollection1" type="Collection"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><loginhibit /><display x="-135" y="75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fa97d355-4953-4579-a4bb-e73b63fa2c86" name="sum" type="Data"><subsheetid>5c365ed2-10d3-412f-ac72-94862c8127cc</subsheetid><display x="-135" y="195" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="88b6571c-0db8-458b-b442-5de069d14ba1" name="Insert Leading Zeros" type="SubSheetInfo"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="-210" y="-105" w="300" h="90" /></stage><stage stageid="54cd7077-eaac-4187-9953-c0b7178dbfaa" name="Start" type="Start"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="45" y="-135" /><inputs><input type="text" name="valueToAdjust" stage="valueToAdjust" /><input type="number" name="numberOfCharacter" stage="numberOfCharacter" /></inputs><onsuccess>6684491d-ad3b-4a4c-b5aa-2a64e907f186</onsuccess></stage><stage stageid="5ed9f725-0447-4e08-a414-5f4df2f50745" name="End" type="End"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="45" y="75" /><outputs><output type="text" name="adjustedValue" stage="adjustedValue" /></outputs></stage><stage stageid="07f68828-4887-48af-80c5-88e41444c5dd" name="valueToAdjust" type="Data"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="-135" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f93ea83-91f5-4e06-8206-39dd8cb2fd82" name="Input Variables" type="Block"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="15" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="74fb9c52-672e-4a86-8f04-7514e6e04f49" name="Output Variables" type="Block"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="-210" y="165" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="1759bc69-28de-49a1-88ba-6a566a51124b" name="Exception" type="Block"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-105" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="f6b5235e-767e-4fc9-97e3-01df924cac6c" name="Recover" type="Recover"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="195" y="15" /><onsuccess>21ac6ccc-6a60-42cb-9298-66c671887677</onsuccess></stage><stage stageid="6baeacab-fe4b-4ca3-9aa7-e50e63cfb9c4" name="Resume" type="Resume"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="360" y="-75" /><onsuccess>f0c35a08-092d-4d86-b783-f9163af65d80</onsuccess></stage><stage stageid="21ac6ccc-6a60-42cb-9298-66c671887677" name="Retry?" type="Decision"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="360" y="15" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>6241574b-7534-4dc2-b781-3a590a82a9f0</ontrue><onfalse>ce27fb2f-8861-44f7-b17f-f936f2b1f7ac</onfalse></stage><stage stageid="34ce2883-525f-4a56-ab94-053e89432110" name="retryCounter" type="Data"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="-135" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="11accb8d-f4cf-4e0d-9270-dd4b4135d418" name="Local Variables" type="Block"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="-210" y="105" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="6241574b-7534-4dc2-b781-3a590a82a9f0" name="Increment retryCount" type="Calculation"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="360" y="-30" w="120" h="30" /><onsuccess>6baeacab-fe4b-4ca3-9aa7-e50e63cfb9c4</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="ce27fb2f-8861-44f7-b17f-f936f2b1f7ac" name="Re-Throw" type="Exception"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="510" y="15" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="f0c35a08-092d-4d86-b783-f9163af65d80" name="Sleep XS" type="Action"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-75" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>6684491d-ad3b-4a4c-b5aa-2a64e907f186</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="02a2a924-9ec4-4842-93e7-e8693fac45f0" name="Settings Variables" type="Block"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="-210" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="0b329f40-a435-42db-9f20-d543d43c94d0" name="maxRetry" type="Data"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="-135" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="6684491d-ad3b-4a4c-b5aa-2a64e907f186" name="Insert Leading Zeros" type="Code"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><inputs><input type="number" name="valueToAdjust" expr="[valueToAdjust]" /><input type="number" name="numberOfCharacter" expr="[numberOfCharacter]" /></inputs><outputs><output type="text" name="adjustedValue" stage="adjustedValue" /></outputs><onsuccess>5ed9f725-0447-4e08-a414-5f4df2f50745</onsuccess><code><![CDATA[            adjustedValue = "";
			var valueToAdjustAux = Convert.ToString(valueToAdjust).Split(new[] { "." }, StringSplitOptions.None)[0];
			var valueToAdjust_numberOfCharacter = valueToAdjustAux.Length;
			var numberOfZerosToInsert = numberOfCharacter - valueToAdjust_numberOfCharacter;

            for(int i =0; i < numberOfZerosToInsert; i++) 
            {
                adjustedValue = "0" + adjustedValue;
            }

            adjustedValue = adjustedValue + valueToAdjustAux;]]></code></stage><stage stageid="a0f47499-81dc-417e-a45b-7c0c9a6552bd" name="numberOfCharacter" type="Data"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="-135" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7f7a4d3-7dac-408f-8f3a-e77d509987b4" name="adjustedValue" type="Data"><subsheetid>267e9615-ad8a-4239-b212-17c0f5f7f1ba</subsheetid><display x="-135" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="46d7d88f-0fa3-4478-a32a-b609e7052a7c" name="Count the number of lines of a text" type="SubSheetInfo"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><display x="-210" y="-105" w="300" h="90" /></stage><stage stageid="747139bd-4371-41f6-9631-f33050def0f8" name="Start" type="Start"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="45" y="-120" /><inputs><input type="text" name="inputText" stage="inputText" /></inputs><onsuccess>83398f03-57ba-43f3-a8b6-6c382d8cf828</onsuccess></stage><stage stageid="ad498860-5a80-47d2-afa9-8270656a6bb5" name="End" type="End"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="45" y="90" /><outputs><output type="number" name="numberOfLines" stage="numberOfLines" /></outputs></stage><stage stageid="acf1a54b-9eca-4935-902b-d400e3a573d8" name="inputText" type="Data"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><display x="-135" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a81e1e80-b728-4a08-963e-e6a3bd6fc3b6" name="Input Variables" type="Block"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="15" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="3633561b-d55d-4f1f-9a2b-1f2a9b9a94c9" name="Output Variables" type="Block"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="-210" y="135" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="b1390b8e-14f1-4e95-9be1-29027762515c" name="Exception" type="Block"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-90" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="efe3c3ca-b137-4342-ab59-9ef9bdef88cb" name="Recover" type="Recover"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="195" y="30" /><onsuccess>570b2313-e964-4d8d-b882-117102f35dee</onsuccess></stage><stage stageid="3e9741f5-c615-4c90-bb25-8037d233b11d" name="Resume" type="Resume"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="345" y="-60" /><onsuccess>c7eb0bff-309e-4b7d-bbca-0686a386fa57</onsuccess></stage><stage stageid="570b2313-e964-4d8d-b882-117102f35dee" name="Retry?" type="Decision"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="345" y="30" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>3c94699c-d58e-4765-83cf-8b7b028f8f8d</ontrue><onfalse>83d796d3-0a8d-4c8a-9dd9-97facdbfe332</onfalse></stage><stage stageid="bb056993-e8f4-4847-afb9-8cb669d54f66" name="retryCounter" type="Data"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><display x="-135" y="105" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="3a509f95-1e1c-4b46-a702-2a4412c28f6b" name="Local Variables" type="Block"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="-210" y="75" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="3c94699c-d58e-4765-83cf-8b7b028f8f8d" name="Increment retryCount" type="Calculation"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="345" y="-15" w="120" h="30" /><onsuccess>3e9741f5-c615-4c90-bb25-8037d233b11d</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="83d796d3-0a8d-4c8a-9dd9-97facdbfe332" name="Re-Throw" type="Exception"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><display x="480" y="30" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="c7eb0bff-309e-4b7d-bbca-0686a386fa57" name="Sleep XS" type="Action"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-60" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>83398f03-57ba-43f3-a8b6-6c382d8cf828</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="84741d8e-5ee0-488f-ab16-1e8534ffce65" name="Settings Variables" type="Block"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><display x="-210" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="fb1765d2-be35-4379-bfa7-dcd559a4633a" name="maxRetry" type="Data"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><display x="-135" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="83398f03-57ba-43f3-a8b6-6c382d8cf828" name="Count number of lines" type="Code"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><loginhibit /><display x="45" y="-60" w="120" h="30" /><inputs><input type="text" name="inputText" expr="[inputText]" /></inputs><outputs><output type="number" name="numberOfLines" stage="numberOfLines" /></outputs><onsuccess>ad498860-5a80-47d2-afa9-8270656a6bb5</onsuccess><code><![CDATA[var listFilter = inputText.Split(new[] {Environment.NewLine}, StringSplitOptions.None);
numberOfLines = listFilter.Length;]]></code></stage><stage stageid="a68e39b0-f4e5-4d41-a0be-fd7ac2eed25b" name="numberOfLines" type="Data"><subsheetid>b52c7222-aaa0-4581-9ed3-ec6c2445d5a0</subsheetid><display x="-135" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54772577-193f-4cd1-811e-0fc62b68ce0a" name="Join Collection Text" type="SubSheetInfo"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="-210" y="-105" w="300" h="90" /></stage><stage stageid="fe67e114-e9e1-47be-a26a-ea141d3ccc74" name="Start" type="Start"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="45" y="-135" /><inputs><input type="text" name="separator" stage="separator" /><input type="text" name="columnName" stage="columnName" /><input type="collection" name="inputCollection" stage="inputCollection" /></inputs><onsuccess>9e90a838-cf3c-4c83-8df1-4f485d8b5ff2</onsuccess></stage><stage stageid="16aa6d25-d397-46ec-83ea-73cbc30626fd" name="End" type="End"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="45" y="75" /><outputs><output type="text" name="joinedText" stage="joinedText" /></outputs></stage><stage stageid="af14d99c-397f-41fd-9e97-e252d378208f" name="separator" type="Data"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="-135" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d06620e4-6b6a-463e-80fd-5f83be5d9868" name="Input Variables" type="Block"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="15" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="a71b10ae-ee6e-4691-a676-a6e6c03f56d5" name="Output Variables" type="Block"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="-210" y="195" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="6699bcb9-3abc-4c7a-9752-a5962f968228" name="Exception" type="Block"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="-105" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="69c90c0f-57d5-4f36-a552-714e69c670ae" name="Recover" type="Recover"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="195" y="15" /><onsuccess>89661645-d0f2-4932-b4f6-ce0c11ce56f9</onsuccess></stage><stage stageid="386f1e90-95ac-4547-afdf-13ac604e4bad" name="Resume" type="Resume"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="345" y="-75" /><onsuccess>8599774d-772b-4b3c-894e-65e54e399a1d</onsuccess></stage><stage stageid="89661645-d0f2-4932-b4f6-ce0c11ce56f9" name="Retry?" type="Decision"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="345" y="15" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>ebbb4742-f608-4832-9678-7bda48eb79d0</ontrue><onfalse>1f5fc79b-7795-42dc-ab7a-090b7a6afb99</onfalse></stage><stage stageid="eef43c52-2e4b-442f-987f-074a70e4ffbf" name="retryCounter" type="Data"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="-135" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="5e536345-9b34-43e7-a10b-32b8a9ea90bb" name="Local Variables" type="Block"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="-210" y="135" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="ebbb4742-f608-4832-9678-7bda48eb79d0" name="Increment retryCount" type="Calculation"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="345" y="-30" w="120" h="30" /><onsuccess>386f1e90-95ac-4547-afdf-13ac604e4bad</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="1f5fc79b-7795-42dc-ab7a-090b7a6afb99" name="Re-Throw" type="Exception"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="480" y="15" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="8599774d-772b-4b3c-894e-65e54e399a1d" name="Sleep XS" type="Action"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-75" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>9e90a838-cf3c-4c83-8df1-4f485d8b5ff2</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="4fe59d5b-b0ab-4875-b496-4d7d1df4468f" name="Settings Variables" type="Block"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="-210" y="-45" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="cb8856dc-1c46-41d3-bc85-28a793e1a635" name="maxRetry" type="Data"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="-135" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="9e90a838-cf3c-4c83-8df1-4f485d8b5ff2" name="Join Text" type="Code"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><inputs><input type="text" name="separator" expr="[separator]" /><input type="collection" name="inputCollection" expr="[inputCollection]" /><input type="text" name="columnName" expr="[columnName]" /></inputs><outputs><output type="text" name="joinedText" stage="joinedText" /></outputs><onsuccess>16aa6d25-d397-46ec-83ea-73cbc30626fd</onsuccess><code><![CDATA[var list = new List<string>();
foreach (DataRow row in inputCollection.Rows)
{
  list.Add(row[columnName].ToString());
}
joinedText = String.Join(separator, list);]]></code></stage><stage stageid="777af6f7-b2f8-42d6-a812-45d91639f58f" name="columnName" type="Data"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="-135" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eb48aebd-e2b5-4b76-8e7a-f8e30d2202b6" name="inputCollection" type="Collection"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><loginhibit /><display x="-135" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c42200f9-6e0d-49f5-948e-2778f8fad322" name="joinedText" type="Data"><subsheetid>85066b4e-9af5-41bc-9d56-ccb8e670a743</subsheetid><display x="-135" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">,</initialvalue><private /><alwaysinit /></stage><stage stageid="d8233347-8318-47b1-9081-ce9777edb105" name="Extract Collection inside Collection" type="SubSheetInfo"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="c6486dfd-6853-444a-930e-b6aaf2a62401" name="Start" type="Start"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /></inputs><onsuccess>9b89e280-828d-4c67-8f17-cd7ab73e859b</onsuccess></stage><stage stageid="c542b747-7b24-4455-a824-962d8d0d2617" name="End" type="End"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit /><display x="0" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="b4d62ef5-b157-44e7-a4d4-1333c432027d" name="inputCollection" type="Collection"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="37e8fa73-0af7-4a39-93ec-f79c25791698" name="Input Variables" type="Block"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="abc50a89-f05d-48c4-88c9-e46a64588db3" name="errorMessage" type="Data"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><display x="-165" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="82816109-7a29-401c-bee9-7b0e97a2bed9" name="success" type="Data"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit /><display x="-165" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="8a17d22c-f402-4c1d-b0fe-1d51ff268ccc" name="Output Variables" type="Block"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit /><display x="-240" y="15" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="9b89e280-828d-4c67-8f17-cd7ab73e859b" name="Extract Collection" type="Code"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><inputs><input type="collection" name="InputCollection" expr="[inputCollection]" /></inputs><outputs><output type="flag" name="Success" stage="success" /><output type="text" name="ErrorMessage" stage="errorMessage" /><output type="collection" name="SaidaDT2" stage="outputCollection" /></outputs><onsuccess>c542b747-7b24-4455-a824-962d8d0d2617</onsuccess><code><![CDATA[ErrorMessage = String.Empty;
Success = true;

DataTable dt1 = InputCollection;
var dt2 = new System.Data.DataTable();
var dt3 = new System.Data.DataTable();
int columnsDT1 = dt1.Columns.Count;
int rowsDT1 = dt1.Rows.Count;
List<string> ColumnsDT1 = new List<string>();
bool find = false;
string type ="";
int ColumnDT2 = 0;
int i = 0;
int index = 0;
int i2 = 0;
int index2 = 0;
int ListNumber = 0;
int iNewColumns = 0;
bool hasColumn = false;


try
{
     
	for (int k = 0; k < columnsDT1; k++)
	{	
		find = false;
		type = dt1.Columns[k].DataType.ToString();
		if (type == "System.Data.DataTable")
		{
			ColumnDT2 = k;
			find = true;
		}
		if (find == false)
		{
		string ColumnsName = dt1.Columns[k].ColumnName.ToString();
		ColumnsDT1.Add(ColumnsName);   //Add the name of each Column of the Main DataTable to a list (exclude the name of the Column with has an collection)
		}
	}
	
	ListNumber = ColumnsDT1.Count;
	
	
	foreach (DataRow rowsDt1 in dt1.Rows)  //Loop foreach row of the First Datatable
	{
		dt2 = (DataTable)dt1.Rows[0][ColumnDT2];   //Passes the Collection (with was inside the First Datatable) to another Datatable2
		
		index = i;
		
		foreach (var name in ColumnsDT1)   //Loop foreach item (Column Name) of the List created
		{	
			
			iNewColumns++;
			if (iNewColumns <= ListNumber) //In this process, the Columns of the Main DataTable will be added to the Collection 2 (with was inside the First Datatable). So it is necessary to check if the Column was already added (It is not possible to add the same column twice)
			{
				if (dt2.Columns.Contains(name) == false)
				{
					dt2.Columns.Add(name); //Add Column of the Main DT to the Second Collection
					
					foreach (DataRow rowsDt2 in dt2.Rows)
					{
						index2 = i2;
						dt2.Rows[index2][name]	= dt1.Rows[index][name]; // Add the data of the first DT to second DT (Fill the Column Added)
						i2++;
					}
					
				}
			}
			
				i2 = 0;
		}
		i++;
		
		//Create Append for each dt2
		dt3.Merge(dt2); // Move all the information to a Third DT to merge all (If the DT1 has more than one Row)
	}
		
	
	
	


}
catch (Exception e)
{
	Success = false;
	ErrorMessage = e.Message;
}


SaidaDT2 = dt3;

]]></code></stage><stage stageid="8882c118-fbe2-4595-8dc2-ec2898bdc52e" name="outputCollection" type="Collection"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><display x="-165" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c0a69153-8be9-4ecb-88b7-fa14ecab2328" name="Insert WorkTime Value" type="SubSheetInfo"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="8edd3fab-b607-494f-afea-f68d00a7441c" name="Start" type="Start"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /><input type="text" name="inputValue" stage="inputValue" /></inputs><onsuccess>3fbea444-e8f8-4687-bb3a-cb839d57ce31</onsuccess></stage><stage stageid="ef181fa9-8ef1-4a3a-97d5-f49d7f118459" name="End" type="End"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><display x="0" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="5f03d25b-5891-46de-8870-6f7d4879472c" name="inputCollection" type="Collection"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b9aa39f0-538d-4376-b1e6-268b93f287b9" name="Input Variables" type="Block"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="fa5ff350-9f51-4548-88c5-fe9d19a96f78" name="errorMessage" type="Data"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><display x="-165" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79b1c2c8-a1ea-4571-b38a-173a06309b53" name="success" type="Data"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><display x="-165" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ea5de55a-c7a9-4990-8b8f-4b72d6889ffe" name="Output Variables" type="Block"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><display x="-240" y="45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="3fbea444-e8f8-4687-bb3a-cb839d57ce31" name="Insert Worktime" type="Code"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><inputs><input type="collection" name="InputCollection" expr="[inputCollection]" /><input type="text" name="inputValue" expr="[inputValue]" /></inputs><outputs><output type="flag" name="Success" stage="success" /><output type="text" name="ErrorMessage" stage="errorMessage" /><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>ef181fa9-8ef1-4a3a-97d5-f49d7f118459</onsuccess><code><![CDATA[ErrorMessage = String.Empty;
Success = true;
DataTable dt1 = InputCollection;
Type tipo;
int j =0;

try
{	
	
	tipo = inputValue.GetType();
	
	dt1.Columns.Add("TEMPO_PROCESSAMENTO", tipo);
	
	int RowsCount = dt1.Rows.Count;
	
	
	foreach (DataRow rowsDt1 in dt1.Rows) 
	{	
		
		if (j == 0)
		{
		dt1.Rows[j]["TEMPO_PROCESSAMENTO"] = inputValue;
		}
		else
		{
			dt1.Rows[j]["TEMPO_PROCESSAMENTO"] = "0:00:00";
		}
		j++;
	}

}
catch (Exception e)
{
	Success = false;
	ErrorMessage = e.Message;
}

outputCollection = dt1;]]></code></stage><stage stageid="01c1c339-7e35-443b-9f92-e7ac17b5f8b9" name="outputCollection" type="Collection"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><display x="-165" y="135" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="07bd68f1-070d-4a81-93e0-2315acbb87eb" name="inputValue" type="Data"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><display x="-165" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2655bbf5-8514-4633-95d6-7bb56ac02e60" name="Insert New Columns and Values to Collection" type="SubSheetInfo"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="f0c9b394-eb46-46f8-aed5-d38d5ff3c798" name="Start" type="Start"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /><input type="text" name="inputColumnName" stage="inputColumnName" /><input type="text" name="inputColumnValue" stage="inputColumnValue" /><input type="text" name="inputColumnType" stage="inputColumnType" /></inputs><onsuccess>52de9670-380c-42d6-b427-4d1a614de593</onsuccess></stage><stage stageid="9fe99ad5-ff61-4f4d-91b6-59539ac1ce51" name="End" type="End"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><display x="0" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="44c2e483-d5ed-4952-9935-bf26119e9cef" name="inputCollection" type="Collection"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><display x="-165" y="75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="78d809aa-2eb3-4c3e-b367-ff648490cebf" name="Input Variables" type="Block"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="150" h="135" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="99cf344a-e894-449d-8daf-0f9417c0f257" name="errorMessage" type="Data"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><display x="-165" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3dfb912-9fbd-4b73-b8dd-85550f12b048" name="success" type="Data"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><display x="-165" y="165" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="bfa6f479-a6ff-40d4-bcbe-3d405dcc230d" name="Output Variables" type="Block"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><display x="-240" y="105" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="52de9670-380c-42d6-b427-4d1a614de593" name="Insert New Columns and Values" type="Code"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><inputs><input type="collection" name="InputCollection" expr="[inputCollection]" /><input type="text" name="inputColumnName" expr="[inputColumnName]" /><input type="text" name="inputColumnValue" expr="[inputColumnValue]" /><input type="text" name="inputColumnType" expr="[inputColumnType]" /></inputs><outputs><output type="flag" name="Success" stage="success" /><output type="text" name="ErrorMessage" stage="errorMessage" /><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>9fe99ad5-ff61-4f4d-91b6-59539ac1ce51</onsuccess><code><![CDATA[ErrorMessage = String.Empty;
Success = true;
DataTable dt1 = InputCollection;
List<string> ColumnName_list = new List<string>();
List<string> ColumnValue_list = new List<string>();
List<string> ColumnType_list = new List<string>();
int ListNewColumns = 0;
int t = 0;
int j =0;


try
{	
	
	
    string[] namesArray = inputColumnName.Split(',');
	string[] valuesArray = inputColumnValue.Split(',');
	string[] typeArray = inputColumnType.Split(',');
	ColumnName_list.AddRange(namesArray);
	ColumnValue_list.AddRange(valuesArray);
	ColumnType_list.AddRange(typeArray);
	
	ListNewColumns = ColumnName_list.Count;
	
	if ( ColumnName_list.Count != ColumnValue_list.Count && ColumnName_list.Count != ColumnType_list.Count && ColumnName_list.Count != ColumnType_list.Count)
	{
		throw new Exception("The lenght of the inputs are different");
	}

	t = 0;
	foreach (var name in ColumnName_list)  
	{   
		if(ColumnType_list[t] == "System.String")
		{
			dt1.Columns.Add(name, typeof(string));
		}
		else if (ColumnType_list[t] == "System.Decimal")
		{
			dt1.Columns.Add(name, typeof(decimal));
		}
		else if (ColumnType_list[t] == "System.Boolean")
		{
			dt1.Columns.Add(name, typeof(bool));
		}
		else if (ColumnType_list[t] == "System.DateTime")
		{
			dt1.Columns.Add(name, typeof(DateTime));
		}
		t++;
	}
			
	for (int i = 0; i < ListNewColumns; i++) 
	{
			foreach (DataRow rowsDt1 in dt1.Rows) 
			{	
				
				dt1.Rows[j][ColumnName_list[i]] = ColumnValue_list[i];
				j++;
			}
		j=0;
	}

}
catch (Exception e)
{
	Success = false;
	ErrorMessage = e.Message;
}

outputCollection = dt1;


]]></code></stage><stage stageid="960fa3ae-f0c8-4e41-a7e8-98e5debe4f53" name="outputCollection" type="Collection"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><display x="-165" y="195" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5a8c02c9-1fb2-4250-9ac0-74a24fa2c181" name="inputColumnName" type="Data"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Exemple: Column1,Column2,Column3</narrative><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f74b9a3c-3b93-41ab-ac39-0d8e249f2fc9" name="inputColumnValue" type="Data"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Exemple: Text1,2,5,True,False,</narrative><display x="-165" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="37228d88-113b-4209-a817-585f9eafaf78" name="inputColumnType" type="Data"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) and below are the options:
System.String	
System.Decimal	
System.Boolean
System.DateTime

Exemple: System.Decimal,System.DateTime
		</narrative><display x="-165" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e10f2d32-cc42-4902-964a-2da2b8780f1d" name="Sort Collection Columns" type="SubSheetInfo"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><display x="-225" y="-105" w="300" h="90" /></stage><stage stageid="f3172295-016c-4e1c-b9f8-d2013d1a7933" name="Start" type="Start"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /><input type="text" name="inputOrder" stage="inputOrder" /><input type="flag" name="inputDelete" stage="delete" /></inputs><onsuccess>a46a6602-07e2-4dd6-9614-e292dc16cfc1</onsuccess></stage><stage stageid="c5e64fb8-2ef3-4ecb-83c3-439ca0819dcb" name="End" type="End"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><display x="15" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="7ce979fd-233b-4b3d-8763-883c1442f6c1" name="inputCollection" type="Collection"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><display x="-150" y="45" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="31ddd624-aeec-4dae-80aa-11590d641b2c" name="Input Variables" type="Block"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit onsuccess="true" /><display x="-225" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="9d3efa4a-1fa0-441e-8efd-334e2c404543" name="errorMessage" type="Data"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><display x="-150" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39313eda-3b72-4eac-9006-13cd17a22ce5" name="success" type="Data"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><display x="-150" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="fc117653-5cad-47a1-896f-525ae94b47af" name="Output Variables" type="Block"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><display x="-225" y="75" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="a46a6602-07e2-4dd6-9614-e292dc16cfc1" name="Sort Collection Columns" type="Code"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><narrative>It is possible to delete the columns which are not been sorting</narrative><display x="15" y="-90" w="120" h="30" /><inputs><input type="collection" name="InputCollection" expr="[inputCollection]" /><input type="text" name="inputOrder" expr="[inputOrder]" /><input type="flag" name="deleteColumns" expr="[delete]" /></inputs><outputs><output type="flag" name="Success" stage="success" /><output type="text" name="ErrorMessage" stage="errorMessage" /><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>c5e64fb8-2ef3-4ecb-83c3-439ca0819dcb</onsuccess><code><![CDATA[ErrorMessage = String.Empty;
Success = true;
DataTable dt1 = InputCollection;
string[] ColumnOrder;
List<string> ColumnToDelete = new List<string>();
Type tipo;
bool exist = false;
int j =0;

	

try
{	
	ColumnOrder = inputOrder.Split(',');
		
	if (deleteColumns == true)
	{
		foreach(DataColumn column in dt1.Columns)
		{		
			exist = false;
			foreach(var columnName in ColumnOrder)
			{
				if (column.ToString() == columnName)
				{
					exist = true;
				}
			}
			
			if (exist == false)
			{
				ColumnToDelete.Add(column.ToString());
			}
			
		}
		
	}
	
	
	foreach (var delete in ColumnToDelete)
	{
		dt1.Columns.Remove(delete);
	}
	
	
	
	int columnIndex = 0;
	foreach(var columnName in ColumnOrder)
	{
		dt1.Columns[columnName].SetOrdinal(columnIndex);
		columnIndex++;
	}
	
}
catch (Exception e)
{
	Success = false;
	ErrorMessage = e.Message;
}

outputCollection = dt1;



]]></code></stage><stage stageid="2521fca0-647c-4613-8efc-3672949f1815" name="outputCollection" type="Collection"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><display x="-150" y="165" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="086f017e-bb96-4116-a797-97b573b4f4e0" name="inputOrder" type="Data"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><display x="-150" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14abb174-3a1e-4fcd-80c6-289fde0388a7" name="Note3" type="Note"><subsheetid>5027a5af-6313-4b09-8abf-8447514b51ae</subsheetid><loginhibit /><narrative>The input collection (DT1) must have ONLY ONE (1) Column which is a collection (DT2).
This DT2 will be extracted and all the columns of the Input Collection (with the value of the Row) will be added to the DT2.
The Output is the DT2.</narrative><display x="-315" y="-15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="eeb68b8c-55cf-4be4-a0c1-b08acfca8679" name="Note4" type="Note"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><narrative>The number of items in each input variable MUST BE the same. And the relation of the input items MUST BE in the same order.</narrative><display x="-450" y="15" w="120" h="90" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="076351d3-9b82-499b-9b32-14335b1c4259" name="Note5" type="Note"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Example: Column1,Column2,Column3</narrative><display x="-315" y="-15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="a11407b0-c94e-4c53-800a-f2b96005deac" name="Note6" type="Note"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Example: Text1,2,5,True,False</narrative><display x="-315" y="15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="da79a59d-2ece-46f4-88f1-6db29bb8edba" name="Note7" type="Note"><subsheetid>fa7bac8c-d76c-4191-9186-7a9c073d44bd</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) and below are the options:
System.String
System.Decimal
System.Boolean
System.DateTime

Example: System.String,System.Decimal</narrative><display x="-315" y="45" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="146f936d-3da9-43d3-b39e-6f1994c25834" name="Note8" type="Note"><subsheetid>b378e075-a39d-43a5-afcf-be25311ec661</subsheetid><loginhibit /><narrative>TimeStan Variable</narrative><display x="-315" y="15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="2fcbb5ac-3cbf-47c3-9f6e-e25d90352ac3" name="Note7" type="Note"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items)  and the names of the Columns MUST BE the same of the input Collection

Example: Field1,Field2.Field3</narrative><display x="-300" y="-15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="e3d7dbdc-4420-4773-bf7b-04f5f2810e31" name="Convert Collection Column Type to Text" type="SubSheetInfo"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><display x="-240" y="-75" w="300" h="90" /></stage><stage stageid="23806599-ced8-4ef3-87ee-c184150bfa52" name="Start" type="Start"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit /><display x="0" y="-105" /><inputs><input type="text" name="columnName" stage="columnName" /><input type="collection" name="inputCollection" stage="inputCollection" /></inputs><onsuccess>db25952d-e3eb-47bc-b201-f98b94a35dc9</onsuccess></stage><stage stageid="a7f70df9-c81f-4212-9e46-495e2e9d3d0b" name="End" type="End"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit /><display x="0" y="-15" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="db25952d-e3eb-47bc-b201-f98b94a35dc9" name="Convert Column Data Type" type="Code"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit /><display x="0" y="-60" w="120" h="30" /><inputs><input type="collection" name="inputCollection" expr="[inputCollection]" /><input type="text" name="columnName" expr="[columnName]" /></inputs><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>a7f70df9-c81f-4212-9e46-495e2e9d3d0b</onsuccess><code><![CDATA[            outputCollection = new DataTable();

            foreach (DataColumn column in inputCollection.Columns)
            {
                if (column.ColumnName.Trim().ToUpper().Equals(columnName.Trim().ToUpper()))
                {
                    outputCollection.Columns.Add(column.ColumnName, typeof(string));
                }
                else 
                {
                    outputCollection.Columns.Add(column.ColumnName, column.DataType);
                }
            }
			
			foreach (DataRow row in inputCollection.Rows)
            {
                DataRow newRow = outputCollection.NewRow();
                foreach (DataColumn column in inputCollection.Columns)
                {
                    newRow[column.ColumnName] = row[column.ColumnName];
                }
                outputCollection.Rows.Add(newRow);
            }
               ]]></code></stage><stage stageid="4c4a70ba-6563-4de7-89e7-0e86b4d52a04" name="inputCollection" type="Collection"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit /><display x="-165" y="45" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="013c5a30-c2e6-4650-9e19-abc61897d7ea" name="Input Variables" type="Block"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-15" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="66771905-afd5-4f01-86f5-51a0948997c2" name="columnName" type="Data"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit /><display x="-165" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0bcdacb9-8a76-471d-b38a-8b9df4f77fef" name="Output Variables" type="Block"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit /><display x="-240" y="75" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="222ff2ea-de75-464d-96d0-9308709a498a" name="outputCollection" type="Collection"><subsheetid>6dcc58ce-9dfd-48ed-95b3-7ab406fbca5c</subsheetid><loginhibit /><display x="-165" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ce3fbca1-b5a6-4fcc-a1a9-5dfd73b7e571" name="Reset Collection" type="SubSheetInfo"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="4be290fa-8f40-4ca3-bb58-e76cfb771cf5" name="Start" type="Start"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /></inputs><onsuccess>4309dd9b-7327-471a-80ad-43b2293b2893</onsuccess></stage><stage stageid="8ea31e55-1003-4e9c-8134-c8ce4d76076d" name="End" type="End"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><loginhibit /><display x="0" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="bf278edc-d9f3-4719-8651-38c9c44d6c4a" name="inputCollection" type="Collection"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="830e008d-f6de-49ab-972f-53f4927ca993" name="Input Variables" type="Block"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="af6c502a-5f8b-4253-8839-744f5a6aec71" name="errorMessage" type="Data"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><display x="-165" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2a6b4ca-a493-4874-b52a-7cff561a743d" name="success" type="Data"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><loginhibit /><display x="-165" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="bca83fba-b4f6-4312-ae1a-c2d1e2de1503" name="Output Variables" type="Block"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><loginhibit /><display x="-240" y="15" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="4309dd9b-7327-471a-80ad-43b2293b2893" name="Clean Collection (Rows and Columns)" type="Code"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><inputs><input type="collection" name="InputCollection" expr="[inputCollection]" /></inputs><outputs><output type="flag" name="Success" stage="success" /><output type="text" name="ErrorMessage" stage="errorMessage" /><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>8ea31e55-1003-4e9c-8134-c8ce4d76076d</onsuccess><code><![CDATA[ErrorMessage = String.Empty;
Success = true;
DataTable dt1 = InputCollection;
var dt2 = new System.Data.DataTable();


try
{	
	
}
catch (Exception e)
{
	Success = false;
	ErrorMessage = e.Message;
}

outputCollection = dt2;


]]></code></stage><stage stageid="20c262af-054f-4efe-9ba0-a9f6293dc1f6" name="outputCollection" type="Collection"><subsheetid>9a27fe51-de91-4a07-8e5f-6975a11f1a40</subsheetid><display x="-165" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ee384104-6c93-4fcc-85c2-b095738d1193" name="delete" type="Data"><subsheetid>2ef0ace7-10c8-4c05-bbb3-74f42c05ebfd</subsheetid><loginhibit /><display x="-150" y="15" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="57ec11d8-8bea-4d49-b2f2-075b1254f2cc" name="Insert New Columns and Values to Collection_V2" type="SubSheetInfo"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="bcf015c3-7d00-4147-89aa-18bd9e0793e5" name="Start" type="Start"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /><input type="text" name="inputColumnName" stage="inputColumnName" /><input type="text" name="inputColumnValue" stage="inputColumnValue" /></inputs><onsuccess>4368a3eb-5538-4d93-8722-a9d6b9608e77</onsuccess></stage><stage stageid="e3b2138f-8a12-432a-97e1-9b90c9dc884c" name="End" type="End"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><display x="0" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="c420b9cc-a571-446c-81a6-5e5c93a0ce68" name="inputCollection" type="Collection"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><display x="-165" y="45" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ff681fa2-6b57-495d-b870-fce9b7c61664" name="Input Variables" type="Block"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="8ab1c31e-6beb-491d-a9ae-80eb4c2edfa4" name="errorMessage" type="Data"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><display x="-165" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5075d51a-1383-4c55-9d50-0b86962ceece" name="success" type="Data"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><display x="-165" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="f6f62699-3460-4fdf-9e71-c332e5bd1a9d" name="Output Variables" type="Block"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><display x="-240" y="75" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="4368a3eb-5538-4d93-8722-a9d6b9608e77" name="Insert New Columns and Values_v2" type="Code"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><inputs><input type="collection" name="InputCollection" expr="[inputCollection]" /><input type="text" name="inputColumnName" expr="[inputColumnName]" /><input type="text" name="inputColumnValue" expr="[inputColumnValue]" /></inputs><outputs><output type="flag" name="Success" stage="success" /><output type="text" name="ErrorMessage" stage="errorMessage" /><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>e3b2138f-8a12-432a-97e1-9b90c9dc884c</onsuccess><code><![CDATA[ErrorMessage = String.Empty;
Success = true;
DataTable dt1 = InputCollection;
List<string> ColumnName_list = new List<string>();
List<string> ColumnValue_list = new List<string>();
int ListNewColumns = 0;
int t = 0;
int j =0;
bool boolValue;
Int32 intValue;
Int64 bigintValue;
double doubleValue;
DateTime dateValue;


try
{	
	
    string[] namesArray = inputColumnName.Split(',');
	string[] valuesArray = inputColumnValue.Split(',');

	ColumnName_list.AddRange(namesArray);
	ColumnValue_list.AddRange(valuesArray);

	ListNewColumns = ColumnName_list.Count;
	
	
	if (ColumnName_list.Count != ColumnValue_list.Count)
	{
		throw new Exception("The lenght of the inputs are different");
	}
	
	
	t = 0;
	
	foreach (var value in ColumnValue_list)  
	{
		
		if (bool.TryParse(value, out boolValue))
		{
			dt1.Columns.Add(ColumnName_list[t], typeof(bool));
		}
        else if (DateTime.TryParse(value, out dateValue))
		{
			dt1.Columns.Add(ColumnName_list[t], typeof(DateTime));
		}
		else if (Int32.TryParse(value, out intValue))
		{
			dt1.Columns.Add(ColumnName_list[t], typeof(int));
		}
        else
		{
			dt1.Columns.Add(ColumnName_list[t], typeof(string));
		}
		
		t++;
	}
	
			
	for (int i = 0; i < ListNewColumns; i++) 
	{
			foreach (DataRow rowsDt1 in dt1.Rows) 
			{	
				
				dt1.Rows[j][ColumnName_list[i]] = ColumnValue_list[i];
				j++;
			}
		j=0;
	}

}
catch (Exception e)
{
	Success = false;
	ErrorMessage = e.Message;
}

outputCollection = dt1;


]]></code></stage><stage stageid="cb2dbd40-d4e0-4265-b851-195cdfc7c117" name="outputCollection" type="Collection"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><display x="-165" y="165" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa69d34a-1c49-4e8a-940c-23ebd25bbff4" name="inputColumnName" type="Data"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Exemple: Column1,Column2,Column3</narrative><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7f08be7c-78bc-49b7-ab30-c0ea1bef06a0" name="inputColumnValue" type="Data"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Exemple: Text1,2,5,True,False,</narrative><display x="-165" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e978ccdd-97c1-470f-a265-23357ab35742" name="Note4" type="Note"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><narrative>The number of items in each input variable MUST BE the same. And the relation of the input items MUST BE in the same order.


</narrative><display x="-450" y="0" w="120" h="60" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="afee0419-93b0-4906-bbf4-d6910fe49a6f" name="Note5" type="Note"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Example: Column1,Column2,Column3</narrative><display x="-315" y="-15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="8fd5ae94-82df-4e09-a0f3-74ce6a035b06" name="Note6" type="Note"><subsheetid>786de76f-2d79-45cc-a030-6983e8645479</subsheetid><loginhibit /><narrative>Separe the items using Commas (without space between the items) 


Example: Text1,2,5,True,False</narrative><display x="-315" y="15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="2f4fcb6d-7aa3-496f-8dd7-7bf450cf0248" name="Left Minus Join" type="SubSheetInfo"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="0211f8a9-f09b-4282-9019-625c504f5a3e" name="Start" type="Start"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollectionMain" /><input type="text" name="inputColumnName" stage="inputColumnName" /><input type="collection" name="inputCollection2" stage="inputCollection2" /></inputs><onsuccess>69577e32-7c22-44bb-8f66-195095f65ff2</onsuccess></stage><stage stageid="05fcf083-222c-4b41-a7b3-31ffeae5d7bd" name="End" type="End"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="0" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /><output type="text" name="Error Message" stage="errorMessage" /><output type="flag" name="Success" stage="success" /></outputs></stage><stage stageid="bc558f9f-0c20-4b77-b194-cefb2b9a82d3" name="inputCollectionMain" type="Collection"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="-165" y="15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="965095d0-6e41-4260-87b5-e095fbcb0756" name="Input Variables" type="Block"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="bc845d86-e92a-4b11-8d00-e464ac3bd543" name="errorMessage" type="Data"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><display x="-165" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d824564-085a-41c8-9c5a-351652de2446" name="success" type="Data"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="-165" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="3da81118-6267-47db-9d68-5d69e7ab4a30" name="Output Variables" type="Block"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="-240" y="75" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="69577e32-7c22-44bb-8f66-195095f65ff2" name="Delete Rows" type="Code"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><inputs><input type="collection" name="InputCollectionMain" expr="[inputCollectionMain]" /><input type="text" name="InputColumnName" expr="[inputColumnName]" /><input type="collection" name="InputSecondCollection" expr="[inputCollection2]" /></inputs><outputs><output type="flag" name="Success" stage="success" /><output type="text" name="ErrorMessage" stage="errorMessage" /><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>05fcf083-222c-4b41-a7b3-31ffeae5d7bd</onsuccess><code><![CDATA[ErrorMessage = String.Empty;
Success = true;
DataTable dt1 = InputCollectionMain;
DataTable dt2 = InputSecondCollection;
int i = 0;
int j = 0;
string ColumnNameDT1 = InputColumnName;
string ColumnNameDT2 = "";
List<DataRow> ColumnsToDelete = new List<DataRow>();

	
	foreach(DataColumn column in dt2.Columns)
    {
            ColumnNameDT2 = column.ColumnName;
    }
	
	foreach(DataRow row1 in dt1.Rows)
    {		
            foreach(DataRow row2 in dt2.Rows)
			{
				if (dt1.Rows[i][ColumnNameDT1].Equals(dt2.Rows[j][ColumnNameDT2]))
				{	
						ColumnsToDelete.Add(row1);
				}
				j++;
			}	
		i++;
		j=0;
     }
	
	 foreach(var dr in ColumnsToDelete) 
	{     
		dt1.Rows.Remove(dr); 
	} 
	 
outputCollection = dt1;
]]></code></stage><stage stageid="909a89e4-c8b6-47d0-8941-786db2b82481" name="outputCollection" type="Collection"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><display x="-165" y="165" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a30b358a-0ac9-43e3-a884-b10dc88e43eb" name="inputColumnName" type="Data"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f3b9c59-d0d8-4788-aeab-c7d8830b4a02" name="inputCollection2" type="Collection"><subsheetid>867bb26b-30f9-4e26-8c64-5a08b503cbfc</subsheetid><loginhibit /><display x="-165" y="45" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5618f230-3be4-4a04-a82f-889a06607b05" name="Get Distinct Column Values" type="SubSheetInfo"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><display x="-240" y="-105" w="300" h="90" /></stage><stage stageid="3676e47b-aed1-4c3f-beea-5a06ec0e9e6b" name="Start" type="Start"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /><input type="text" name="fieldToFilter" stage="fieldToFilter" /></inputs><onsuccess>7ff4cc71-329a-4bed-b629-e7b31e1e2009</onsuccess></stage><stage stageid="efae5478-e95b-4666-ac2c-95aca0344122" name="End" type="End"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit /><display x="0" y="-45" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="7ff4cc71-329a-4bed-b629-e7b31e1e2009" name="Get Distinct Values" type="Code"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><inputs><input type="collection" name="inputCollection" expr="[inputCollection]" /><input type="text" name="fieldToFilter" expr="[fieldToFilter]" /></inputs><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>efae5478-e95b-4666-ac2c-95aca0344122</onsuccess><code><![CDATA[DataView dv = inputCollection.DefaultView;
outputCollection = dv.ToTable(true, fieldToFilter);]]></code></stage><stage stageid="0f717bcf-a221-402d-ad51-f832112644aa" name="inputCollection" type="Collection"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit /><display x="-165" y="15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5939c729-006b-4caf-99f7-d674fc0df7ba" name="Input Variables" type="Block"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-45" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="3e5f81a7-b1ca-4f5b-b2bc-69895e95bc73" name="Output Variables" type="Block"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit /><display x="-240" y="45" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="abb4a75e-6988-45bb-a6ff-c9709ea114d2" name="outputCollection" type="Collection"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit /><display x="-165" y="75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6e85ced5-51d5-49dd-9d7b-0c484155b4fd" name="fieldToFilter" type="Data"><subsheetid>8f99ec62-b233-42b9-8004-0041a903c779</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34770a49-1776-4218-8739-32d27c99b60f" name="Get Distinct Collection Rows" type="SubSheetInfo"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><display x="-240" y="-90" w="300" h="90" /></stage><stage stageid="1502f2e0-fb6b-45f8-89db-c3707f664828" name="Start" type="Start"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><loginhibit /><display x="0" y="-120" /><inputs><input type="collection" name="inputCollection" stage="inputCollection" /></inputs><onsuccess>aafa3940-9289-4465-89df-1d83a16d0d00</onsuccess></stage><stage stageid="80a843c3-f048-4176-97de-8bce94680239" name="End" type="End"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><loginhibit /><display x="0" y="-30" /><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs></stage><stage stageid="aafa3940-9289-4465-89df-1d83a16d0d00" name="Get Distinct Collection Rows" type="Code"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><inputs><input type="collection" name="inputCollection" expr="[inputCollection]" /></inputs><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>80a843c3-f048-4176-97de-8bce94680239</onsuccess><code><![CDATA[outputCollection = inputCollection.DefaultView.ToTable(true);]]></code></stage><stage stageid="81806972-7b1a-4008-87b6-747db65ded0f" name="inputCollection" type="Collection"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><loginhibit /><display x="-165" y="0" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f7abcc9c-a89b-4067-85ba-16f0450dd3ca" name="Input Variables" type="Block"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><loginhibit onsuccess="true" /><display x="-240" y="-30" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="c4ee33ac-02ab-45f3-b0ed-a27c4adea258" name="Output Variables" type="Block"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><loginhibit /><display x="-240" y="30" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="0d5fdab9-cea6-46ee-a4ef-82e97f5d92f4" name="outputCollection" type="Collection"><subsheetid>cae4629b-eea3-44e0-8746-7bd278d527a8</subsheetid><loginhibit /><display x="-165" y="60" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cce85029-f711-4af7-8c4c-d504d70c7517" name="Re-Throw" type="Exception"><subsheetid>aab27435-aa34-42e3-a346-09d1567c3e19</subsheetid><display x="480" y="30" w="90" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="0109a9df-acf6-4e49-947f-d8e70756ed03" name="timeSizeXXS" type="Data"><loginhibit onsuccess="true" /><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>0.5</initialvalue><alwaysinit /></stage><stage stageid="799b5d60-5ad3-481b-a9f6-f8f74aed853f" name="timeSizeS" type="Data"><loginhibit onsuccess="true" /><display x="-195" y="45" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><alwaysinit /></stage><stage stageid="336a370b-9a6a-4264-936b-7086155a0a08" name="timeSizeM" type="Data"><loginhibit onsuccess="true" /><display x="-195" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue>10</initialvalue><alwaysinit /></stage><stage stageid="b0b61041-fb34-4e78-82f9-d12097d9ccbf" name="timeSizeL" type="Data"><loginhibit onsuccess="true" /><display x="-195" y="105" w="150" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><alwaysinit /></stage><stage stageid="c3474d12-f525-41b0-85ad-73564eb786ab" name="timeSizeXL" type="Data"><loginhibit onsuccess="true" /><display x="-195" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue>60</initialvalue><alwaysinit /></stage><stage stageid="ff8cbf38-9fa8-4d73-b27a-26a393d92b5a" name="Global Timeouts" type="Block"><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="225" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /></stage><stage stageid="b994994d-57cd-462b-8e43-15f95054fd65" name="timeSizeXS" type="Data"><loginhibit onsuccess="true" /><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><alwaysinit /></stage><stage stageid="f86ad9fd-8cd4-4446-8ad4-7e1845fca906" name="timeSizeXXL" type="Data"><loginhibit onsuccess="true" /><display x="-195" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue>300</initialvalue><alwaysinit /></stage><stage stageid="67b54165-e35c-4edc-9f56-e175a95cf7f9" name="Left Join (Collections Rows)" type="SubSheetInfo"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><display x="-240" y="-105" w="240" h="90" /></stage><stage stageid="a25cc0dd-c087-48e7-a865-27f446730a44" name="Start" type="Start"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="collection" name="Left Collection" stage="Left Collection" /><input type="collection" name="Right Collection" stage="Right Collection" /><input type="text" name="Key Field" stage="Key Field" /></inputs><onsuccess>b4397edd-e83d-43f3-aa91-4789a6e02033</onsuccess></stage><stage stageid="c8c1ef10-19be-4560-8766-5f930777752b" name="End" type="End"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit /><display x="-30" y="-45" /><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs></stage><stage stageid="b4397edd-e83d-43f3-aa91-4789a6e02033" name="Left Join Collections" type="Code"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="collection" name="Left Collection" expr="[Left Collection]" /><input type="collection" name="Right Collection" expr="[Right Collection]" /><input type="text" name="Key Field" expr="[Key Field]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>c8c1ef10-19be-4560-8766-5f930777752b</onsuccess><code><![CDATA[// Build the Collection_Out columns and validate Key_Field is in both collections.
if(!Left_Collection.Columns.Contains(Key_Field))
	throw new Exception("Left Collection does not contain key field '" + Key_Field + "'.");
else if(!Right_Collection.Columns.Contains(Key_Field))
	throw new Exception("Right Collection does not contain key field '" + Key_Field + "'.");

DataTable temp = new DataTable();

foreach(DataColumn Column in Left_Collection.Columns)
{
	temp.Columns.Add(Column.ColumnName, Column.DataType);
}

foreach(DataColumn Column in Right_Collection.Columns)
{
	if(Column.ColumnName == Key_Field)
	{
		// Do Nothing
	}
	else if(temp.Columns.Contains(Column.ColumnName))
	{
		throw new Exception("Collections contain non-key duplicate field ('" + Column.ColumnName + "').");
	}
	else
		temp.Columns.Add(Column.ColumnName, Column.DataType);
}

// Cycle through the left collection and add any associated information from the right collection.
foreach(DataRow OuterRow in Left_Collection.Rows)
{
	DataRow[] MatchingRows = Right_Collection.Select("[" + Key_Field + "] = '" + OuterRow[Key_Field] + "'");
	if(MatchingRows.Length > 0)
	{
		foreach(DataRow Match in MatchingRows)
		{
			DataRow New_Row = temp.NewRow();
			foreach(DataColumn dColumn in Left_Collection.Columns)
			{
				New_Row[dColumn.ColumnName] = OuterRow[dColumn.ColumnName];
			}
			foreach(DataColumn dColumn in Right_Collection.Columns)
			{
				New_Row[dColumn.ColumnName] = Match[dColumn.ColumnName];
			}
			temp.Rows.Add(New_Row);
		}
	}
	else
	{
		// No matching rows, but since it's an outer join, append the left row.
		DataRow New_Row = temp.NewRow();
		foreach(DataColumn dColumn in Left_Collection.Columns)
		{
			New_Row[dColumn.ColumnName] = OuterRow[dColumn.ColumnName];
		}
		temp.Rows.Add(New_Row);
	}
}
Collection_Out = temp;]]></code></stage><stage stageid="9a6df940-b957-401e-a043-242690874281" name="Collection Out" type="Collection"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="704113d8-61ea-43ae-99ce-334f1bab910b" name="Left Collection" type="Collection"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c7d2be1e-6b8a-4205-9b94-a1d967249720" name="Right Collection" type="Collection"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="48580930-8a85-4010-bc61-d4c449ab7783" name="Key Field" type="Data"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit /><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad0a1d3c-30d7-4641-90c2-c2746d90c5fe" name="Input Variables" type="Block"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="e7861886-8772-4548-b7df-9698d1b297bd" name="Output Variables" type="Block"><subsheetid>48032f0e-0ac7-4b82-ab51-cb1593f05b1c</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="610e3863-f0d0-46d1-8d48-771124cdc53b" name="Extract Regex From String" type="SubSheetInfo"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e19d60dc-8595-497e-9912-340f5ad6a5a6" name="Start" type="Start"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="text" name="Regex Pattern" stage="regexPattern" /><input type="text" name="Target String" stage="targetString" /></inputs><onsuccess>a417aa7a-a7a4-4478-85ee-65aed765e3a3</onsuccess></stage><stage stageid="1f6390a8-e951-419c-a5b1-ca5c0a8eab42" name="End" type="End"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><loginhibit /><display x="-30" y="-45" /><outputs><output type="collection" name="extractedValues" stage="extractedValues" /></outputs></stage><stage stageid="a417aa7a-a7a4-4478-85ee-65aed765e3a3" name="Extract Value" type="Code"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="text" name="regexPattern" expr="[regexPattern]" /><input type="text" name="targetString" expr="[targetString]" /></inputs><outputs><output type="collection" name="extractedValues" stage="extractedValues" /></outputs><onsuccess>1f6390a8-e951-419c-a5b1-ca5c0a8eab42</onsuccess><code><![CDATA[String regexPat = regexPattern;
String targetStr = targetString;
Regex rg = new Regex(regexPat);

var table = new DataTable();
table.Columns.Add("Values");

var regexMatches = rg.Matches(targetStr);

	foreach(Match row in regexMatches){
		DataRow dr = table.NewRow();
		dr["Values"] = row;
		table.Rows.Add(dr);
		}

extractedValues = table;]]></code></stage><stage stageid="1238c179-729f-48ea-977b-a9ff7b40f27e" name="regexPattern" type="Data"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d9b0a01-ec89-4d7c-a00f-975411619259" name="targetString" type="Data"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="508ca146-b0ff-4037-8bb8-609d1e0c4e5d" name="extractedValues" type="Collection"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Values" type="text" /></collectioninfo><initialvalue><row><field name="Values" type="text" value="" /></row></initialvalue></stage><stage stageid="11f6023f-fbd0-4ed8-a7de-005b70890f2c" name="Input Variables" type="Block"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="79f4d59f-d9dd-4a62-83a6-c658254ce2db" name="Output Variables" type="Block"><subsheetid>d033d770-4bcd-4a31-8947-3fe3c157a818</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="6ecbc84b-28bf-4106-9b74-d6a553d72fc2" name="Get Distinct values from collection" type="SubSheetInfo"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><narrative>Used to return only distinct (different) values.
Eliminates duplicate records from the results.
Operates on a single column. DISTINCT for multiple columns is not supported.</narrative><display x="-195" y="-210" w="300" h="90" /></stage><stage stageid="80785d7e-7c78-4578-95ac-bc4c0a9a8a22" name="Start" type="Start"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><display x="45" y="-225" /><inputs><input type="collection" name="Collection" narrative="Any data set." stage="Collection" /><input type="text" name="Key Column" narrative="Column that you wish to retrieve." stage="Key Column" /></inputs><onsuccess>a07548df-3ae5-46a1-8f02-0ffde0dddd9e</onsuccess></stage><stage stageid="6fbf490e-7cce-4cb0-92ef-9ca9c5e83b0a" name="End" type="End"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><display x="45" y="-105" /><outputs><output type="number" name="Count Distinct" narrative="Unique Key Column values." stage="Count Distinct" /><output type="collection" name="Distinct" narrative="Number of distinct values." stage="Distinct" /></outputs></stage><stage stageid="67f86dfb-3b50-40d7-8d14-ae971af5959f" name="Collection" type="Collection"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><narrative>Any data set.</narrative><display x="-120" y="-75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a07548df-3ae5-46a1-8f02-0ffde0dddd9e" name="Distinct" type="Code"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><display x="45" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection]" /><input type="text" name="Key Column" expr="[Key Column]" /></inputs><outputs><output type="collection" name="Distinct" stage="Distinct" /><output type="number" name="Count Distinct" stage="Count Distinct" /></outputs><onsuccess>6fbf490e-7cce-4cb0-92ef-9ca9c5e83b0a</onsuccess><code><![CDATA[// Validate Key_Column is in collection.
if(!Collection.Columns.Contains(Key_Column))
	throw new Exception("Collection does not contain key column '" + Key_Column + "'.");

	
DataView view = new DataView(Collection);
DataTable UniqueValues = view.ToTable(true,Key_Column);

DataTable dt = new DataTable();
dt.Columns.Add(Key_Column, typeof(string));
dt.Columns.Add("Count", typeof(int));

int count;
Count_Distinct = 0;



// Cycle through the collection and add the value.
foreach(DataRow UniqueRow in UniqueValues.Rows)
{

	count = 0;
	

	
	foreach(DataRow Row in Collection.Rows)
	{
	
		if(String.Equals(Row[Key_Column].ToString(), UniqueRow[Key_Column].ToString()))
		{
			count += 1;
		}
		
	}
	
	Count_Distinct += 1;
	
	// Add item.
	DataRow FinalRow = dt.NewRow();
	FinalRow.ItemArray = new object[] { UniqueRow[Key_Column].ToString(), count};
	dt.Rows.Add(FinalRow);	
}


Distinct = dt;]]></code></stage><stage stageid="d4dbc46a-06c3-42d6-8281-f81c5e0aaee5" name="Key Column" type="Data"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><narrative>Column that you wish to retrieve.</narrative><display x="-120" y="-105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="157c0c66-7afe-4942-9d46-adf749836b4f" name="Distinct" type="Collection"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><narrative>Unique Key Column values.</narrative><display x="-120" y="30" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4ff0c895-fdf5-4256-8b6b-918f08dcdd24" name="Count Distinct" type="Data"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><narrative>Number of distinct values.</narrative><display x="-120" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5854c0e8-a660-4876-ab44-2296b58539bb" name="Note3" type="Note"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><narrative>INPUTS
------------

Collection:
Any data set.

Key Column:
Column that you wish to retrieve.</narrative><display x="-270" y="-105" w="150" h="90" /></stage><stage stageid="33ff4a72-63c3-4f54-b090-79bbc5d3541a" name="Note3" type="Note"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><narrative>OUTPUTS
------------

Distinct:
Unique Key Column values.

Count Distinct:
Number of distinct values.</narrative><display x="-270" y="0" w="150" h="90" /></stage><stage stageid="9e71343e-4388-44be-931e-c0c3323b77ef" name="Input Variables" type="Block"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="-150" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="ad8f5cac-8450-4fa6-a7f0-6598a2a0fb36" name="Output Variables" type="Block"><subsheetid>be6334de-f512-422f-ab0a-29421eca47f2</subsheetid><loginhibit /><display x="-195" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="16854b7d-5b72-4abb-9313-d02a466479fb" name="CSVs with custom delimiters" type="SubSheetInfo"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><display x="-270" y="-105" w="300" h="90" /></stage><stage stageid="44c80e0b-3403-4f98-8404-968743a89aff" name="Start" type="Start"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="text" name="Delimiter" stage="Delimiter" /><input type="text" name="Target" stage="Target" /><input type="flag" name="headers" stage="headers" /></inputs><onsuccess>7d6d75c0-a490-4f3d-8383-5f0dd23e08a2</onsuccess></stage><stage stageid="6baa778a-6d81-4c23-9866-a65f7561dd62" name="End" type="End"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit /><display x="-30" y="-45" /><outputs><output type="collection" name="csvCollection" stage="Collection" /></outputs></stage><stage stageid="7d6d75c0-a490-4f3d-8383-5f0dd23e08a2" name="CSVs with custom delimiters" type="Code"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit /><narrative>row = temp;</narrative><display x="-30" y="-90" w="120" h="30" /><inputs><input type="text" name="Target" expr="[Target]" /><input type="text" name="Delimiter" expr="[Delimiter]" /><input type="flag" name="headers" expr="[headers]" /></inputs><outputs><output type="collection" name="Collection" stage="Collection" /></outputs><onsuccess>6baa778a-6d81-4c23-9866-a65f7561dd62</onsuccess><code><![CDATA[var file = Target;
var parser = new TextFieldParser(file);
var dt = new DataTable();
parser.SetDelimiters(Delimiter);
string temp = "";
int count=0;
while(!parser.EndOfData)
{
   if(count==0)
   {
	   string[] columns = parser.ReadFields();
	   if(headers)
	   {
		  foreach(string title in columns)
		  {
			string colName = title;
			int num=0;
			while(dt.Columns.Contains(colName))
			{
				colName = string.Format("{0}_{1}",title,++num);
			}
			dt.Columns.Add(colName, typeof(String));
			temp+=title;
		  }
	   }
	   else
	   {
		   int fields = columns.Length;
		   int colCount=1;
		   while(colCount<=fields)
		   {
			   string colName="F"+colCount.ToString();
			   dt.Columns.Add(colName, typeof(String));
			   colCount++;
		   }				   
		   var dataTableRow = dt.NewRow();
		   dt.Rows.Add(columns);
	   }
   }  
   else 
   {
		var dataTableRow = dt.NewRow();
		dataTableRow.ItemArray = parser.ReadFields();
		dt.Rows.Add(dataTableRow);
	   //csvData.Rows.Add(fieldData);
   }  
   count++;
}
Collection = dt;
]]></code></stage><stage stageid="60bf26d6-6867-4c85-b458-643e4704f513" name="Delimiter" type="Data"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd230af6-eb4a-4e7b-a537-228e356b7684" name="Target" type="Data"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1be08a8e-7952-4ed2-ba85-2ae5e41ab660" name="headers" type="Data"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="5481bd91-03f7-4bd5-a79f-3555c37f3578" name="Collection" type="Collection"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a1c5cb5d-8705-4a93-86f2-32e19dd9787f" name="Input Variables" type="Block"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="f85ea118-6a20-46a4-883d-ba517d00fad1" name="Output Variables" type="Block"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="2554d5bf-e58b-4230-84b5-ab708cc889b1" name="Note3" type="Note"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit /><narrative>File path</narrative><display x="-345" y="-15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="e053821b-6e75-47a5-bad6-cb31e7706962" name="Note3" type="Note"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit /><narrative>Headers
If hearders need to be used set True otherwise set False</narrative><display x="-345" y="15" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="93c627d0-54f3-433c-b899-89ebff4b4419" name="Note3" type="Note"><subsheetid>457255ac-3b8a-4666-84de-295499f9ee68</subsheetid><loginhibit /><narrative>Delimiter used in CSV</narrative><display x="-345" y="45" w="150" h="30" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage></process></object>
        <object id="248a1e36-2b57-4752-b9c9-2d742b63c586" name="EY_Codes_VB" xmlns="http://www.blueprism.co.uk/product/process"><process name="EY_Codes_VB" version="1.0" bpversion="7.1.1.65484" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>cdbcb89c-31ea-4efa-8998-df1060cf7e36</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="a2a856ee-acb4-4058-88d0-8970e970b96e" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e57821a3-7558-4e35-bbcd-6761b2252b07" type="Normal" published="True"><name>Remove duplicates from collection based on specific column</name><view><camerax>-144</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3eaa3c1-33cd-485a-bd18-6fdd2e796e67" type="Normal" published="True"><name>Remove duplicate values in a collection</name><view><camerax>-90</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0558c638-dbc4-4926-8c93-43f38d3e09fa" type="Normal" published="True"><name>Replace Blanks With "'-"</name><view><camerax>-195</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="84cd5376-2fca-4c6b-b94a-4ded352d57be" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>c51ce982-f46c-4d96-af59-ed88a97cda27</onsuccess></stage><stage stageid="c51ce982-f46c-4d96-af59-ed88a97cda27" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="cd71b2ef-6970-49c1-978b-ef365de3a4fd" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>Microsoft.VisualBasic</import><import>System.Collections</import><import>System.Reflection</import><import>System.Collections.Generic</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="fb8becfa-98af-4aeb-96bc-2c2c179efc28" name="Clean Up" type="SubSheetInfo"><subsheetid>a2a856ee-acb4-4058-88d0-8970e970b96e</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="cd39128c-34eb-41a1-9d48-0d1806745650" name="Start" type="Start"><subsheetid>a2a856ee-acb4-4058-88d0-8970e970b96e</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>33bc2919-dc7a-4aae-96de-58d8a18c4a88</onsuccess></stage><stage stageid="33bc2919-dc7a-4aae-96de-58d8a18c4a88" name="End" type="End"><subsheetid>a2a856ee-acb4-4058-88d0-8970e970b96e</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="68321509-29ca-4fc1-8c2f-561a1e104ccd" name="" type="Note"><subsheetid>a2a856ee-acb4-4058-88d0-8970e970b96e</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="cb460910-9a3f-47a4-a792-a9043b2ccead" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="789280e4-78f1-498a-83af-c15e4255472f" name="Remove duplicate values in a collection" type="SubSheetInfo"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><display x="-270" y="-105" w="300" h="90" /></stage><stage stageid="e05b61de-9ddb-46f2-bdef-ef9586aa8f51" name="Start" type="Start"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="collection" name="Input Collection" stage="Input Collection" /></inputs><onsuccess>2e0b1fed-e03d-43e0-8576-fd2c2497fec4</onsuccess></stage><stage stageid="af2bc212-34c6-459d-898d-be9d3f22787e" name="End" type="End"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><loginhibit /><display x="-30" y="-15" /><outputs><output type="collection" name="Out_Col" stage="Out_Col" /></outputs></stage><stage stageid="2e0b1fed-e03d-43e0-8576-fd2c2497fec4" name="Remove Duplicate Values in a collection" type="Code"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><inputs><input type="collection" name="Input_Col" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Out_Col" stage="Out_Col" /></outputs><onsuccess>af2bc212-34c6-459d-898d-be9d3f22787e</onsuccess><code><![CDATA[Dim pNewDataTable As DataTable
Dim pCurrentRowCopy As DataRow
Dim pColumnList As New List(Of String)
Dim pColumn As DataColumn


For Each pColumn In Input_Col.Columns
	pColumnList.Add(pColumn.ColumnName)
Next

pNewDataTable = Input_Col.DefaultView.ToTable(True, pColumnList.ToArray)

Out_Col = Input_Col.Clone

For Each pCurrentRowCopy In pNewDataTable.Rows
Out_Col.ImportRow(pCurrentRowCopy)
next ]]></code></stage><stage stageid="82b1dff7-97d6-4feb-9a7a-b855549dc2b7" name="Out_Col" type="Collection"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="834d4343-fcc1-4a0c-995e-ff53299b8261" name="Input Collection" type="Collection"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7caec17f-58f4-4a7c-bee8-e6b03134aa0b" name="Input Variables" type="Block"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="c9e25646-2229-400f-95c1-4dbf64cdc668" name="Output Variables" type="Block"><subsheetid>b3eaa3c1-33cd-485a-bd18-6fdd2e796e67</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="3ea11de5-70a0-4805-98af-2e36cd63f14d" name="Replace Blanks With &quot;'-&quot;" type="SubSheetInfo"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><narrative>Fills a collection that has empty values with empty text.</narrative><display x="-270" y="-105" w="300" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46c2ddb1-aa44-4a2e-89b7-8526acda24cc" name="Start" type="Start"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have its empty values filled with empty text." /></postconditions><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="inputCollection" narrative="A collection with blank text fields" stage="inputCollection" /></inputs><onsuccess>435c66f0-7c86-442c-b1d6-1ce79c2564f8</onsuccess></stage><stage stageid="51ee2fe8-1faa-4a91-884b-436a94038793" name="End" type="End"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><loginhibit /><display x="-30" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="outputCollection" narrative="The collection with empty string instead of blanks" stage="outputCollection" /></outputs></stage><stage stageid="da4eaf4f-4c3a-4028-90af-859cb0f6865b" name="inputCollection" type="Collection"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5907031a-5108-41bc-8c9c-eefecb3f1211" name="outputCollection" type="Collection"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="435c66f0-7c86-442c-b1d6-1ce79c2564f8" name="Fill Blanks" type="Code"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="inputCollection" expr="[inputCollection]" /></inputs><outputs><output type="collection" name="outputCollection" stage="outputCollection" /></outputs><onsuccess>51ee2fe8-1faa-4a91-884b-436a94038793</onsuccess><code><![CDATA[try
  for each dr as datarow in inputCollection.rows
    for each c as datacolumn in inputCollection.columns
      if (dr(c.columnname).equals("")) then
        dr(c.columnname) = "'-"
      end if
    next
  next
  outputCollection = inputCollection
catch e as exception

end try]]></code></stage><stage stageid="75070a68-7cea-41c0-a3ab-f1ca69c4fc30" name="Input Variables" type="Block"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="434e24f2-36b1-4a3d-aaaa-cb244cb63b51" name="Output Variables" type="Block"><subsheetid>0558c638-dbc4-4926-8c93-43f38d3e09fa</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="1ef531a8-c33d-48af-b9ce-ba465d06b4f4" name="Remove duplicates from collection based on specific column" type="SubSheetInfo"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><display x="-270" y="-105" w="300" h="90" /></stage><stage stageid="a3af8076-066b-4ac7-ba8e-220747a10fa2" name="Start" type="Start"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="text" name="collName" stage="collName" /><input type="collection" name="coll" stage="coll" /></inputs><onsuccess>db7aeb19-2880-4e53-a519-19b2a506fb4c</onsuccess></stage><stage stageid="92e20763-a785-4732-8db6-a443591e6270" name="End" type="End"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><loginhibit /><display x="-30" y="-45" /><outputs><output type="collection" name="outputCollection" stage="groups" /></outputs></stage><stage stageid="db7aeb19-2880-4e53-a519-19b2a506fb4c" name="Remove duplicates from collection based on specific column" type="Code"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="collection" name="coll" expr="[coll]" /><input type="text" name="collName" expr="[collName]" /></inputs><outputs><output type="collection" name="groups" stage="groups" /></outputs><onsuccess>92e20763-a785-4732-8db6-a443591e6270</onsuccess><code><![CDATA[Dim hTable As New Hashtable()
Dim duplicateList As New ArrayList()


'Add list of all the unique item value to hashtable, which stores combination of key, value pair.
'And add duplicate item value in arraylist.

For Each drow_1 As DataRow In coll.Rows

If hTable.Contains(drow_1(collName)) Then

duplicateList.Add(drow_1)

Else

hTable.Add(drow_1(collName), String.Empty)

End If

Next


'Removing a list of duplicate items from datatable.

For Each dRow_2 As DataRow In duplicateList

coll.Rows.Remove(dRow_2)

Next



groups = coll]]></code></stage><stage stageid="650091cb-925d-4685-b740-bbfadfdf6b92" name="groups" type="Collection"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="293ddf48-8616-4b79-bacd-cdc423b2d338" name="collName" type="Data"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><loginhibit /><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="715350b6-3cbe-45cc-9ce6-12d10a9943f2" name="coll" type="Collection"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3e8bbc79-d154-4b82-aec1-ab08e1b4e03f" name="Input Variables" type="Block"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="f77517f1-9001-489e-8e7e-4f9c46168f91" name="Output Variables" type="Block"><subsheetid>e57821a3-7558-4e35-bbcd-6761b2252b07</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage></process></object>
        <object id="844ee3cd-2a5c-4056-97b1-a9451b3d7ba2" name="EY_FilterCollectionAsSQL" xmlns="http://www.blueprism.co.uk/product/process"><process name="EY_FilterCollectionAsSQL" version="1.0" bpversion="7.1.1.65484" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>192a4c6f-edcf-4496-8a24-994731810c24</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="bda38976-a4f1-4131-bb5b-746895ec5ec5" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31053543-b50e-4239-a58f-2bc56a38aeba" type="Normal" published="True"><name>Code: Filter Collection</name><view><camerax>80</camerax><cameray>330</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="1341f6d2-e02f-401c-ba63-354a7b795adc" name="Start" type="Start"><loginhibit onsuccess="true" /><display x="15" y="-60" /><onsuccess>5f43b2f2-971a-496b-884b-b553b51b4ea7</onsuccess></stage><stage stageid="5f43b2f2-971a-496b-884b-b553b51b4ea7" name="End" type="End"><loginhibit onsuccess="true" /><display x="15" y="0" /></stage><stage stageid="32a69800-83f2-4ade-b79f-f9d05e40956e" name="Stage1" type="ProcessInfo"><loginhibit onsuccess="true" /><display x="-180" y="-15" w="270" h="120" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="849584d3-3bad-4cce-9078-a63d8b13dc1b" name="Clean Up" type="SubSheetInfo"><subsheetid>bda38976-a4f1-4131-bb5b-746895ec5ec5</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="90" w="270" h="120" /></stage><stage stageid="16716a6b-4ca3-440b-8b04-b034f59fa1f5" name="Start" type="Start"><subsheetid>bda38976-a4f1-4131-bb5b-746895ec5ec5</subsheetid><loginhibit onsuccess="true" /><display x="15" y="45" /><onsuccess>1c7d1a7f-1d9c-4490-82cd-9956f7b574f7</onsuccess></stage><stage stageid="1c7d1a7f-1d9c-4490-82cd-9956f7b574f7" name="End" type="End"><subsheetid>bda38976-a4f1-4131-bb5b-746895ec5ec5</subsheetid><loginhibit onsuccess="true" /><display x="15" y="105" /></stage><stage stageid="b7bf60b9-0f43-4ba2-9fc3-48ac6775b256" name="Note1" type="Note"><subsheetid>bda38976-a4f1-4131-bb5b-746895ec5ec5</subsheetid><loginhibit onsuccess="true" /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="165" y="135" w="180" h="210" /></stage><stage stageid="114a5d20-a45a-4132-b687-5aeed5491643" name="Note2" type="Note"><loginhibit onsuccess="true" /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="165" y="30" w="180" h="210" /></stage><stage stageid="39032e6d-e703-40ff-9115-7f4c47b80395" name="Code: Filter Collection" type="SubSheetInfo"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="120" w="300" h="90" /></stage><stage stageid="331074b0-9ec0-4a3a-bcfd-7d04ab9b2cfe" name="Start" type="Start"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="45" y="90" /><inputs><input type="collection" name="Input Collection" stage="collectionInput" /><input type="text" name="Filter" stage="filter" /></inputs><onsuccess>4decd873-2583-4feb-a06c-7f30a42e3cc1</onsuccess></stage><stage stageid="c296ea29-71e1-48ea-9de8-2039cdfab854" name="End" type="End"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="45" y="300" /><outputs><output type="collection" name="Collection Output" stage="collectionOutput" /></outputs></stage><stage stageid="4decd873-2583-4feb-a06c-7f30a42e3cc1" name="Filter Table" type="Code"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="45" y="150" w="120" h="30" /><inputs><input type="collection" name="inputTable" expr="[collectionInput]" /><input type="text" name="filter" expr="[filter]" /></inputs><outputs><output type="collection" name="outputTable" stage="collectionOutput" /></outputs><onsuccess>c296ea29-71e1-48ea-9de8-2039cdfab854</onsuccess><code><![CDATA[outputTable = new DataTable();
DataView dv = inputTable.DefaultView;
dv.RowFilter = filter;
outputTable = dv.ToTable();
]]></code></stage><stage stageid="63bf753f-a05b-4211-99dc-8605f56e1d3e" name="filter" type="Data"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-135" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1bcf5f93-e510-481a-bb90-54abcb60a428" name="collectionInput" type="Collection"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-135" y="300" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3115c4d9-d674-461d-ae6f-65fff080efd1" name="collectionOutput" type="Collection"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-135" y="420" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4e1e87fc-3ea5-470a-9e89-35bb4747e3ca" name="Input Variables" type="Block"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="240" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="e8fe3701-dd2c-4fb3-b6fe-9cfbe3a402d0" name="Output Variables" type="Block"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="390" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="80378620-d675-41d0-9238-57cc4b4c7bdb" name="Exception" type="Block"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-30" y="120" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="19fb7810-5101-4724-9ac9-67c940543306" name="Recover" type="Recover"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="195" y="240" /><onsuccess>af2f5eeb-eb7a-4690-a8ac-e8cb6ef2073d</onsuccess></stage><stage stageid="4af44689-7fdd-46c9-b4f7-6703b7a92076" name="Resume" type="Resume"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="345" y="150" /><onsuccess>b17af055-8845-4976-bd7d-dd262eff03be</onsuccess></stage><stage stageid="af2f5eeb-eb7a-4690-a8ac-e8cb6ef2073d" name="Retry?" type="Decision"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="345" y="240" w="120" h="30" /><decision expression="[retryCounter]&lt;=[maxRetry]" /><ontrue>79fff2b9-13b4-4097-9e9d-4972d835b286</ontrue><onfalse>19a824eb-94a1-4b6c-bff4-e60a97c467dd</onfalse></stage><stage stageid="b082908e-1a9e-4521-9df8-7059703b8c92" name="retryCounter" type="Data"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-135" y="360" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3bd14e4-1aac-42aa-82de-f7a7c6558c3f" name="Local Variables" type="Block"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="330" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="79fff2b9-13b4-4097-9e9d-4972d835b286" name="Increment retryCount" type="Calculation"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="345" y="195" w="120" h="30" /><onsuccess>4af44689-7fdd-46c9-b4f7-6703b7a92076</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="19a824eb-94a1-4b6c-bff4-e60a97c467dd" name="Re-Throw" type="Exception"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="495" y="240" w="120" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="b17af055-8845-4976-bd7d-dd262eff03be" name="Sleep XS" type="Action"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="195" y="150" w="120" h="30" /><inputs><input type="number" name="Sleep Time (Seconds)" friendlyname="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" expr="[timeSizeXS]" /></inputs><onsuccess>4decd873-2583-4feb-a06c-7f30a42e3cc1</onsuccess><resource object="Utility - General" action="Sleep" /></stage><stage stageid="c386bddc-5e79-43c6-98b1-0b8543570fa0" name="Settings Variables" type="Block"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-210" y="180" w="150" h="45" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="0de3e3c1-4618-477d-8a52-b3a440755a94" name="maxRetry" type="Data"><subsheetid>31053543-b50e-4239-a58f-2bc56a38aeba</subsheetid><loginhibit onsuccess="true" /><display x="-135" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="115bd397-6e01-4de8-8f3a-924cf6f403d5" name="timeSizeXXS" type="Data"><loginhibit onsuccess="true" /><display x="-120" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue>0.5</initialvalue><alwaysinit /></stage><stage stageid="0c68aa7a-2b0a-4874-b4a3-561c9cd938ee" name="timeSizeS" type="Data"><loginhibit onsuccess="true" /><display x="-120" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><alwaysinit /></stage><stage stageid="8ee09afb-210f-47d9-a569-b88fe119a4f8" name="timeSizeM" type="Data"><loginhibit onsuccess="true" /><display x="-120" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue>10</initialvalue><alwaysinit /></stage><stage stageid="0eed7777-1034-44cd-b0f6-b7007746dc1c" name="timeSizeL" type="Data"><loginhibit onsuccess="true" /><display x="-120" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><alwaysinit /></stage><stage stageid="0c498ad8-e213-4872-b76a-2e9ade47db03" name="timeSizeXL" type="Data"><loginhibit onsuccess="true" /><display x="-120" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue>60</initialvalue><alwaysinit /></stage><stage stageid="4797618f-2475-4efc-ac4b-99c6cb1f4c60" name="Global Timeouts" type="Block"><loginhibit onsuccess="true" /><display x="-195" y="60" w="150" h="225" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /></stage><stage stageid="f9e0f009-40f8-4a0b-a34b-91e17a410a86" name="timeSizeXS" type="Data"><loginhibit onsuccess="true" /><display x="-120" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><alwaysinit /></stage><stage stageid="9baa795a-d682-4ad2-aae8-40c4c06b49fc" name="timeSizeXXL" type="Data"><loginhibit onsuccess="true" /><display x="-120" y="270" w="150" h="30" /><datatype>number</datatype><initialvalue>300</initialvalue><alwaysinit /></stage></process></object>
        <object id="e0c26d57-55ec-4f9f-8838-cb263f6e9121" name="EY_GarbageCollection" xmlns="http://www.blueprism.co.uk/product/process"><process name="EY_GarbageCollection" version="5.0.23" bpversion="7.1.1.65484" narrative="" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65117a41-f7ff-4f3f-abd1-7a3cbe18cfda" type="Normal" published="True"><name>Garbage Collector</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79589425-48b9-43c8-8135-63ff4a8ca324" type="Normal" published="True"><name>Sleep Thread</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="591afa2b-c194-4c75-a94f-8c6d29f18c40" type="Normal" published="True"><name>Get memory Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="45" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-165" y="-120" w="300" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Text</import><import>System.Collections.Generic</import><import>System.Threading</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-180" y="-105" w="300" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-105" y="30" w="180" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-105" y="45" w="150" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a130f3e8-fad5-413c-a068-75ac20600244" name="Garbage Collector" type="SubSheetInfo"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="-240" y="-120" w="300" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dd85470c-e10b-4f0b-b729-c006136517eb" name="Start" type="Start"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a2426b0a-eab8-4571-a6d9-fa89c49559be</onsuccess></stage><stage stageid="3eae8050-c325-49f6-9e3f-ee12400ca5d4" name="End" type="End"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a2426b0a-eab8-4571-a6d9-fa89c49559be" name="GC.Collect" type="Code"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="0" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="errorMessage" stage="errorMessage" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>3eae8050-c325-49f6-9e3f-ee12400ca5d4</onsuccess><code><![CDATA[' Attempt to perform immediate garbage collection in the application's memory
Try
    GC.Collect()
Exit Try

' Catch exception if garbage collection fails
catch e As Exception

    ' Set the "Success" variable to false and store the error message
    Success = false
    errorMessage = e.Message

End Try

' Set the "Success" variable to true if there are no exceptions
Success = true]]></code></stage><stage stageid="1fa05d93-6064-47ba-b722-f4d8a0c01543" name="Sleep Thread" type="SubSheetInfo"><subsheetid>79589425-48b9-43c8-8135-63ff4a8ca324</subsheetid><display x="-210" y="-90" w="300" h="90" /></stage><stage stageid="bb159f84-a793-4ec4-ac29-16bd766902cd" name="Start" type="Start"><subsheetid>79589425-48b9-43c8-8135-63ff4a8ca324</subsheetid><loginhibit /><display x="30" y="-120" /><onsuccess>d5e05357-49b5-4654-ba2e-7cbd70e54039</onsuccess></stage><stage stageid="759e67c2-17bc-4744-8ed4-4c345c47b6c9" name="End" type="End"><subsheetid>79589425-48b9-43c8-8135-63ff4a8ca324</subsheetid><loginhibit /><display x="30" y="-30" /></stage><stage stageid="d5e05357-49b5-4654-ba2e-7cbd70e54039" name="Thread.Sleep" type="Code"><subsheetid>79589425-48b9-43c8-8135-63ff4a8ca324</subsheetid><loginhibit /><display x="30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>759e67c2-17bc-4744-8ed4-4c345c47b6c9</onsuccess><code><![CDATA[Threading.Thread.Sleep(500)]]></code></stage><stage stageid="240d9669-984f-41eb-8c55-26bd459080aa" name="Get memory Value" type="SubSheetInfo"><subsheetid>591afa2b-c194-4c75-a94f-8c6d29f18c40</subsheetid><display x="-195" y="-90" w="300" h="90" /></stage><stage stageid="73d84e65-98f1-43c9-9943-e7ffc7c6b095" name="Start" type="Start"><subsheetid>591afa2b-c194-4c75-a94f-8c6d29f18c40</subsheetid><loginhibit /><display x="45" y="-120" /><onsuccess>e7f97642-13fa-4c6c-ad2d-ade6b9c3d3af</onsuccess></stage><stage stageid="3f086fc6-1da3-4d2d-ae7d-9e8bbbc612b4" name="End" type="End"><subsheetid>591afa2b-c194-4c75-a94f-8c6d29f18c40</subsheetid><loginhibit /><display x="45" y="-30" /><outputs><output type="number" name="memoryTrue" stage="memoryValueTrue" /><output type="number" name="memoryFalse" stage="memoryValueFalse" /></outputs></stage><stage stageid="e7f97642-13fa-4c6c-ad2d-ade6b9c3d3af" name="GetMemory" type="Code"><subsheetid>591afa2b-c194-4c75-a94f-8c6d29f18c40</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="memoryValueTrue" stage="memoryValueTrue" /><output type="number" name="memoryValueFalse" stage="memoryValueFalse" /></outputs><onsuccess>3f086fc6-1da3-4d2d-ae7d-9e8bbbc612b4</onsuccess><code><![CDATA[memoryValueFalse = GC.GetTotalMemory(false)

memoryValueTrue = GC.GetTotalMemory(true)]]></code></stage><stage stageid="34ba9622-29b0-428d-be47-b26ceb5002b2" name="memoryValueFalse" type="Data"><subsheetid>591afa2b-c194-4c75-a94f-8c6d29f18c40</subsheetid><display x="-120" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7114d48a-413f-46ea-adeb-ce2220a25e07" name="memoryValueTrue" type="Data"><subsheetid>591afa2b-c194-4c75-a94f-8c6d29f18c40</subsheetid><display x="-120" y="45" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48b81815-e5d0-46f1-a4ff-c8c8cd82eab8" name="errorMessage" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="-165" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6a72159-c1b8-404d-ab27-049b8783eee0" name="Success" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="-165" y="-15" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0abaf0a3-f3ce-4712-8587-29220b5a637e" name="Output Variable" type="Block"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="-240" y="-60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="cf2e4b6a-691a-4d3e-b121-453716a6ca53" name="Output Variable" type="Block"><subsheetid>591afa2b-c194-4c75-a94f-8c6d29f18c40</subsheetid><loginhibit /><display x="-195" y="-30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage></process></object>
        <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" name="MS Excel VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Excel VBO" version="6.10.1.35171" bpversion="7.1.1.65484" narrative="The VBO replacement for the Common Automation Excel business object" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ca515603-8af2-4608-8a70-31028a7d9a0b</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-133</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67651307-0389-47bf-ae8d-fd94364e808f" type="Normal" published="True"><name>Remove Blank Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="492548e8-2fa5-473e-9061-df8326d46e4c" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f7a4a91-68c9-4871-bb65-417e96cc4ad1" type="Normal" published="False"><name>CheckInstanceAndWorkbook</name><view><camerax>-157</camerax><cameray>-70</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a07606-d51b-4fe3-a076-7a77a4ca2cde" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>-22</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99e648cc-a136-471c-8424-19071c0fd9e7" type="Normal" published="True"><name>Create Instance</name><view><camerax>-60</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec281dc5-ed57-4b8b-9bf5-212e314657aa" type="Normal" published="True"><name>Open Instance</name><view><camerax>209</camerax><cameray>-94</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ad81501-44a1-48ab-94fd-9b2c35ed20b8" type="Normal" published="True"><name>Attach</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2b3544ad-af96-4f40-9b50-16dfbe0600f1" type="Normal" published="True"><name>Attach to workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ec3006a-6553-4526-b522-32526c4aa3cc" type="Normal" published="True"><name>Close Instance</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4fb11e41-83d8-461d-8c0d-04cdd2f670e2" type="Normal" published="True"><name>Release Instance</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc33871a-9aec-4a29-b811-3ab205ddf41e" type="Normal" published="True"><name>Exit</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="feb8ce9f-299e-4152-85a1-354a5f9d995c" type="Normal" published="True"><name>Close All Instances</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859e3c31-acbc-48dd-8535-ef2ce9385d70" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>-36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69db5cf5-4908-49c7-9027-8f48e26e5b27" type="Normal" published="True"><name>Set Events Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="268628ce-c0f3-492a-be5c-87b432e16d1d" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>-131</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef10421c-e1ff-4227-b367-c53059a6766d" type="Normal" published="True"><name>Hide</name><view><camerax>-62</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="73b8ddb4-b679-4697-b3c4-79ce833a9456" type="Normal" published="True"><name>Create Workbook</name><view><camerax>-81</camerax><cameray>-204</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2fb01e3f-e275-43bc-83eb-579001da335b" type="Normal" published="True"><name>Open Workbook</name><view><camerax>0</camerax><cameray>-15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6632ed99-8751-4c2a-ad00-3cc016300e08" type="Normal" published="True"><name>Activate Workbook</name><view><camerax>-137</camerax><cameray>-75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e7cb0ad-5910-4065-aab2-2919726bae39" type="Normal" published="True"><name>Save Workbook</name><view><camerax>-44</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76d598ed-b254-4c1e-8004-d4f2928b1450" type="Normal" published="True"><name>Save Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21a53e34-8128-41cb-ad73-17250758ff23" type="Normal" published="True"><name>Save Workbook As</name><view><camerax>-64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9e5cd-a91d-4a33-bc23-1602c5fe878f" type="Normal" published="True"><name>Save Current Workbook As</name><view><camerax>-135</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ccaae8b-c06f-45c8-8772-835218881458" type="Normal" published="True"><name>Close Workbook</name><view><camerax>-232</camerax><cameray>110</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c" type="Normal" published="True"><name>Close Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ddb3c741-0c59-4ac8-a260-258fb8eb1674" type="Normal" published="True"><name>Is Read Only</name><view><camerax>-91</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="733c2840-8162-465a-a8f2-7d023087c369" type="Normal" published="True"><name>Activate Worksheet</name><view><camerax>-132</camerax><cameray>-106</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f78a5f80-c2d5-4e9b-ae08-a56fb8007b18" type="Normal" published="True"><name>Create Worksheet</name><view><camerax>-120</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="37a2442f-8e22-4749-8b44-4ef2980f28a6" type="Normal" published="True"><name>Delete Worksheet</name><view><camerax>16</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79b9bf7c-222d-4cc3-adc8-5bb337fa6d72" type="Normal" published="True"><name>Move Worksheet</name><view><camerax>85</camerax><cameray>98</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da83b3dd-0312-4b53-9732-e3f8e29c561f" type="Normal" published="True"><name>Copy and Paste Worksheet Range</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30" type="Normal" published="True"><name>Get Worksheet As Collection</name><view><camerax>-242</camerax><cameray>-126</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e58a482d-f349-4f40-9b03-a903156ce1b5" type="Normal" published="True"><name>Get Worksheet As Collection (Fast)</name><view><camerax>0</camerax><cameray>-156</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92799072-140a-4621-89cd-2da12475dcda" type="Normal" published="True"><name>Get Worksheet as Collection Offset</name><view><camerax>-119</camerax><cameray>-589</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e" type="Normal" published="True"><name>Get Worksheet Range As Collection</name><view><camerax>147</camerax><cameray>-33</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f743df98-2e69-4559-89b6-32ef6637618d" type="Normal" published="True"><name>Split Worksheet</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="becd6faa-f5c0-4d3a-a48a-cb54d3aa8909" type="Normal" published="True"><name>Get Worksheet Names</name><view><camerax>-10</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67" type="Normal" published="True"><name>Get Worksheet Name</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="510b0ce5-bf46-43a1-86a4-72877f427e6f" type="Normal" published="True"><name>Get Worksheet Position</name><view><camerax>0</camerax><cameray>38</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eacc4634-9985-4a1d-9773-8f79928708ee" type="Normal" published="True"><name>Worksheet Exists</name><view><camerax>105</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc139ac7-b971-481e-9528-b1521ae9fc92" type="Normal" published="True"><name>Get Number Of Rows</name><view><camerax>8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed502669-4207-4c88-895d-8c58ec321578" type="Normal" published="True"><name>Go To Cell</name><view><camerax>-6</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0b877cd-07ce-4df1-a63b-89fa4d315c4c" type="Normal" published="True"><name>Go To Next Cell</name><view><camerax>-180</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c" type="Normal" published="True"><name>Get Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b5de6c6-ed9a-443d-95b8-142dd521120e" type="Normal" published="True"><name>Find Next Empty Cell</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eaafa766-b0ce-4891-8e6e-de12d6283ae0" type="Normal" published="True"><name>Go To Next Empty Cell Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2d4c80d-3058-4d60-8e96-7b9b12f9ae58" type="Normal" published="True"><name>Go To Next Empty Cell Right</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a78c1a5-e339-4f76-9203-d180bee31770" type="Normal" published="True"><name>Go To Next Empty Cell Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82492075-b486-413c-9bd4-05eba466843e" type="Normal" published="True"><name>Go To Next Empty Cell Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5698ca16-b00d-4d62-9d9b-e76e8295b556" type="Normal" published="True"><name>Set Cell Value</name><view><camerax>55</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0dbe03a0-e259-47ab-bee7-7dec41ae32e7" type="Normal" published="True"><name>Write Collection</name><view><camerax>0</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e031661-2f5e-4cb2-949b-97babe59ff81" type="Normal" published="True"><name>Get Cell Value</name><view><camerax>0</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d96215cc-750e-4616-8852-1d4d44a9f21b" type="Normal" published="True"><name>Get Active Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17f8ab72-203a-42d4-a59b-a073ccd57bb0" type="Normal" published="True"><name>Get Formatted Cell Value</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c" type="Normal" published="True"><name>Format Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9b535bfc-4f80-4d7c-88b5-49b941688030" type="Normal" published="True"><name>Format Current Cell</name><view><camerax>0</camerax><cameray>-28</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39374841-edab-4ea9-86d9-5f2fff3f1a5f" type="Normal" published="True"><name>Set Window Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904eeb0d-e6a2-408b-99b5-621307252585" type="Normal" published="True"><name>Set Window Location</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d4998c94-d432-4713-81a5-e902535089c6" type="Normal" published="True"><name>Set Window State</name><view><camerax>-11</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9147cb85-5c6f-4a47-adcf-ab472d5a0b5a" type="Normal" published="True"><name>Select</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a" type="Normal" published="True"><name>Delete</name><view><camerax>82</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="659749b0-1f00-4e33-956d-6be6172a8739" type="Normal" published="True"><name>Insert</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="71ebd060-a411-45fc-8f39-132eb3e5ff79" type="Normal" published="True"><name>Copy</name><view><camerax>98</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5eee765d-c84b-493f-9132-f6a27f296d0e" type="Normal" published="True"><name>Cut</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035d5ed0-2f39-46ca-80c1-b0127418dc9e" type="Normal" published="True"><name>Paste</name><view><camerax>-282</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c59601b-2b70-4c97-a218-0abf1bf7463a" type="Normal" published="True"><name>Write To Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c37e9923-b729-471b-80b1-7d44113ca618" type="Normal" published="True"><name>Protect Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7316eded-6aed-4d1d-9eeb-64fbbb8e53a0" type="Normal" published="True"><name>Hide Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e62b9c20-62f8-4d28-8f19-de7610e56e1e" type="Normal" published="True"><name>Hide Other Worksheets</name><view><camerax>-276</camerax><cameray>-917</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1487aa65-ac8a-44e9-a6e9-8b16b4be5199" type="Normal" published="True"><name>Import CSV</name><view><camerax>52</camerax><cameray>88</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4229da44-68c0-4b51-9d2c-08be4a9d6727" type="Normal" published="True"><name>Run Macro</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="8f886cd8-eef6-485f-b9f3-0086c90eecdb" name="Start" type="Start"><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0d87ebb-154d-4756-8b89-d2d5445479ae</onsuccess></stage><stage stageid="d0d87ebb-154d-4756-8b89-d2d5445479ae" name="End" type="End"><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="13efd9ee-454d-4e73-a19d-91a25c412087" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>System.IO</import><import>Microsoft.VisualBasic</import><import>System.Windows.Forms</import><import>System.Data</import><import>System.Diagnostics</import><import>System.Text</import><import>System.Threading</import><import>System.Runtime.InteropServices</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[
' External functions used to make sure the excel instances are exited and processes killed
Declare Function EndTask Lib "user32.dll" (ByVal hWnd As IntPtr) As Integer
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
	   (ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr
Declare Function FindWindowEx Lib "user32.dll" Alias "FindWindowExA" _
       (hWnd1 As IntPtr, hWnd2 As IntPtr, lpsz1 As String, lpsz2 As String) As IntPtr
Declare Function GetWindowThreadProcessId Lib "user32.dll" _
	   (ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer
Declare Function SetLastError Lib "kernel32.dll" _
       (ByVal dwErrCode As Integer) As IntPtr
Declare Function AccessibleObjectFromWindow Lib "oleacc.dll" _
       (hWnd As IntPtr, dwId As Int32, ByRef riid As Guid, <MarshalAs(UnmanagedType.Interface)> ByRef ppvObject As Object) As Int32

' The 'active' instance of excel.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the excel instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Execute a sub within a specific timeout period
'
' @param timeout The number of seconds to wait before timing out
' @param name The name of the operation
' @param operation The operation to perform
Private Sub ExecWithTimeout(timeout As Integer, name As String, operation As Action)
    Dim ar = operation.BeginInvoke(Nothing, Nothing)
    If Not ar.AsyncWaitHandle.WaitOne(TimeSpan.FromSeconds(timeout)) Then
        Throw New TimeoutException(name & " took more than " & timeout & " secs.")
    End If
    operation.EndInvoke(ar)
End Sub

' Execute a function within a specific timeout period
'
' @param timeout The number of seconds to wait before timing out
' @param name The name of the operation
' @param operation The operation to perform
'
' @return The result of the operation
Private Function ExecWithTimeout(Of T)(timeout As Integer, name As String, operation As Func(Of T)) As T
    Dim ar = operation.BeginInvoke(Nothing, Nothing)
    If Not ar.AsyncWaitHandle.WaitOne(TimeSpan.FromSeconds(timeout)) Then
        Throw New TimeoutException(name & " took more than " & timeout & " secs.")
    End If
    return operation.EndInvoke(ar)
End Function

' Used to hold a reference to the last exception that occurred
' Be careful to set back to nothing when the type has been checked.
Private mLastException As Exception = Nothing

' Loops over all excel instances and gets the instance with a given
' workbook name. This uses active accessibility because:
'     Dim application = GetObject(,"Excel.Application)
'     application.Windows(workbookName).Activate()
' dosen't work if there is more than one instance of excel
'
' @param workBookName The name of the workbook
'
' @return The application instance
Public Function OpenNamedObjectAA(workbookName As String) As Object
    Const OBJID_NATIVEOM = &HFFFFFFF0
    Dim IID_DISPATCH As New Guid("00020400-0000-0000-C000-000000000046")
    Dim workBook As Object = Nothing
    Do
        Dim XLhwnd As IntPtr = FindWindowEx(IntPtr.Zero, XLhwnd, "XLMAIN", Nothing)
        If IntPtr.Equals(XLhwnd, IntPtr.Zero) Then Exit Do
        Dim XLDESKhwnd As IntPtr = FindWindowEx(XLhwnd, IntPtr.Zero, "XLDESK", Nothing)
        Dim WBhwnd As IntPtr = FindWindowEx(XLDESKhwnd, IntPtr.Zero, "EXCEL7", Nothing)
        AccessibleObjectFromWindow(WBhwnd, OBJID_NATIVEOM, IID_DISPATCH, workBook)
        If workBook IsNot Nothing Then
            Dim application As Object = workBook.Application
            If application IsNot Nothing Then
                Try
                    application.Windows(workbookName).Activate()
                    Return application
                Catch ex As Exception
                    Continue Do
                End Try
            End If
        End If
    Loop
    Throw new Exception("Excel with workbook name '" & workBookName & "' not found.")
End Function

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function


' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Excel.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Excel.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function

' Helper method in forcing a com object to be released.
Private Sub ReleaseObject(ByVal comOj As Object)
	Try
		System.Runtime.InteropServices.Marshal.ReleaseComObject(comOj)
		System.Runtime.InteropServices.Marshal.FinalReleaseComObject(comOj)
		comOj = Nothing
	Catch ex As Exception
		comOj = Nothing
	Finally
		' Why is GC.Collect being called twice?
		' See https://msdn.microsoft.com/en-us/library/ff647790.aspx?f=255&MSPPError=-2147217396#scalenetchapt05_topic9
		GC.Collect()
		GC.WaitForPendingFinalizers()
		GC.Collect()
	End Try
End Sub

' Close the instance with the given handle, not saving any work, making
' sure that it is removed from this VBO's collection of instances
'
' @param Handle The handle representing the instance to close
Protected Sub CloseInstance(Handle As Integer)
	CloseInstance(Handle, False)
End Sub

' Close the instance with the given handle, saving the work as specified.
'
' @param Handle The handle representing the instance
'
' @param SaveWorkbooks True to save the workbooks before quitting the instance,
' 		False to discard any changes
Protected Sub CloseInstance(Handle As Integer, SaveWorkbooks As Boolean)
	
	Dim Instance As Object = Nothing
	If Handle = 0 AndAlso CurrentInstance Is Nothing Then
		Throw New NullReferenceException("Tried to close nonexistent current instance")
	ElseIf Handle = 0 ' Current Instance - reset it
		Handle = GetHandle(CurrentInstance) ' We need the handle to remove from HandleMap
		Instance = CurrentInstance
		CurrentInstance = Nothing
	Else
		Instance = GetInstance(Handle)
	End If

	Me.HandleMap.Remove(Handle)
	Me.InstanceMap.Remove(Instance)

	Instance.DisplayAlerts = False ' Hide alerts
	
	' First close all the workbooks and the workbooks collection
	Dim wbs as Object = Instance.Workbooks
	If wbs IsNot Nothing Then
		For Each Workbook As Object In wbs
			Workbook.Close(SaveWorkbooks)
			ReleaseObject(Workbook)
		Next
		wbs.Close()
	End If
	ReleaseObject(wbs)

	' Try quitting - sometimes this is enough
	Instance.Quit()
	
	' Try and force a com object release - this might quit excel for us.
	ReleaseObject(Instance)

	' Now if the com object has released the RCW, we need to stop
	' We'll know because if we try and get the version and it fails
	' then the COM object has been cleaned up.
	' If so, end the proc now - we have to assume the instance is gone
	
	Dim Ver as Double = 0.0
	Try
		Ver = Val(Instance.Version)
	Catch ex as Exception
		' Not got the version - assuming cleared up
		Return
	Finally
		SetLastError(0) ' If any errors have occurred thus far, clear them
	End Try

	' Now it's the messy stuff to try and find the excel instance and nuke
	' it from orbit. It's the only way to be sure.

	' The window handle for the excel instance
	Dim hwnd As IntPtr = IntPtr.Zero
	' Later versions of excel expose the window handle
	If Val(Ver) >= 10 Then _
		hwnd = New IntPtr(CType(Instance.Parent.Hwnd, Integer))
		
	' If the window handle isn't set, must be an earlier version of excel
	' Use FindWindow to find the window with the GUID that we set in it on creation
	If IntPtr.Equals(hwnd, IntPtr.Zero) Then _
		hwnd = FindWindow(Nothing, Instance.Caption)
	
	' If the window handle is still zero, the instance must already be closed
	If Not IntPtr.Equals(hwnd, IntPtr.Zero) Then
	
        ' Get the process ID for the window we have
		Dim resp, procId as Integer
        resp = GetWindowThreadProcessId(hwnd, procId)
		
        If procId = 0 Then ' can’t get Process ID
            If EndTask(hwnd) = 0 Then ' EndTask returns a bool - 0 = False
				Throw New ApplicationException("Failed to close Excel Instance.")
			End If
        Else ' We have a process ID - use it to kill excel
			Dim proc As Process = Process.GetProcessById(procId)
			' Try clicking the 'X'
			proc.CloseMainWindow()
			proc.Refresh()

			If Not proc.HasExited Then
				proc.Kill()	' Last resort - kill it with fire
			End If	
		End If	
	End If

End Sub

' Creates a new workbook in the instance represented by the given handle
'
' @param Handle The handle of the instance on which the workbook should be held
'
' @return The workbook object that was created.
Protected Function NewWorkbook(Handle as Integer) As Object

	Dim wb as Object = GetInstance(handle).Workbooks.Add()

	' Create a new Worksheet?
	if wb.Worksheets.Count = 0 Then
		wb.Sheets.Add().Activate()
	Else ' Just use the first sheet
		wb.Sheets(1).Activate()
	End If
	
	Return wb
	
End Function

' Gets the workbook in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the workbook
'
' @param Name The name of the workbook on the instance
'
' @return The object representing the workbook defined
Protected Function GetWorkbook(Handle As Integer, Name as String) As Object

	Dim wb as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		wb = GetInstance(Handle).ActiveWorkbook
		If wb Is Nothing ' We need to create a deafult workbook
			wb = NewWorkbook(Handle)
		End If
		Return wb
	Else
		Return GetInstance(Handle).Workbooks(Name)
	End If

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one and return that
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @return The sheet object representing the sheet with the given name
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String) As Object

	Return GetWorksheet(Handle,WorkbookName,WorksheetName,True)

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one or return Nothing, depending on the given flag
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @param CreateIfNotExists True to create the worksheet if it doesn't
' 		exist; False to return Nothing if it doesn't exist.
'
' @return The sheet object representing the sheet required or Nothing
'		if no such sheet exists and CreateIfNotExists was False
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String, _
		CreateIfNotExists As Boolean) As Object

	Dim wb As Object = GetWorkbook(Handle, WorkbookName)
	
	If (String.IsNullOrEmpty(WorksheetName)) Then

		Dim ws as Object = wb.ActiveSheet
		If ws Is Nothing Then
			Return wb.Sheets.Add()
		Else
			Return ws
		End If

	Else
		Dim sheets as Object = wb.Sheets
		If sheets IsNot Nothing Then
			For Each sheet as Object in sheets
				If sheet.Name = WorksheetName Then _
					Return sheet
			Next
		End If
		' Didn't find the sheet...
		If CreateIfNotExists Then

			Dim sheet as Object = sheets.Add()
			sheet.Name = WorksheetName
			Return sheet

		End If
		' Nothing else we can do - return nowt
		Return Nothing

	End If

End Function

' Gets the next cell, relative to a given cell in a given direction
' Note that if the cell is at a boundary, then the same cell is returned.
'
' @param cell : The cell to use as a base cell
'
' @param strDir : one of "L", "R", "U", "D" representing a direction from
' 		the given cell to move in.
'
' @return : The cell object representing the 'next cell' 
Protected Function GetNextCell(cell as Object, strDir as String) As Object
	
	Try
		Select Case strDir
			Case "L"
				cell = cell.Offset(0,-1)
			Case "R"
				cell = cell.Offset(0,1)
			Case "U"
				cell = cell.Offset(-1,0)
			Case "D"
				cell = cell.Offset(1,0)
		End Select
	Catch ex As Exception
		' A COM Exception is thrown if the cell is at a boundary and the offset
		' would break that boundary
	End Try
	
	Return cell

End Function

Const SchemaColumnName As String = "Column Name"

Function GetWorkSheetUsedRangeAsDataTable(
	usedRange as object, 
	firstRowIsHeader As Boolean,
	fetchDataWithMethod As String) As DataTable	
	
	If usedRange Is Nothing Then Throw new ArgumentNullException("usedRange")

	Dim range(usedRange.Rows.Count, usedRange.Columns.Count) As Object

	Select Case fetchDataWithMethod

		Case "Text"
			For currentRow As Integer = 1 To usedRange.Rows.Count
				For currentColumn As Integer = 1 To usedRange.Columns.Count
					Dim text = usedRange.Rows(currentRow).Cells(currentColumn).Text
					range(currentRow, currentColumn) = text
				Next
			Next
		Case "Value2"
			range = usedRange.Value2
		Case Else
			range = usedRange.Value

	End Select

	Dim result = new DataTable()
	
	Dim headingsList = GetFirstRowHeadings(range, firstRowIsHeader)

	For Each heading As String In headingsList
		result.Columns.Add(heading, GetType(string))
	Next
		
	Dim startRowIndex = If(firstRowIsHeader AndAlso range.GetLength(0) > 1, 2, 1)	
	Dim totalRows As Integer = usedRange.Rows.Count
	Dim totalCols As Integer = If(fetchDataWithMethod = "Text", 
		usedRange.Columns.Count, range.GetLength(1))

	For i As Integer = startRowIndex To totalRows
		Dim currentRow As DataRow = result.NewRow
		result.Rows.Add(currentRow)

		For j As Integer = 1 To totalCols
			Dim value = range(i, j)
			If value Is Nothing Then value = String.Empty
			currentRow.Item(j - 1) = value.ToString()
		Next j
	Next i

	Return result
End Function

Function GetFirstRowHeadings(arr as Object(,), firstRowIsHeader As Boolean) as List(Of String)
	Dim result = new List(Of String)()
	For i as Integer = 1 to arr.GetLength(1)
		Try
			Dim value = arr(1, i)
			Dim heading As String = If(value Is Nothing OrElse Not firstRowIsHeader, String.Empty, value.ToString)
			result.Add(heading)
		Catch e As Exception
			' ignore index out of bound exception, 
			' typically thrown when .Text is used
		End Try
	Next i
	return result
End Function

Function ParseDelimSeparatedVariables(
 data As String,
 delimStr As String,
 schema As DataTable,
 firstRowIsHeader As Boolean) As DataTable

	Const DefaultState As Integer = 0
	Const Instring As Integer = 1
	Const FirstQuote As Integer = 2

	Const Quote As Char = """"c
	If delimStr.Length = 0 Then delimStr = ","
	If delimStr.Length <> 1 Then Throw New Exception("Delimiter must be a single character")

	Dim delim As Char = delimStr(0)

	Dim state As Integer = DefaultState
	Dim firstRow As Boolean = True
	Dim columnValue As New StringBuilder()

	Dim emptySchema As Boolean = schema Is Nothing OrElse schema.Rows.Count = 0
	If emptySchema Then schema = Nothing
	Dim outputCollection As New DataTable()

	If Not emptySchema Then
		For Each schemaRow As DataRow In schema.Rows
			Dim colName As String = schemaRow(SchemaColumnName).ToString
			outputCollection.Columns.Add(colName, GetType(String))
		Next
	End If

	Dim row As DataRow = Nothing
	Dim colIndex As Integer = 0
	Using sw As New StringReader(data)
		While True
			Dim line As String = sw.ReadLine()
			If line Is Nothing Then Exit While

			' If we're not processing a CRLF in the middle of a string, we want to move
			' onto the next row; if we are, we keep the current row and column since we're
			' still writing to that 'cell'.
			If state <> Instring Then
				row = outputCollection.NewRow
				colIndex = 0
			End If
			For Each ch As Char In line
				Select Case ch
					Case delim ' ie. 'ch' is the specified delimiter - "," or "\t"
						Select Case state
							Case Instring
								columnValue.Append(delim)
							Case Else ' Covers 'default' and 'first quote'.
								If firstRow Then
									HandleFirstRow(
										firstRowIsHeader,
										columnValue.ToString(),
										colIndex,
										row,
										schema
									)
								Else
									row(colIndex) = columnValue.ToString
								End If

								columnValue.Length = 0
								state = DefaultState
								colIndex += 1
						End Select
					Case Quote
						Select Case state
							Case FirstQuote
								state = Instring
								columnValue.Append(Quote)
							Case Instring
								state = FirstQuote
							Case Else
								' If we find a quote in the middle of a non-quoted cell, it's
								' a literal quote; otherwise (ie. at the start of a cell), it
								' means the cell value is wrapped - go into 'Instring' state
								If columnValue.Length > 0 Then
									columnValue.Append(Quote)
								Else
									state = Instring
								End If
						End Select
					Case Else
						columnValue.Append(ch)
				End Select
			Next

			If firstRow Then
				HandleFirstRow(
					firstRowIsHeader,
					columnValue.ToString(),
					colIndex,
					row,
					schema
				)
				firstRow = False
				columnValue.Length = 0
				state = DefaultState
				If Not firstRowIsHeader Then outputCollection.Rows.Add(row)

			Else
				' If we're still in the middle of the string we want to include the CRLF in the
				' actual value that we're writing and leave the state at 'Instring'
				If state = Instring Then
					columnValue.Append(vbCrLf)
				Else
					row.Item(colIndex) = columnValue.ToString
					outputCollection.Rows.Add(row)
					columnValue.Length = 0
					state = DefaultState
				End If
			End If

		End While

	End Using

	Return outputCollection

End Function

Sub HandleFirstRow(firstRowIsHeader As Boolean, val As String, colIndex As Integer, row As DataRow, schema As DataTable)
	Dim tab = row.Table
	If schema Is Nothing Then
		If firstRowIsHeader Then
			Dim colName As String = val
			tab.Columns.Add(colName, GetType(String))
		Else
			Dim colName As String = "Column " & tab.Columns.Count
			tab.Columns.Add(colName, GetType(String))
			row(colIndex) = val
		End If
	Else
		If firstRowIsHeader Then
			Dim schemaColName As String = schema.Rows(colIndex)(SchemaColumnName).ToString
			Dim colName As String = val
			If colName <> schemaColName Then
				Throw New Exception("Column name mismatch. Column '" & colName & "' dosen't match schema name of '" & schemaColName & "'")
			End If
		End If
	End If
End Sub

' The common language runtime (CLR) automatically passes locale ID 1033 to all methods and properties
' in the Excel object model that accept locale-sensitive data. There is no way to change this behavior
' automatically for all calls into the object model. However, you can pass a different locale ID to a
' specific method by using InvokeMember to call the method and by passing the locale ID to the culture
' parameter of the method.
' https://msdn.microsoft.com/en-us/library/bb157877.aspx
' Additionaly we must use the culture that Excel is using and not the local machine.
Private Function InvokeReflection(Instance As Object, Name As String, bindingFlags As Reflection.BindingFlags, ParamArray args() As Object) As Object
	const msoLanguageIDUI = 2 'User interface language.
	
    Dim culture = New System.Globalization.CultureInfo(DirectCast( _
							CurrentInstance.LanguageSettings.LanguageID(msoLanguageIDUI), Integer))
    Return Instance.GetType().InvokeMember(Name, bindingFlags, Nothing, Instance, args, culture)
End Function

Private Function Invoke(Instance As Object, Name As String, ParamArray args() As Object) As Object	
	Return InvokeReflection(Instance, Name, Reflection.BindingFlags.InvokeMethod, args)
End Function

Private Sub SetProperty(Instance As Object, Name As String, ParamArray args As Object())
	InvokeReflection(Instance, Name, Reflection.BindingFlags.SetProperty, args)
End Sub

Private Function GetProperty(Instance As Object, Name As String) As Object
	Return InvokeReflection(Instance, Name, Reflection.BindingFlags.GetProperty)	
End Function

' Gets the clipboard text, ensuring that the retrieval is performed
' on an STA thread so that it retrieves it correctly.
Function GetClipboardText() As String
    Dim data As String = Nothing
    With New Threading.Thread(Sub() data = Clipboard.GetDataObject().GetData(DataFormats.Text, True))
        .SetApartmentState(Threading.ApartmentState.STA)
        .Start()
        .Join()
    End With
    Return data
End Function

' Sets the clipboard text, ensuring that it is done on an STA thread.
Sub SetClipboardText(value as String)
    With New Threading.Thread(Sub() Clipboard.SetText(value))
        .SetApartmentState(Threading.ApartmentState.STA)
        .Start()
        .Join()
    End With
End Sub

]]></code></stage><stage stageid="debd0d09-d7e8-4af4-b718-c69fd2d3db22" name="Clean Up" type="SubSheetInfo"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Closes all the instances that have been created / attached to using this business object.</narrative><display x="-180" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="74a37e04-8569-40b9-8cc7-55d419e6c658" name="Start" type="Start"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fedc107e-577b-47d9-a445-c3a3e66ef516</onsuccess></stage><stage stageid="d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba" name="End" type="End"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9864b229-3596-444e-afb1-b46efff51132" name="Create Workbook" type="SubSheetInfo"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><narrative>Creates a workbook on the specified instance, returning the resultant name.

Params:
- handle : Number : The handle identifying the instance on which the workbook should be required. The default of zero indicates the current instance.

Returns:
- Workbook Name : Text : The workbook name that Excel has granted to the new workbook. By default, Excel will call it "Book&lt;n&gt;" where &lt;n&gt; is a positive integer.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.</narrative><display x="-255" y="-300" w="330" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e4ba7053-63b7-4fa4-b64b-12309c5d3d51" name="Start" type="Start"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-390" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be created. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>852ff62f-6d2b-4031-b675-ec155fd88908</onsuccess></stage><stage stageid="1d707fac-863d-4281-b9d0-a65c74bf374c" name="End" type="End"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name of the workbook that Excel has created - this can be changed using the &quot;Save Workbook As&quot; action" stage="workbookname" /></outputs></stage><stage stageid="88aa07c9-ea21-42c6-80da-110e83fc2748" name="new" type="Note"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7cd0bd3-f4fc-4acb-921b-97d3cff31998" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-195" y="30" w="300" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ffe88be-5a6a-452e-a183-9d1b9e027326" name="Open Workbook" type="SubSheetInfo"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><narrative>Opens a workbook using the instance specified in the given handle, opening the book represented by the given filename.

Params :
- handle : Number : The handle to the instance in which the workbook should be opened. The default value of zero indicates the current instance.
- File name : Text : The path to the file which should be opened.

Outputs:
- Workbook Name : Text : The name of the workbook that Excel uses to identify it.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-255" y="-165" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="753ce277-ee09-4ee9-841b-827037917616" name="Start" type="Start"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." stage="filename" /></inputs><onsuccess>9e0df7e0-ab34-4a97-9f69-db66c88ff5f4</onsuccess></stage><stage stageid="18a306bf-d323-4c4e-83b5-4b226773161c" name="End" type="End"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookname" /></outputs></stage><stage stageid="4d2c2635-39a5-41ce-8c67-49eb1db37d55" name="Save Workbook" type="SubSheetInfo"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><narrative>Saves the workbook using the current name as a filename.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be saved. The default of 0 indicates the current instance.
- Workbook Name : The name of the workbook to be saved. The default of empty indicates that the active workbook should be saved.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c92f23e-cde4-457b-8a6e-2856cf88955e" name="Start" type="Start"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /></inputs><onsuccess>ab6f627b-d630-4bdd-b840-7aac26b5806f</onsuccess></stage><stage stageid="4c75715c-7a4a-491b-804f-261ee86fcd95" name="End" type="End"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cee07b01-63cb-4d6d-9cc4-d1868ae80a0a" name="Save Workbook As" type="SubSheetInfo"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>Save the given workbook using the given file name.

Params :
- handle : Number : The integer identifying the instance on which the workbook resides. Default (0) indicates the current instance
- Workbook Name : Text : The name of the workbook which should be saved. Default ("") indicates the active workbook.
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-180" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f79caf-dea6-4a9a-95f0-0c05bea8b485" name="End" type="End"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs></stage><stage stageid="8ff7cce5-b764-42f9-88ed-51eb82a178c0" name="Activate Worksheet" type="SubSheetInfo"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ddfe7f54-b5c2-410a-8a5d-3c2b52de9550" name="End" type="End"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf681fff-ce18-4dcc-b190-da9870383e35" name="Delete Worksheet" type="SubSheetInfo"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><narrative>Deletes the specified worksheet from the workbook.

Params:
- handle : Number : The excel instance handle
- Workbook Name : Text : The name of the workbook
- Worksheet Name : Text : The name of the sheet to delete.
If the sheet doesn't exist, this will fail silently - ie. nothing will occur.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the named worksheet did not exist on the specified workbook, or if the active sheet was specified and there was no active sheet.</narrative><display x="-240" y="-135" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c23803d1-15b5-4976-9466-8fb2e49529d3" name="Go To Cell" type="SubSheetInfo"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><narrative>Activates the cell in the given workbook, identified by the given cell reference.

Params:
- handle : Number: The integer handle identifying the excel instance (0 represents 'active' instance)
- Cell Reference : Text : the cell reference to go to
NOTE - the active sheet in the instance is the one on which the cell is active</narrative><display x="-240" y="-135" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="717bb32a-6e60-4972-bdcb-10d6c7b769a0" name="Start" type="Start"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." stage="cellref" /></inputs><onsuccess>dc6f6efd-7724-48b0-8544-8f86f7bb1b8d</onsuccess></stage><stage stageid="f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8" name="End" type="End"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f9a7cb58-89e7-4295-be05-54454641b318" name="Set Cell Value" type="SubSheetInfo"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><narrative>Sets the specified cell's value to the given value.
This has the side-effect of setting the active cell to that which is specified here.

Exceptions
Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action
</narrative><display x="-225" y="-135" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="15cc8816-ce32-4cb4-888f-7e42b5cbc653" name="Start" type="Start"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." stage="cellref" /><input type="text" name="Value" narrative="The value to which the specified cell should be set." stage="value" /></inputs><onsuccess>f54da925-167d-4c17-b44c-1861acd36f9b</onsuccess></stage><stage stageid="3efecc12-e41e-4386-b852-2651ab750ecc" name="End" type="End"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="69459b62-2608-4fd7-a65e-40074b837222" name="Get Cell Value" type="SubSheetInfo"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><narrative>Gets the value of the specified cell - note that if the cell has some formatting set in it, this does *not* return the formatted value - See "Get Formatted Cell Value".
Note also that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="232e4bda-508e-44c7-8adb-315ce0fab8af" name="CreateWorkbook" type="Code"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>1d707fac-863d-4281-b9d0-a65c74bf374c</onsuccess><code><![CDATA[
name = NewWorkbook(handle).Name]]></code></stage><stage stageid="6b5a2269-93b3-4e07-ae32-b53e1a63e772" name="filename" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1365c72e-7420-4330-a305-53b0408ec641" name="cellref" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f4cf65f-1932-4f8c-9902-00080ed74347" name="value" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50be384a-f88b-477b-9bff-ee76cd5684bc" name="Set Cell Value" type="Code"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>3efecc12-e41e-4386-b852-2651ab750ecc</onsuccess><code><![CDATA[GetInstance(handle).ActiveCell.Value = value
Dim activeCell = GetInstance(handle).ActiveCell
SetProperty(activeCell, "Value", value)]]></code></stage><stage stageid="155a039e-a678-4192-866d-0a80004f7b1b" name="cellref" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edbe4d75-3363-4d77-b489-87fb02980fdc" name="Select Cell" type="Code"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><onsuccess>f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8</onsuccess><code><![CDATA[
GetWorkbook(handle, "").ActiveSheet.Range(cellref,cellref).Activate()]]></code></stage><stage stageid="476742dd-c37f-49de-9eb5-1a66e5bcda17" name="handle" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f54da925-167d-4c17-b44c-1861acd36f9b" name="Go To Cell" type="SubSheet"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>50be384a-f88b-477b-9bff-ee76cd5684bc</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="e7dc5be6-9447-4f5a-b528-e3b4e6e92319" name="handle" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0b718057-0ae5-4c65-bb5a-d9a14ac2496a" name="handle" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3fe639e8-b4a0-4f50-886f-fb9c99ed04b2" name="Activate Workbook" type="SubSheetInfo"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><narrative>Activates the excel workbook identified by the given handle and name.

Params:
- handle : Number : The identifier of the instance which is holding the workbook; 0 (default) indicates the active instance
- Name : Text : The name of the workbook which should be activated

Exceptions:
- Invalid Input Parameter : If the worksheet name parameter is given
- Bad Handle : If the handle does not correspond to an Excel instance</narrative><display x="-240" y="-165" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8084bde3-efbe-44ec-a484-c9b07c3d0b78" name="Start" type="Start"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." stage="workbookname" /></inputs><onsuccess>6344b53e-9777-411e-bab1-aee5633bbc7d</onsuccess></stage><stage stageid="f8b84adb-3239-4125-af8d-4b1d02c950a6" name="End" type="End"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05b66883-e53e-43f9-a4d8-baa1fb79f412" name="handle" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><display x="-240" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dc6f6efd-7724-48b0-8544-8f86f7bb1b8d" name="Activate Workbook" type="SubSheet"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>edbe4d75-3363-4d77-b489-87fb02980fdc</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="1c1bd122-21c0-4b17-92f4-e5459d7921c6" name="handle" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b35f9f6-e395-4e4b-8dc1-5b2e86b17fbe" name="Close Workbook" type="SubSheetInfo"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><narrative>Closes the specified workbook, saving changes if requested.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be closed. 0 indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be closed. "" indicates the active workbook on the specified instance.
- Save Changes : Flag : True to save the changes (the equivalent of calling 'Save Workbook' before closing the workbook); False to discard any changes when closing the workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-540" y="-30" w="450" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f23862f-bb67-4712-ade2-d8d62befeb7b" name="End" type="End"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f308d1c5-88b0-455a-bff7-8163c95d1eab" name="Open Workbook" type="Code"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>6c2fa22d-1876-46b7-92eb-cf8343d0911f</onsuccess><code><![CDATA[name = ExecWithTimeout(Timeout, "Open Workbook",
Function()
    Dim instance = GetInstance(handle)
    Dim workbooks As object = GetProperty(instance, "Workbooks")
    Dim wb As Object = Invoke(workbooks, "Open", filename)
    Invoke(wb, "Activate")
    Return wb.Name
End Function)]]></code></stage><stage stageid="5d910335-0e44-4e14-8093-292d0737faee" name="handle" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7edfc788-b0ea-4933-ac22-6345453b8c6c" name="filename" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54e39cf8-9167-44e0-aea5-08d102a67f52" name="Create Instance" type="SubSheetInfo"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><narrative>Creates an instance of Excel, returning a handle with which it can be retrieved using the global object method : GetInstance(handle).</narrative><display x="-255" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2eee0d2a-9595-449a-bbdc-8fb0c5153180" name="Close Instance" type="SubSheetInfo"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><narrative>Closes the instance represented by the given handle, saving the changes or not as specified.

Params:
- handle : Number : The handle identifying the instance that should be closed; The default of 0 will close the 'current active' instance - ie. the last one accessed. Note that following the 'current active' instance being closed, the current instance will not be set.
- Save Changes : Flag : True to save the instance's workbooks before closing; False to just close the instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-255" y="-150" w="390" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b394cfde-b1ec-4f16-b977-d1e1ffd337be" name="Start" type="Start"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." stage="handle" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." stage="savechanges" /></inputs><onsuccess>b06ec4ea-540a-4321-a1f9-a645f288eb9e</onsuccess></stage><stage stageid="5d9b206b-bf58-47fe-806b-c2d6807d911e" name="End" type="End"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9798ad3a-b44f-4102-a9d1-0861103be2d8" name="Open Instance" type="SubSheetInfo"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><narrative>Opens a currently running instance of Excel with the given workbook name.

If no workbook name is given, it opens the active instance of Excel. If there is no instance of Excel currently running, it will create a new one.

Params:
- WorkbookName : Text : should correspond to the workbook which should be opened - an empty value will cause the first activated instance of Excel to be opened.

Returns:
- handle : Number : The numeric handle with which this instance can be identified</narrative><display x="-210" y="-195" w="270" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d071afd-6ab3-43d1-ac0e-1951c7598b19" name="Start" type="Start"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." stage="workbookname" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" stage="Enable Events" /></inputs><onsuccess>a08aa147-8eee-4f21-a683-142cb1680af6</onsuccess></stage><stage stageid="754832af-1144-48ff-8ab0-bb6c86d3f78e" name="End" type="End"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs></stage><stage stageid="6a0587c3-1640-4af9-9199-62382cc11cdb" name="Start" type="Start"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>c642c278-2fc8-4504-826c-25e0281a26af</onsuccess></stage><stage stageid="d337a2cf-1121-4619-a1b1-f7f19bea974e" name="End" type="End"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="c642c278-2fc8-4504-826c-25e0281a26af" name="Create Instance" type="Code"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>a13edde2-3883-4007-9719-92f0e1009ddd</onsuccess><code><![CDATA[
Dim excel as Object = CreateObject("Excel.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
excel.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(excel)]]></code></stage><stage stageid="56408aa5-2607-4026-bbb0-ee39b8c304be" name="handle" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb0ff5ea-0f21-4e70-a3b3-2eaf0baa3dc5" name="Set Current Instance" type="SubSheetInfo"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><narrative>Sets the "current active" instance to that specified.

Params:
- handle : Number : The handle of the instance that should be set as the current instance. The default of zero only has the effect of throwing an exception if no current instance is set, otherwise it's a no-op.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-135" w="330" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="773582ee-ed72-4483-9b24-9e4f66cf590e" name="Start" type="Start"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should be made the 'current' one. The default of zero indicates the current, er, 'current' one - ie. this action has no effect other than validating that there is a current instance." stage="handle" /></inputs><onsuccess>79986761-82ee-46d2-83d5-4e3375b886be</onsuccess></stage><stage stageid="b272722b-ab35-4a09-9082-3cc31a0999b5" name="End" type="End"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7897c32-9be3-483a-bca8-3fee7d1af8b5" name="handle" type="Data"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3866da9-69bc-4edc-9173-0f9d0013190a" name="handle" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7e31a12c-4578-4202-b034-a306f3ee679d" name="Close Instance" type="Code"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="savechanges" expr="[savechanges]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>5d9b206b-bf58-47fe-806b-c2d6807d911e</onsuccess><code><![CDATA[ExecWithTimeout(Timeout,"Close Instance",
Sub() CloseInstance(handle, savechanges))]]></code></stage><stage stageid="eaefcb8d-64bd-4782-a39c-6ea00bb157b2" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><narrative>Checks if the handle given can be used to access a valid instance.

This means that the handle is a non-zero value which represents a handle, or it is zero and a 'current instance' is set (current instance is set every time an instance is created or accessed using GetInstance() - it may be set to Nothing if an instance is closed).

- handle is the handle to check that it represents a valid instance

Exceptions:
- Bad Handle : If the given handle doesn't represent an instance</narrative><display x="-300" y="-120" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19668af6-5fa9-48b7-9f6e-e2caf5795b69" name="Start" type="Start"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /></inputs><onsuccess>34b692da-278c-4018-96ec-a9d03f696b43</onsuccess></stage><stage stageid="a4c8054c-d063-42e0-8063-c8972459baa3" name="End" type="End"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b06ec4ea-540a-4321-a1f9-a645f288eb9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7e31a12c-4578-4202-b034-a306f3ee679d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="34b692da-278c-4018-96ec-a9d03f696b43" name="Check Handle" type="Code"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="1468c19b-a6a0-44e0-b096-5f325448f3fb" name="handle" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52d17605-ad90-4a36-aa9d-47e5418dba04" name="HandleMissing" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7383095-97e9-4fa8-90e0-ad186e9df285" name="Is Handle Missing?" type="Decision"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>8b5e76e6-a81e-4377-b161-1bef1ff3d753</ontrue><onfalse>a4c8054c-d063-42e0-8063-c8972459baa3</onfalse></stage><stage stageid="8b5e76e6-a81e-4377-b161-1bef1ff3d753" name="Bad Instance Handle" type="Exception"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="79986761-82ee-46d2-83d5-4e3375b886be" name="CheckInstanceHandle" type="SubSheet"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b272722b-ab35-4a09-9082-3cc31a0999b5</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2db56ca3-8def-419f-a3e3-ac8408915c69" name="Open Named Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="WorkbookName" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess><code><![CDATA[Dim obj = ExecWithTimeout(Timeout, "Open Named Instance",
Function() OpenNamedObjectAA(WorkbookName))
handle = GetHandle(obj)]]></code></stage><stage stageid="6e2accad-a08b-4b28-9551-f44a9a291607" name="handle" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8e6a89-2552-4e75-9d44-72240a365783" name="workbookname" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a08aa147-8eee-4f21-a683-142cb1680af6" name="Is WorkbookName empty?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([workbookname])=&quot;&quot;" /><ontrue>aaa7ff33-69b5-4636-8766-e0556ee48bec</ontrue><onfalse>2db56ca3-8def-419f-a3e3-ac8408915c69</onfalse></stage><stage stageid="aaa7ff33-69b5-4636-8766-e0556ee48bec" name="Open Arbitrary Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Timeout" expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess><code><![CDATA[Dim obj As Object = Nothing
Try
    obj = ExecWithTimeout(timeout,"Get Object",
        Function() GetObject(,"Excel.Application"))
Catch ex As TimeoutException
    mLastException = ex
    Throw
End Try
If obj Is Nothing Then Throw New Exception("Could not Get Object")

' GetObject may return an unusable wrapper (possibly if instance is shutting
' down) which results in a "COM target does not implement IDispatch" exception
' when accessing members of the object. If reading the EnableEvents property 
' results in an exception, the recover stage will run and a new instance will 
' be created instead.
Dim tempEnableEvents = obj.EnableEvents

handle = GetHandle(obj)]]></code></stage><stage stageid="fba0fa7c-4ed5-4652-b4ae-08770f5f3867" name="No Open Instances" type="Recover"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9474db50-6935-47fa-b862-4aa1a49143f8</onsuccess></stage><stage stageid="df0b2b99-8c10-4cf4-9d2d-c3ccf515c960" name="Carry On, Bertram" type="Resume"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7fb1ba2f-64f1-417b-9b97-479efb954a9d</onsuccess></stage><stage stageid="a6205e66-5e1f-4360-86a2-8f1325751c3c" name="Create Instance" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="True" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>df0b2b99-8c10-4cf4-9d2d-c3ccf515c960</onsuccess><processid>99e648cc-a136-471c-8424-19071c0fd9e7</processid></stage><stage stageid="852ff62f-6d2b-4031-b675-ec155fd88908" name="CheckInstanceHandle" type="SubSheet"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-300" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>232e4bda-508e-44c7-8adb-315ce0fab8af</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="59ebf811-1faf-4486-8630-6d2de19027f5" name="CheckType" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="ExceptionType()=&quot;Internal&quot;" /><ontrue>a6205e66-5e1f-4360-86a2-8f1325751c3c</ontrue><onfalse>567674ba-270a-4107-ada5-1dae59125522</onfalse></stage><stage stageid="567674ba-270a-4107-ada5-1dae59125522" name="RethrowException" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="570" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9e0df7e0-ab34-4a97-9f69-db66c88ff5f4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41c51e08-6c3e-4cbc-bc30-31936476aa7d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="4a034863-88fc-4111-a656-18471e002741" name="workbookname" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-240" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="366f8bd4-fafd-47cc-98a3-0afb7d697fe9" name="ActivateWorkbook" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()]]></code></stage><stage stageid="e74de56c-16cf-4cd7-8ecf-fabdf05e7311" name="handle" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e45f2d66-35c1-40fd-a729-754cfabbb5ab" name="SaveWorkbook" type="Code"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>4c75715c-7a4a-491b-804f-261ee86fcd95</onsuccess><code><![CDATA[ExecWithTimeout(Timeout, "Save Workbook",
Sub()
    Dim wb as Object = GetWorkbook(handle,workbookname)
    Dim excel as Object = wb.Application
    excel.DisplayAlerts = False
    Invoke(wb, "Save")
    excel.DisplayAlerts = True
End Sub)]]></code></stage><stage stageid="8ba3f3c5-2585-44db-9393-a681e9ff1111" name="workbookname" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc9d285-c937-4336-89b3-aa7acf379075" name="Start" type="Start"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." stage="filename" /></inputs><onsuccess>7fa4c0ab-6c38-4a55-915a-48e7ce529979</onsuccess></stage><stage stageid="a6943793-fb0e-491c-bdc1-ccf04ee31e6d" name="workbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b526d9f-c7bd-4190-8c33-a6f5ad7982fa" name="SaveWorkbookAs" type="Code"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /><input type="number" name="Timeout" expr="[Timeout]" /></inputs><outputs><output type="text" name="newworkbookname" stage="newworkbookname" /></outputs><onsuccess>b4f79caf-dea6-4a9a-95f0-0c05bea8b485</onsuccess><code><![CDATA[newworkbookname = ExecWithTimeout(Timeout, "Save Workbook As",
Function()
    Dim wb as Object  = GetWorkbook(handle,workbookname)
    Dim excel as Object = wb.Application

    excel.DisplayAlerts = False
    wb.SaveAs(filename)
    excel.DisplayAlerts = True

    Return wb.Name
End Function)]]></code></stage><stage stageid="a7fd5308-fe75-448e-99ad-e104521ee580" name="CheckInstanceAndWorkbook" type="SubSheetInfo"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Checks the instance and workbook values, throwing an exception if they are invalid.

Params:
- instance : Number : The integer value representing an Excel instance. The default value of zero represents the last activated instance.
- Workbook Name : Text : The name of the workbook on the instance to check. An empty string represents the 'active' workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-240" y="-150" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d69e69ce-7251-40e1-b779-c9951ee36cbb" name="Start" type="Start"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" stage="handle" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" stage="workbookname" /></inputs><onsuccess>16e7e153-e022-4c0b-9af2-ac69b52f855a</onsuccess></stage><stage stageid="bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d" name="End" type="End"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="16e7e153-e022-4c0b-9af2-ac69b52f855a" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>d4997ba5-8e1f-4585-a093-376eb725f14d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118" name="Workbook Found?" type="Decision"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[workbookfound]" /><ontrue>bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d</ontrue><onfalse>62e3710c-2e7e-4507-a49b-0009b3585ba3</onfalse></stage><stage stageid="62e3710c-2e7e-4507-a49b-0009b3585ba3" name="Workbook Not Found" type="Exception"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Thrown when a workbook name was not found</narrative><display x="195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Workbook Not Found" detail="&quot;Workbook named: &quot; &amp; [workbookname] &amp; &quot; not found in instance: &quot; &amp; [handle]" /></stage><stage stageid="c3051222-78b2-48d6-9813-d71f854c5e81" name="handle" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6bcb687a-3390-4a83-8690-fba44345b1a8" name="workbookname" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba694738-8f03-4a1c-a7b1-d946dc55c028" name="workbookfound" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d4997ba5-8e1f-4585-a093-376eb725f14d" name="CheckWorkbook" type="Code"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="workbookfound" stage="workbookfound" /></outputs><onsuccess>b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118</onsuccess><code><![CDATA[
Try
	ExecWithTimeout(timeout,"Get Workbook",
        Sub() GetWorkbook(handle,workbookname))	
	workbookfound = True
Catch ex as Exception
	If ex.Message.IndexOf("DISP_E_BADINDEX")<>-1 Then
		workbookfound = False
	Else
		Throw ex
	End If
End Try]]></code></stage><stage stageid="ab6f627b-d630-4bdd-b840-7aac26b5806f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e45f2d66-35c1-40fd-a729-754cfabbb5ab</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="7fa4c0ab-6c38-4a55-915a-48e7ce529979" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>8b526d9f-c7bd-4190-8c33-a6f5ad7982fa</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="d52e7a12-1a97-4bcf-9014-5a4ad93aa054" name="Close Workbook" type="Code"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>5f23862f-bb67-4712-ade2-d8d62befeb7b</onsuccess><code><![CDATA[ExecWithTimeout(Timeout, "Close Workbook",
Sub()
    Dim wb as Object = GetWorkbook(handle,name)
    Dim app as Object = wb.Application

    app.DisplayAlerts = False
    wb.Close(False)
    app.DisplayAlerts = True
End Sub)]]></code></stage><stage stageid="3a83f920-ccd5-4dc3-95ee-4c5a195c5191" name="handle" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7b233620-de4e-40ff-9a99-af09b1574d08" name="workbookname" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85080efc-4429-45d0-9248-dfcceaa60a27" name="Start" type="Start"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." stage="workbookname" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." stage="savedata" /></inputs><onsuccess>52c31124-7463-40b9-8d24-9ffebe12e167</onsuccess></stage><stage stageid="b481dbd1-022d-42b5-a2bc-5bfbbc233772" name="savedata" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="52c31124-7463-40b9-8d24-9ffebe12e167" name="Save Data?" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[savedata]" /><ontrue>16f6c60c-721b-44be-9e97-b5b518e0f360</ontrue><onfalse>68e0d10e-5b8a-4ccb-a42b-67192ce2ede1</onfalse></stage><stage stageid="16f6c60c-721b-44be-9e97-b5b518e0f360" name="Save Workbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /></inputs><onsuccess>cf877504-31ed-4e77-b72f-b00469c37fc7</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="68e0d10e-5b8a-4ccb-a42b-67192ce2ede1" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="cf877504-31ed-4e77-b72f-b00469c37fc7" name="anchor1" type="Anchor"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess></stage><stage stageid="cdb03710-27a7-4412-964a-73e4b9bd1a07" name="noteybenny" type="Note"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Note: CheckInstanceAndWorkbook is done as part of SaveWorkbook, so no need to do it again</narrative><display x="15" y="60" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f39e78b7-d81a-43de-af4f-ea3ce7a918a2" name="handle" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f02e77b-3ca1-40a7-a64b-35fdad519172" name="workbookname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6344b53e-9777-411e-bab1-aee5633bbc7d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>366f8bd4-fafd-47cc-98a3-0afb7d697fe9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="ba48be23-80aa-4b44-beef-dbc6a7fb5901" name="VerifyFileExists" type="SubSheetInfo"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><narrative>Checks if the given file exists.

Params:
- File name : Text : Path to the file to check

Exceptions:
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-210" y="-120" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c6df86d-8ca7-4778-adeb-2c570998768f" name="Start" type="Start"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" narrative="The filename to check to ensure it exists." stage="filename" /></inputs><onsuccess>e28c5aa8-d587-4390-843e-b97c32c2cdb8</onsuccess></stage><stage stageid="d465101e-fa27-4434-8413-515e331d1389" name="End" type="End"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8d315224-d32b-4a85-aae0-3ee4d3b98c9c" name="filename" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86877e71-923f-4480-9b41-a5a7f4dc60a5" name="fileexists" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e28c5aa8-d587-4390-843e-b97c32c2cdb8" name="File Exists?" type="Code"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>d43bfe27-76d7-4542-b7ad-ba696468713e</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="d43bfe27-76d7-4542-b7ad-ba696468713e" name="Does File Exist?" type="Decision"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[fileexists]" /><ontrue>d465101e-fa27-4434-8413-515e331d1389</ontrue><onfalse>11a4a0e7-8810-493b-9409-df70ca4dc5b2</onfalse></stage><stage stageid="11a4a0e7-8810-493b-9409-df70ca4dc5b2" name="File Not Found" type="Exception"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="135" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="41c51e08-6c3e-4cbc-bc30-31936476aa7d" name="VerifyFileExists" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>f308d1c5-88b0-455a-bff7-8163c95d1eab</onsuccess><processid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</processid></stage><stage stageid="60533ca6-ea95-4425-b684-87e7517782aa" name="Start" type="Start"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>b5d5c5b0-1e3b-438b-b988-6058174ec5ba</onsuccess></stage><stage stageid="63d363e1-c78b-4332-815c-06f9d6f7a7df" name="OpenWorksheet" type="Code"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>3a854b87-0e5a-46dd-8181-a58f97555aa8</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
sheetexists = ws IsNot Nothing 
If sheetexists then ws.Activate()]]></code></stage><stage stageid="b5d5c5b0-1e3b-438b-b988-6058174ec5ba" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>63d363e1-c78b-4332-815c-06f9d6f7a7df</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="1dccafb3-fd07-4362-b343-e87c1a67e83e" name="worksheetname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b35d569-0eb2-4c01-bb88-e5f7c41bde81" name="End" type="End"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fab4ac4b-d2f7-4f1c-a0c3-d6dd0cd01f9b" name="handle" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="60f1e726-ab7f-437a-8bda-36148238d510" name="workbookname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13ac609e-b9ca-4a72-907c-d7656496f5ab" name="Start" type="Start"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be deleted resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet to be deleted. The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet to be deleted. The default empty value indicates the currently active worksheet." stage="worksheetname" /></inputs><onsuccess>5346c305-4024-4d1d-8806-c1b20f16c10d</onsuccess></stage><stage stageid="982dd82e-af43-49cb-a4b1-58da1ccfeb33" name="Delete Worksheet" type="Code"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="flag" name="sheetexisted" stage="sheetexisted" /></outputs><onsuccess>56c2259b-9d71-4364-bede-79b4af1e3e96</onsuccess><code><![CDATA[
Dim Inst As Object = GetInstance(handle)
Inst.DisplayAlerts = False

Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,False)
sheetexisted = ws IsNot Nothing
If sheetexisted Then ws.Delete()

Inst.DisplayAlerts = True]]></code></stage><stage stageid="5346c305-4024-4d1d-8806-c1b20f16c10d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>982dd82e-af43-49cb-a4b1-58da1ccfeb33</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="6ca6d1da-9270-43f8-89d4-c0ece0a353cb" name="worksheetname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae9d880b-4f92-4620-94e8-36d06f4e2181" name="Start" type="Start"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>9a734ecf-7e58-4aa4-b7ff-5aa4494ec687</onsuccess></stage><stage stageid="ca24190a-a9cb-4c37-b5d2-78bcd838ef40" name="End" type="End"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="value" /></outputs></stage><stage stageid="b659eb08-bf67-463a-a8cc-556b152d8032" name="cellref" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257d1cf8-2a6f-47d2-88ee-1d0a125cb27d" name="value" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a04a5ea1-798c-4659-ac77-0c966c305cba" name="Get Cell Value" type="Code"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>ca24190a-a9cb-4c37-b5d2-78bcd838ef40</onsuccess><code><![CDATA[
	Dim cellVal as String = GetInstance(handle).ActiveCell.Value
	value = IIf(cellVal Is Nothing, "", cellVal)]]></code></stage><stage stageid="39135f99-dd54-4a2b-bff2-555714753a6d" name="Go To Cell" type="SubSheet"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="c533ffd2-866d-4944-82be-7e6a6ede4c9a" name="handle" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3fe8fb5-4290-4e6e-8d8f-780f47e78d27" name="workbookname" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7dc88f-16d6-41f8-a4f1-4ca8921bf024" name="Get Worksheet As Collection" type="SubSheetInfo"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The first row will be treated as the column names and will be used as the column names in the generated collection.

Params:
- handle : Number : The integer identifying the instance in which the worksheet resides. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook on which the sheet resides. Default ("") indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet which is required as a collection. Default ("") indicates the active sheet within the workbook.

Output:
Data - Collection - The data from the worksheet.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the specified worksheet does not exist on the specified workbook.

Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action</narrative><display x="-285" y="-195" w="420" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf5b0880-2cac-4221-946a-e4e3d7f0bc99" name="End" type="End"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="c42e68de-468d-4aac-bcd2-283b9f578565" name="handle" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ed8d683e-8efe-426c-8be6-85136cbdf337" name="workbookname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14362f26-4336-4848-adf6-2e710eb2a69d" name="Start" type="Start"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="Fetch Data With Method" narrative="The method used to fetch data from cells in the worksheet. Options include Text, Value, and Value2. The default indicates Value will be used." stage="fetchDataWithMethod" /></inputs><onsuccess>23c90658-57ef-456a-92fa-970b0161d0f8</onsuccess></stage><stage stageid="36a8c859-cf71-4b54-b7ed-317997b94589" name="GetWorksheetAsCollection" type="Code"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="fetchDataWithMethod" expr="[fetchDataWithMethod]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>b6d0da26-0322-4b43-b1d5-304466ff29fb</onsuccess><code><![CDATA[
	Dim ws as Object = _
	 GetWorksheet(handle, workbookname, worksheetname, False)

	' Do we have a sheet?
	sheetexists = ws IsNot Nothing
	' No sheet? No entry.
	If Not sheetexists Then Return

	ws.Activate()

	worksheetCollection = GetWorksheetUsedRangeAsDataTable(ws.UsedRange, True, fetchDataWithMethod)
]]></code></stage><stage stageid="23c90658-57ef-456a-92fa-970b0161d0f8" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>36a8c859-cf71-4b54-b7ed-317997b94589</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="51a0a405-79a5-4a53-9a36-a40b08481389" name="worksheetname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4c01041-da7a-4cd3-9990-a0a236064fa5" name="worksheetcollection" type="Collection"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9b8dd3a0-045b-4019-b977-8716d12d92c6" name="workbookname" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="-210" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ba94499-d376-4a0b-9486-f4bced0a6a23" name="Close All Instances" type="SubSheetInfo"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><narrative>Closes all instances of excel which have been opened by this business object, either through "Create Instance" or "Open Instance" and which have not been discarded through "Close Instance" or "Release Instance"</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e8745127-ee68-4c60-8b52-0b68e91835bf" name="Start" type="Start"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8f8060c8-cea7-41c9-93c1-b181ca345fa9</onsuccess></stage><stage stageid="85215f92-002d-4d9c-8fe7-652c149d0206" name="End" type="End"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8f8060c8-cea7-41c9-93c1-b181ca345fa9" name="CloseAllInstances" type="Code"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>85215f92-002d-4d9c-8fe7-652c149d0206</onsuccess><code><![CDATA[
Dim clone as Dictionary(Of Integer,Object) = _
	new Dictionary(Of Integer,Object)(HandleMap)

For Each Handle As Integer In clone.Keys
	CloseInstance(Handle,False)
Next]]></code></stage><stage stageid="15437c28-7f56-4c1b-b98a-769b875b9d57" name="Find Next Empty Cell" type="SubSheetInfo"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><narrative>Searches for the next empty cell in the direction given.
This can either activate that cell before returning, or just return the cell reference while leaving the active cell as it was.

Params:
- handle : Number : The integer handle identifying the Excel instance to use. The default of zero indicates the 'current' instance.
- Direction : Text : The direction in which to go, this should start with "U", "D", "L" or "R" (not case-sensitive) - the rest of the string is ignored, so you can use "Up", "DOWN" "left" and, indeed, "r"
- Activate Cell? : Flag : True to activate the found cell, False to just return the reference. Default is False.

Returns:
- Cell Reference : Text : The cell ID which represents the next empty cell in the required direction. This will be blank if no empty cell was found in the given direction.

Exceptions:
Invalid Direction Parameter : If the given direction parameter was invalid - ie. did not start with one of the (case-insensitive) letters "U", "D", "L" or "R".</narrative><display x="-300" y="-195" w="450" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3707693-ef57-453a-b8b2-16e8d8aee39f" name="Start" type="Start"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." stage="direction" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." stage="activatecell" /></inputs><onsuccess>ea536eb5-62b7-4b15-b0b9-0c5415414692</onsuccess></stage><stage stageid="65e26d12-b37e-4df9-a00b-07340967e5b2" name="End" type="End"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs></stage><stage stageid="2d159e37-f93b-42db-b8a7-3ea3e5300c76" name="direction" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3a1953-80c7-4d24-92fe-1e6823202956" name="cellref" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea536eb5-62b7-4b15-b0b9-0c5415414692" name="Direction Valid?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><narrative>Direction must start with one of the following:
- U : Indicates 'up'
- D : Indicates 'down'
- L : Indicates 'left'
- R : Indicates 'right'
Any other value (including empty text) is invalid</narrative><display x="-15" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([direction]))&gt;0 AND InStr(&quot;UDLR&quot;,Upper(Left(Trim([direction]),1)))&lt;&gt;0" /><ontrue>e8cca858-4b46-40a0-81fc-3112398c4a42</ontrue><onfalse>382555c6-554f-465d-bbac-43e5b0ec06ed</onfalse></stage><stage stageid="382555c6-554f-465d-bbac-43e5b0ec06ed" name="Invalid Direction Parameter" type="Exception"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="150" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Direction Parameter" detail="&quot;Direction: '&quot; &amp; [direction] &amp; &quot;' is invalid - it must start with 'U', 'D', 'L' or 'R' (up, down, left or right)&quot;" /></stage><stage stageid="e8cca858-4b46-40a0-81fc-3112398c4a42" name="FindEmptyCell" type="Code"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="direction" expr="[direction]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>a47f3c07-957d-4909-bc43-4c56e5f58ae6</onsuccess><code><![CDATA[
' The initial char of the direction (capitalised)
Dim strDir as String = direction.Trim().Substring(0,1).ToUpper()

' The excel instance
Dim excel as Object = GetInstance(handle)

' The excel enum representing the direction
' Note: setting to zero is just to nix a duff compiler warning
Dim dirn as Integer = 0

' xlDirection enum values from: 
' http://msdn.microsoft.com/en-us/library/bb241212.aspx

' Get the direction we need to go
Select Case strDir
	Case "U"
		dirn = -4162 ' Excel.XlDirection.xlToUp
	Case "D"
		dirn = -4121 ' Excel.XlDirection.xlToDown
	Case "L"
		dirn = -4159 ' Excel.XlDirection.xlToLeft
	Case "R"
		dirn = -4161 ' Excel.XlDirection.xlToRight
	Case Else
		Throw New ArgumentException("Invalid Direction: " & strDir)
End Select

Dim cell as Object = excel.ActiveCell

While True

	' First check the next one along - if that's blank then we're away..
	Dim nextCell as Object = GetNextCell(cell, strDir)

	' If the cell address is the same on moving - that indicates we're
	' at a limit (eg. 1st column going left, last row going down etc.)
	' Just return empty to indicate that there are no blank cells in
	' that direction.
	If cell.Address = nextCell.Address Then
		cellref = ""
		Return
	ElseIf nextCell.Value = Nothing Then ' We've found our blank
		cellref = nextCell.Address(False,False)
		Return
	End If
	
	cell = nextCell
	
	' Quick way (rather than plodding from one cell to the next)
	' is to effectively press the 'End' key - but this is highly
	' inconsistent in what it returns.
	' Go to the 'end' of the range - ie. the last filled cell
	' cell = cell.End(dirn)
	' Now we need to go one beyond, ie. to the next cell
	' cell = GetNextCell(cell, strDir)

End While
]]></code></stage><stage stageid="facf151b-ee72-46d1-b528-a921e6945048" name="handle" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c507994e-eb49-43c1-bf77-9bf7cf88e0e6" name="Get Formatted Cell Value" type="SubSheetInfo"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><narrative>Gets the formatted value of the desired cell. This will apply any formatting which is in place in the specified cell before outputting the value.</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c0ed8b3d-fb86-442b-959e-a601d2d5f84f" name="Start" type="Start"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance within which the cell is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose value is required. Note that a side-effect of this action is that the specified cell will become the active cell on the specified instance. An empty value indicates the currently active cell." stage="cellref" /></inputs><onsuccess>29427d7f-a2d9-4b65-b6c4-773881bd285d</onsuccess></stage><stage stageid="722e3ab7-97b7-4cd6-886e-53bf4ac022ec" name="End" type="End"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The formatted value at the given cell reference." stage="value" /></outputs></stage><stage stageid="1260d770-e90c-4ea2-9e64-e3442c7de787" name="cellref" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6618eccc-3c6e-4660-997c-5f9142e71dc8" name="value" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94dc11fe-505e-4544-a26b-80d3d88d0951" name="Get Cell Text" type="Code"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>722e3ab7-97b7-4cd6-886e-53bf4ac022ec</onsuccess><code><![CDATA[
	value = GetInstance(handle).ActiveCell.Text]]></code></stage><stage stageid="3e695c2e-2110-4655-ba2e-31a41f453383" name="handle" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d9fc29b1-af47-4caf-882b-d9fc56955a8b" name="Split Worksheet" type="SubSheetInfo"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><narrative>Splits the specified worksheet into separate workbooks, creating a new sheet on each one and copying a subset of rows across to it.

Params:
- handle : Number : The integer representing the Excel instance - 0 represents the 'active' excel instance.
- Rows per sheet : Number : The number of rows which should be copied into each separate workbook.
- Workbook Name : Text : The name of the workbook from which the sheet should be split. "" indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet from which the data should be split. "" indicates the active worksheet on the instance.
- Path : Text : The directory in which the resultant workbooks should be saved.
- No Title Row : Flag : True to indicate that the first row should *not* be used as a title row and copied across each of the generated workbooks.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- File Not Found : If the given path did not exist or was not a directory</narrative><display x="-240" y="-180" w="510" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6" name="End" type="End"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="052dc2d6-2989-49fb-9dbd-d4db6e106c98" name="Start" type="Start"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows per worksheet" narrative="The number of rows which should appear in each worksheet. Zero indicates all rows." stage="rowspersheet" /><input type="text" name="Workbook Name" narrative="The name of the workbook within the specified instance which contains the sheet to be split. The default empty text indicates the currently active workbook within the specified instance should be used." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook to split - The default empty value indicates that the currently active sheet within the workbook should be used." stage="worksheetname" /><input type="flag" name="No Title Row" narrative="True to indicate that the rows should just be split across without using the first row as a title row (ie. as a list of column headers). False to indicate that the first row contains the column headers which should be replicated across all generated sheets." stage="notitle" /><input type="text" name="Path" narrative="The path to the directory in which the generated workbooks should be created. The files will be created with a name of &quot;{Workbook Name}_SECTION_nnnn&quot;, where nnnn is an number incrementing with each section generated." stage="path" /></inputs><onsuccess>ee1e1e11-a16a-4060-9ea0-0848320dfbaf</onsuccess></stage><stage stageid="3200e67b-1f79-4672-9828-e9e4438f565b" name="handle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="177b7483-8cfb-41a7-8644-e4fdc19ecf2a" name="rowspersheet" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd48b9ea-dee0-4b1a-a9bb-7c84a64fa132" name="workbookname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f865844-bba2-4377-8b24-5d089cbfb8c4" name="worksheetname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1e1e11-a16a-4060-9ea0-0848320dfbaf" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>359dbb2d-d57f-48c1-9c7f-1d22ef094036</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="359dbb2d-d57f-48c1-9c7f-1d22ef094036" name="Split Worksheet" type="Code"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="number" name="rowspersheet" expr="[rowspersheet]" /><input type="flag" name="notitle" expr="[notitle]" /><input type="text" name="path" expr="[path]" /></inputs><outputs><output type="flag" name="filefound" stage="filefound" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>5cb56c9a-aa29-4ed4-84e1-9a65976ba50f</onsuccess><code><![CDATA[Dim sheet as Object = GetWorksheet(handle,workbookname,worksheetname,False)

sheetexists = sheet IsNot Nothing
If Not sheetexists Then Return

Dim book as Object = sheet.Parent
Dim excel as Object = sheet.Application

Dim prefix as String = book.Name
If prefix.ToLower().EndsWith(".xls") Then
	prefix = prefix.Substring(0,prefix.Length - 4)
End If

If Not path.EndsWith("\") Then
	path += "\"
End If

filefound = Directory.Exists(path)
If Not filefound Then ' Might as well quit now 
	Return
End If

Dim lastCell as Object = sheet.Cells.Find("*", , , , , 2)			 'Excel.XlSearchDirection.xlPrevious=2
'loop through the worksheet in blocks of Numblines lines

' Force overwrites if the excel book already exists.
excel.DisplayAlerts = False ' Hide alerts

Dim loopCount as Integer = 0
For row as Integer = 1 To lastCell.Row-1 Step rowspersheet ' -1 to cope with total-rows = rowspersheet
	loopCount = loopCount + 1
	Dim newbook as Object = excel.Workbooks.Add
	If notitle Then
		'copy each block into the new worksheet
		sheet.Range(sheet.Cells(row, 1), sheet.Cells(loopCount * rowspersheet, sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
	Else
		'in here - so there must be a title row that needs copying to all the new worksheets
		If row = 1 Then
			'copy row 1-201 into new worksheet (including title row at #1)
			sheet.Range(sheet.Cells(row, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
		Else
			'copy title row into new worksheet
			sheet.Range(sheet.Cells(1, 1),sheet.Cells(1,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
			'next copy row iloop+1 to iloop+NumbLines into new worksheet (i.e. 202-401)
			sheet.Range(sheet.Cells(row + 1, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A2"))
		End If
	End If
	'close and save the new workbook
	newbook.Close(True, path & prefix & "_SECTION_" & (loopCount+1000).ToString().Substring(1) & ".xls")
Next]]></code></stage><stage stageid="cfd178fc-26e5-4e7c-b9f3-cb49ea4de27e" name="notitle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee6017-400e-44c3-8b07-611d7318fecf" name="path" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dec5f88-d7e5-4ad4-be54-8744dc5cac54" name="filefound" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859597f9-d048-46a3-bf99-2f3f6588c2c5" name="Was file found?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[filefound]" /><ontrue>aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6</ontrue><onfalse>6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733</onfalse></stage><stage stageid="6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733" name="No Such Directory" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;Directory : &quot; &amp; [path] &amp; &quot; does not exist or is not a directory&quot;" /></stage><stage stageid="e9c5ba22-79d3-4bd7-ae8f-3b36c06dd51e" name="Get Number Of Rows" type="SubSheetInfo"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><narrative>Counts the number of rows in a worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="555b5c2d-9106-444b-9c96-f1ff4699a988" name="End" type="End"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Number of rows" narrative="The number of rows." stage="rowcount" /></outputs></stage><stage stageid="1c4aa0dc-e628-424b-8df8-eaf16dbd668d" name="Start" type="Start"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the number of rows is required. The default empty text value indicates the currently active sheet on the specified workbook." stage="worksheetname" /></inputs><onsuccess>35173317-eeae-482b-8a2a-ea46406fcb4f</onsuccess></stage><stage stageid="35173317-eeae-482b-8a2a-ea46406fcb4f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>aa3ba555-86e5-42ae-bdb5-b614c46bdaf9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="aa3ba555-86e5-42ae-bdb5-b614c46bdaf9" name="Count Rows" type="Code"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="number" name="rowcount" stage="rowcount" /></outputs><onsuccess>555b5c2d-9106-444b-9c96-f1ff4699a988</onsuccess><code><![CDATA[
' enum - Excel.XlSearchDirection.xlPrevious=2
rowcount = GetWorksheet(handle,workbookname,worksheetname).Cells.Find("*", , , , , 2).Row]]></code></stage><stage stageid="fbf7b5e7-f86b-48f0-8d2a-8658bcabfe72" name="handle" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ae17d409-d655-459f-a6fe-1c4ed04c7023" name="workbookname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f2032a3-62ce-48a2-b098-ed275a569931" name="worksheetname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac9321b0-2209-4f44-bd1e-3876c05fc35f" name="rowcount" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1bb96d7-94f9-4570-85a9-f1bcff4f31ae" name="Is Read Only" type="SubSheetInfo"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><narrative>Checks if the given workbook is read only or not.

Params:
- handle : Number : The integer identifying the excel instance to check. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook to be checked. Default ("") indicates the active workbook on the given instance.

Output:
Read Only? : Flag : True to indicate that the workbook is read only; False to indicate that it is writable.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-300" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bb6cb4de-9a8f-424e-82d8-52d766ab5da5" name="Start" type="Start"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be checked resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook to test to see if it is read-only or not." stage="workbookname" /></inputs><onsuccess>91487aa9-0d65-4895-940d-c4fed2212eec</onsuccess></stage><stage stageid="1e8fe949-d784-437f-a724-b5003709f18c" name="End" type="End"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Read Only?" narrative="True to indicate that the specified workbook is read-only; False to indicate that it can be written to." stage="isreadonly" /></outputs></stage><stage stageid="cfa1438f-ab60-4810-a5b5-ede71fc7b700" name="handle" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="da3c5815-0a1f-4d3d-af8a-09e5f8a1d262" name="workbookname" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91487aa9-0d65-4895-940d-c4fed2212eec" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e412638c-10ff-49e6-ae71-6b5c86f40ddb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b7057d73-acb5-4298-a652-5f91898d67d6" name="isreadonly" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e412638c-10ff-49e6-ae71-6b5c86f40ddb" name="Check Read Only" type="Code"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="isreadonly" stage="isreadonly" /></outputs><onsuccess>1e8fe949-d784-437f-a724-b5003709f18c</onsuccess><code><![CDATA[
isreadonly = GetWorkbook(handle,workbookname).ReadOnly]]></code></stage><stage stageid="fedc107e-577b-47d9-a445-c3a3e66ef516" name="Close All Instances" type="SubSheet"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba</onsuccess><processid>feb8ce9f-299e-4152-85a1-354a5f9d995c</processid></stage><stage stageid="f6285d0d-f7fe-4987-96cf-4d0e27180f81" name="Show" type="SubSheetInfo"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><narrative>Shows a window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to show. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-105" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="865342da-5035-45ef-9902-c74ba855f521" name="Start" type="Start"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>6562ae8e-f16f-4f89-8787-7884cc6a57db</onsuccess></stage><stage stageid="565f4f77-b276-4735-9c18-000ce13946a7" name="End" type="End"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6562ae8e-f16f-4f89-8787-7884cc6a57db" name="CheckInstanceHandle" type="SubSheet"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7785ca63-e0a8-40c6-940b-0d9e73944b25</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="97a05e5a-864b-4413-8623-d939827e5c39" name="Hide" type="SubSheetInfo"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><narrative>Hides the window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to hide. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-120" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7785ca63-e0a8-40c6-940b-0d9e73944b25" name="ShowInstance" type="Code"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>565f4f77-b276-4735-9c18-000ce13946a7</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="f65b17c8-19fe-4381-9b68-8909f6aa312d" name="handle" type="Data"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="11f4ca85-d053-4b2e-a46d-705fe87040c0" name="Start" type="Start"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window hidden. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>ebc908b3-4501-4500-9648-a35ebbabddda</onsuccess></stage><stage stageid="6106570f-43e1-4a42-9f67-c8f2522a910c" name="End" type="End"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ebc908b3-4501-4500-9648-a35ebbabddda" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>1cc2d38f-3783-42f7-8b75-78243c367fb3</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="1cc2d38f-3783-42f7-8b75-78243c367fb3" name="HideInstance" type="Code"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>6106570f-43e1-4a42-9f67-c8f2522a910c</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="11e05865-7edb-4526-b015-b4b5f725fbc4" name="handle" type="Data"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2e480365-7061-4a6c-81ea-380e5bd06ef7" name="Save Current Workbook As" type="SubSheetInfo"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><narrative>Save the current workbook using the given file name. This is the equivalent of calling the 'Save Workbook As' action with the default values for 'handle' (0) and 'Workbook Name' ("")

Params :
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.</narrative><display x="-285" y="-150" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7e1a622f-6438-41c8-9b86-e0d93c8267cb" name="Start" type="Start"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The full path and file name to which the current workbook should be saved." stage="filename" /></inputs><onsuccess>ec111fc5-c308-4507-8b78-8fa3a8cfa136</onsuccess></stage><stage stageid="acb62e2e-bb38-4f8b-8ceb-61ec851d8986" name="End" type="End"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="newworkbookname" /></outputs></stage><stage stageid="c5eee5f9-2db2-4efb-8f47-46e98073dedb" name="filename" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec111fc5-c308-4507-8b78-8fa3a8cfa136" name="Save Workbook As" type="SubSheet"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Filename" expr="[filename]" /></inputs><outputs><output type="text" name="New Workbook Name" stage="newworkbookname" /></outputs><onsuccess>acb62e2e-bb38-4f8b-8ceb-61ec851d8986</onsuccess><processid>21a53e34-8128-41cb-ad73-17250758ff23</processid></stage><stage stageid="09b432b9-8774-440c-8468-a5effa8bfe98" name="Exit" type="SubSheetInfo"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><narrative>Here for backward compatibility - exits the current instance of Excel without saving any changes.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4f9b1c2f-8b07-4ff1-95bc-12d1de8ec1a8" name="Start" type="Start"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc97b188-f45e-46f4-a66e-f592917cabb1</onsuccess></stage><stage stageid="c6c7615b-e18b-42aa-9e83-88884e01e23b" name="End" type="End"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fc97b188-f45e-46f4-a66e-f592917cabb1" name="Close Instance" type="SubSheet"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="flag" name="Save Changes" expr="False" /></inputs><onsuccess>c6c7615b-e18b-42aa-9e83-88884e01e23b</onsuccess><processid>6ec3006a-6553-4526-b522-32526c4aa3cc</processid></stage><stage stageid="f441e8a4-9990-4a87-a011-cb9f6c56a3f3" name="Save Current Workbook" type="SubSheetInfo"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><narrative>Saves the current workbook using the workbook name as the file name.
This is the equivalent of calling the Save Workbook action with the default values for 'handle' (0) and 'Workbook Name' ("")

Exceptions: 
- Bad Handle : If there is no active instance.
- Workbook Not Found : If there is no active workbook on the instance.</narrative><display x="-270" y="-90" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ed1db4c8-9563-4f9f-9606-a26b934a1db5" name="Start" type="Start"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0d75fe69-c13e-4536-a444-0f915cb6844a</onsuccess></stage><stage stageid="097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e" name="End" type="End"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d75fe69-c13e-4536-a444-0f915cb6844a" name="Save Workbook" type="SubSheet"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /></inputs><onsuccess>097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="4e15b86d-9a5b-40ce-babe-c9fb02cf8764" name="createifmissing" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dabb4d29-516f-442c-b2da-32cc45ae4df3" name="Get Worksheet As Collection (Fast)" type="SubSheetInfo"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><narrative>Here for back-compatability. Should be considered deprecated and calls should be replaced by "Get Worksheet As Collection", but right now this gets the active worksheet on the active workbook in the current instance of Excel into a collection. It is the equivalent of calling GetWorksheet As Collection with all the default input values.

Output:
Data : Collection : The active sheet's data in a collection.</narrative><display x="-300" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c9ce0be6-6a88-4147-aeb3-e8974bb74970" name="Start" type="Start"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a3308402-1446-47b9-9e40-cc105a30db14</onsuccess></stage><stage stageid="aa04eeb6-e87c-4392-b7d2-52e4eb0b28af" name="End" type="End"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="98e74d10-88b7-40dd-b771-0a137c8d0665" name="worksheetcollection" type="Collection"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><display x="-210" y="-15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a3308402-1446-47b9-9e40-cc105a30db14" name="Get Worksheet As Collection" type="SubSheet"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Worksheet Name" expr="&quot;&quot;" /><input type="text" name="Fetch Data With Method" expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs><onsuccess>aa04eeb6-e87c-4392-b7d2-52e4eb0b28af</onsuccess><processid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</processid></stage><stage stageid="078c6299-d93e-41b7-9a05-e26f0436b301" name="Format Cell" type="SubSheetInfo"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><narrative>Sets the number format at the given cell to that specified.
Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="584cad36-fa91-4f11-83b7-4829f89f9a35" name="Start" type="Start"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." stage="cellref" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>6ed5e96a-3604-426e-b112-0be4f4f4b9a8</onsuccess></stage><stage stageid="59f040b8-35ab-48a1-8321-ab6d321172f4" name="cellref" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1867e11e-a153-4421-9512-848674ac9bea" name="format" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f19aada3-d5b7-49ca-8f65-824a0be6abea" name="handle" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bc1c92c3-d8fd-4e00-86eb-cf22a3331a93" name="Format Current Cell" type="SubSheetInfo"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><narrative>Sets a cell format for the currently active cell.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fea1a9b-6cad-487c-a1d4-0b7a31c0b1e6" name="Start" type="Start"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>a8dd2eb1-5144-4f87-b5fc-87dc562df875</onsuccess></stage><stage stageid="936f31ef-fa8e-4960-aa8a-1653cc6d7de2" name="Get Active Cell" type="SubSheetInfo"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><narrative>Gets a reference to the currently active cell on the given instance.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4a8f71f-cdb8-4091-99f6-f127fb3ec48d" name="Start" type="Start"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>0f68d429-d637-41bc-ab1c-3890e4e57da6</onsuccess></stage><stage stageid="de4f91e6-efde-42cd-9efa-700811c74c15" name="End" type="End"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs></stage><stage stageid="3251089f-0682-4cd7-84d1-78fd6a3f68db" name="handle" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a88df339-9204-419b-9dd7-4553548f1dff" name="cellref" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f68d429-d637-41bc-ab1c-3890e4e57da6" name="CheckInstanceHandle" type="SubSheet"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>0749822c-e521-461c-a3cc-23f5a695980b</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="0749822c-e521-461c-a3cc-23f5a695980b" name="GetActiveCell" type="Code"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>de4f91e6-efde-42cd-9efa-700811c74c15</onsuccess><code><![CDATA[
cellref = GetInstance(handle).ActiveCell.Address(False,False)]]></code></stage><stage stageid="035e5e46-b65c-4bb5-8684-b433aa67ec7b" name="activatecell" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a47f3c07-957d-4909-bc43-4c56e5f58ae6" name="Activate Cell?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[activatecell]" /><ontrue>e17eb74e-6764-4980-a96c-dd500de13181</ontrue><onfalse>65e26d12-b37e-4df9-a00b-07340967e5b2</onfalse></stage><stage stageid="e17eb74e-6764-4980-a96c-dd500de13181" name="Go To Cell" type="SubSheet"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>23c196fc-bba5-4cc0-8e36-c8d6db96e360</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="23c196fc-bba5-4cc0-8e36-c8d6db96e360" name="anchor2" type="Anchor"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>65e26d12-b37e-4df9-a00b-07340967e5b2</onsuccess></stage><stage stageid="5c445c44-609a-45b3-8c4a-ff4a670213df" name="Go To Next Empty Cell Left" type="SubSheetInfo"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><narrative>Activates the next empty cell that can be found on the left of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="75944053-c0d7-42b9-9231-b173e13066f5" name="Start" type="Start"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>10b0cef9-77af-42e0-b42e-6fc1870587a4</onsuccess></stage><stage stageid="63d50db2-a5f9-48a9-ae16-9a801712b53c" name="End" type="End"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="10b0cef9-77af-42e0-b42e-6fc1870587a4" name="Find Next Empty Cell" type="SubSheet"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;L&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>63d50db2-a5f9-48a9-ae16-9a801712b53c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="f6b88b10-a188-436b-830e-b7eaf783495c" name="handle" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6b1312d6-de01-4272-b3cd-765b4835a9f2" name="cellref" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ffa60dc-058f-4edc-9140-a43050494dee" name="Go To Next Empty Cell Right" type="SubSheetInfo"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><narrative>Activates the next empty cell that can be found on the right of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78bf9f71-b3ba-4ef3-8142-08be21698287" name="Go To Next Empty Cell Up" type="SubSheetInfo"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><narrative>Activates the next empty cell that can be found above the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0a069347-2e66-4668-ab57-b59e6536c5d0" name="Go To Next Empty Cell Down" type="SubSheetInfo"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><narrative>Activates the next empty cell that can be found below the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3b21101-6815-4f78-b7af-06f0a73a4070" name="Start" type="Start"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>782731b8-b7fb-4bec-8b35-b0438a5d8cec</onsuccess></stage><stage stageid="650fc617-bcbd-4d39-b835-748d94773ec6" name="End" type="End"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="782731b8-b7fb-4bec-8b35-b0438a5d8cec" name="Find Next Empty Cell" type="SubSheet"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;R&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>650fc617-bcbd-4d39-b835-748d94773ec6</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="56afae5f-81d8-4fdc-b521-cb4b99fac5c3" name="handle" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="347d2c28-0ea0-4ed0-95ce-14e5925f7193" name="cellref" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4636685a-21dc-420d-ae4b-e435f9861298" name="Start" type="Start"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>c01227ef-86b5-48c4-8cbc-6db80b1df2c6</onsuccess></stage><stage stageid="c7e480b2-caf7-430d-b419-49c70c452c4f" name="End" type="End"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="c01227ef-86b5-48c4-8cbc-6db80b1df2c6" name="Find Next Empty Cell" type="SubSheet"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;U&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>c7e480b2-caf7-430d-b419-49c70c452c4f</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="2d6e7e4e-d6f5-45b7-b4ae-33658d6d38fd" name="handle" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="287aee08-8696-49f9-b659-244e88067d0a" name="cellref" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4791458d-f683-4adf-ad1c-1591b3d2fab2" name="Start" type="Start"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>072dae62-8d0d-4522-904c-6d253988874d</onsuccess></stage><stage stageid="b90c78f9-6a37-4db4-b30f-ac96d30c730c" name="End" type="End"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="072dae62-8d0d-4522-904c-6d253988874d" name="Find Next Empty Cell" type="SubSheet"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;D&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>b90c78f9-6a37-4db4-b30f-ac96d30c730c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="c9e817ca-81d1-4d65-b9d1-27fe80445871" name="handle" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f9a80c2-fd03-43e2-a333-5f2c6b7ad0e2" name="cellref" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="febdcc05-5a8a-4445-a188-d0259dfd21a5" name="handle" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3" name="End" type="End"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="111cd676-ae8c-4b83-9bb1-5567fe0735bd" name="FormatCell" type="Code"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="format" expr="[format]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3</onsuccess><code><![CDATA[
GetWorkbook(handle,Nothing).ActiveSheet.Range(cellref,cellref).NumberFormat = format]]></code></stage><stage stageid="6ed5e96a-3604-426e-b112-0be4f4f4b9a8" name="Activate Workbook" type="SubSheet"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>111cd676-ae8c-4b83-9bb1-5567fe0735bd</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="a8dd2eb1-5144-4f87-b5fc-87dc562df875" name="Get Active Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs><onsuccess>22a903ea-24b0-4f4b-ad3d-590aa6ab3d97</onsuccess><processid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</processid></stage><stage stageid="8480e1e0-5e73-4bec-bc84-ab2b4a5f43fa" name="cellref" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22a903ea-24b0-4f4b-ad3d-590aa6ab3d97" name="Format Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." expr="[cellref]" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" expr="[format]" /></inputs><onsuccess>2776814b-74bd-42b3-b282-80a156b933cd</onsuccess><processid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</processid></stage><stage stageid="dc6c799a-7fa3-4623-9bf8-e966d530b67d" name="format" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2776814b-74bd-42b3-b282-80a156b933cd" name="End3" type="End"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04fbbbb0-aba9-4518-8bc7-d26273986f9e" name="Set Window Size" type="SubSheetInfo"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><narrative>Sets the window size of the specified instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7a197c45-c253-4fb8-bed5-e01508e93824" name="Start" type="Start"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle specifying the instance on which the bounds should be changed." stage="handle" /><input type="number" name="Width" narrative="The width to which the instance's window should be set" stage="width" /><input type="number" name="Height" narrative="The height to which the instance's window should be set." stage="height" /></inputs><onsuccess>3d73ff94-84e6-4e12-947e-76d14884579c</onsuccess></stage><stage stageid="a952606a-38e1-4585-821a-7395c94d70cb" name="End" type="End"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4c82574-5577-49e8-80a8-79a27ace5ffb" name="Set Window Location" type="SubSheetInfo"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><narrative>Moves the specified instance's window to the required location.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="67ee4120-06af-41a6-ae0a-629e1bd3bd05" name="Start" type="Start"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window location should be set." stage="handle" /><input type="number" name="X" narrative="The x co-ordinate to which the window should be moved." stage="x" /><input type="number" name="Y" narrative="The y co-ordinate to which the window should be moved." stage="y" /></inputs><onsuccess>3f663a38-1c01-438f-a02a-aa56ded74764</onsuccess></stage><stage stageid="5b24c512-8930-4c34-9083-7834083ab65c" name="End" type="End"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="129fe5f1-311c-4b58-964f-74b62d5f17ad" name="Set Window State" type="SubSheetInfo"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><narrative>Minimizes / maximizes / restores the window attached to the specified excel instance.

Exceptions:
Invalid Input Parameter : If the given state was not "normal" and did not start with either "min" or "max"</narrative><display x="-240" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="44e95a42-ad61-4e8d-af8a-aed037662ba8" name="Go To Next Cell" type="SubSheetInfo"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><narrative>Moves a specified number of rows and columns from the currently active cell and returns the new cell reference.
If the resultant cell reference is the same as the active cell before this action was called, this action has 'failed'. This is usually because the active cell is too close to a boundary.</narrative><display x="-330" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a87664dd-017d-4b12-b9c3-7230d7910326" name="Start" type="Start"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows" narrative="The number of rows to navigate down. A negative value indicates that the action should navigate UP the required number of rows." stage="rows" /><input type="number" name="Columns" narrative="The number of columns to navigate to the right. A negative value indicates that the action should navigate to the left." stage="cols" /></inputs><onsuccess>fdbdccce-2959-40cb-b4b4-d53556dd97a1</onsuccess></stage><stage stageid="dcae25b1-7e8b-4ee2-9ffc-11aacd935154" name="Close Current Workbook" type="SubSheetInfo"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><narrative>Closes the current workbook on the current excel instance.
This is the equivalent of calling the 'Close Workbook' action with the default values for 'handle' (0) and 'Workbook Name' ("")</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8fccb8ba-397f-406d-a6cd-85cb3c09ba17" name="Start" type="Start"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5</onsuccess></stage><stage stageid="160a79e4-be77-47f7-b8f2-271a170a762f" name="End" type="End"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5" name="Close Workbook" type="SubSheet"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="flag" name="Save Data" expr="False" /></inputs><onsuccess>160a79e4-be77-47f7-b8f2-271a170a762f</onsuccess><processid>6ccaae8b-c06f-45c8-8772-835218881458</processid></stage><stage stageid="a9a3eac3-7c04-4983-9224-bbf490c75af1" name="handle" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="00fbd16c-c443-4d2e-ae2a-4539f816c297" name="rows" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fa354e6-61e2-452d-b0c4-208150e9076d" name="cols" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50344da8-13a3-4d20-899b-bfd3b5507681" name="End" type="End"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the currently active cell after navigating the required number of rows / columns. If the action could not navigate the desired number of rows / columns (eg. the active cell is near a boundary), then the active cell will not have been change, and this cell reference will represent the same cell that was active before this action was initiated." stage="cellref" /></outputs></stage><stage stageid="30a3c6c6-5324-4fe2-a0b2-3026f1a5e379" name="GoToNextCell" type="Code"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="cols" expr="[cols]" /><input type="number" name="rows" expr="[rows]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>50344da8-13a3-4d20-899b-bfd3b5507681</onsuccess><code><![CDATA[
Dim Instance As Object = GetInstance(handle)

If Instance.ActiveCell Is Nothing Then
	Dim wb As Object = Instance.ActiveWorkBook 
	If wb IsNot Nothing Then
		Dim ws As Object = wb.ActiveSheet
		If ws IsNot Nothing Then
			ws.Range(1,1).Activate()
		Else
			Throw New Exception("There is no active worksheet")
		End If
	Else
		Throw New Exception("There is no active workbook")
	End If
Else
	Try
		Instance.ActiveCell.Offset(rows,cols).Activate()
	Catch ex As Exception
	End Try
End If
cellref = Instance.ActiveCell.Address(False,False)
]]></code></stage><stage stageid="fdbdccce-2959-40cb-b4b4-d53556dd97a1" name="Activate Workbook" type="SubSheet"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>30a3c6c6-5324-4fe2-a0b2-3026f1a5e379</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="5742c4d1-0b40-4dd9-8cf0-e66b9adeab4b" name="handle" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="437bf59c-d85b-45c9-8828-2e2c665afd10" name="cellref" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="105" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc5149d8-0c99-413a-81c8-ba9efc719cdc" name="handle" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a87fd94f-f26f-4c2e-bb67-1ae4c0bed939" name="width" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59a65ce5-cfb1-4190-8449-e4fb5ced121a" name="height" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d73ff94-84e6-4e12-947e-76d14884579c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>82380eea-db5c-47b3-9a94-2e19338cca95</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="82380eea-db5c-47b3-9a94-2e19338cca95" name="SetWindowSize" type="Code"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="height" expr="[height]" /><input type="number" name="width" expr="[width]" /></inputs><onsuccess>a952606a-38e1-4585-821a-7395c94d70cb</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Width = width
excel.Height = height]]></code></stage><stage stageid="8acfecd0-d6d9-4de0-ae9e-46922ed73111" name="x" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68bc93f-161f-4d6f-825d-2d961690ca56" name="y" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="079ee65b-a90b-4ab6-81b5-801557c07fbf" name="handle" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3f663a38-1c01-438f-a02a-aa56ded74764" name="CheckInstanceHandle" type="SubSheet"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>12d30538-38bf-4f9b-a180-41d0b836854c</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="12d30538-38bf-4f9b-a180-41d0b836854c" name="SetWindowLocation" type="Code"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="x" expr="[x]" /><input type="number" name="y" expr="[y]" /></inputs><onsuccess>5b24c512-8930-4c34-9083-7834083ab65c</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Left = x
excel.Top = y]]></code></stage><stage stageid="016d76a7-6a95-485e-84f5-faa85a0c0712" name="Start" type="Start"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window state should be set." stage="handle" /><input type="text" name="State" narrative="The state of the window which is required. Should start with &quot;min&quot; (to minimize the window), &quot;max&quot; (to maximise the window) or it should equal &quot;normal&quot; (to restore the window). Anything else will result in an error." stage="state" /></inputs><onsuccess>0f8fc913-9174-4304-823f-d18ffae7217a</onsuccess></stage><stage stageid="ffe49fc1-13a2-4e84-a649-bd692ef7752a" name="End" type="End"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca7b06cd-e6e3-42e1-8980-cb429796aa3b" name="handle" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3db578f3-47a7-4150-9ccc-6f9a16dbe73f" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>458615b7-ea0b-4d96-9dce-87099d6e5950</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="458615b7-ea0b-4d96-9dce-87099d6e5950" name="SetWindowState" type="Code"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="state" expr="[state]" /></inputs><onsuccess>ffe49fc1-13a2-4e84-a649-bd692ef7752a</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

If state.ToLower().StartsWith("min") Then
	excel.WindowState = -4140
ElseIf state.ToLower().StartsWith("max") Then
	excel.WindowState = -4137
ElseIf state.ToLower() = "normal" Then
	excel.WindowState = -4143
End If]]></code></stage><stage stageid="4686174e-a845-4f2b-9a0a-70325a2df399" name="Valid State?" type="Decision"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><narrative>Checks if the given state is a valid value</narrative><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="StartsWith([state],&quot;max&quot;) or StartsWith([state],&quot;min&quot;) or [state]=&quot;normal&quot;" /><ontrue>3db578f3-47a7-4150-9ccc-6f9a16dbe73f</ontrue><onfalse>c0e54c49-a9fc-48c4-a54e-2b85581d4ba5</onfalse></stage><stage stageid="1537f595-55fc-4726-910a-1d5ef88bf7a4" name="state" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0e54c49-a9fc-48c4-a54e-2b85581d4ba5" name="Invalid State Exception" type="Exception"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="135" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Input Parameter" detail="&quot;Invalid Window State Parameter : &quot; &amp; [state] &amp; &quot; - must start with 'min', 'max' or equal 'normal'&quot;" /></stage><stage stageid="9d0e19ce-07b8-4074-a34c-6186bcd3ca77" name="newworkbookname" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04e9d703-4b1c-4196-b1ff-7bf68a12faae" name="newworkbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>The new workbook name assigned by Excel after saving the book</narrative><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ab01750-1bb3-4299-add0-8a1d08f6bf41" name="handle" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f778bc6c-8cdd-4e56-80b8-b7cdb1fd11ae" name="Release Instance" type="SubSheetInfo"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><narrative>Removes an instance from this business object *without* closing or quitting it - after running this action, the instance in question will not be accessible by this object unless it is re-attached to using 'Open Instance'.

Params:
- handle : Number : The handle of the instance to be released. The default of 0 indicates the currently active instance. Note that following the current instance being released, the current instance will not be set.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-135" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66fece2a-2c82-48bb-92fe-211ee6556a24" name="Start" type="Start"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be released. The default value of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1d0738a9-7841-446d-b3ed-1a4bafeccc1b</onsuccess></stage><stage stageid="dc556131-4dde-459f-9af8-8c854fcae760" name="End" type="End"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6da262c1-9a82-4bc8-9363-ede171f125e5" name="handle" type="Data"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><display x="-225" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1d0738a9-7841-446d-b3ed-1a4bafeccc1b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>2e67a2b9-10bf-4d4d-9bd9-db68edaf7662</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2e67a2b9-10bf-4d4d-9bd9-db68edaf7662" name="Release Instance" type="Code"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>dc556131-4dde-459f-9af8-8c854fcae760</onsuccess><code><![CDATA[
	Dim current as Object = CurrentInstance
	Dim inst as Object = GetInstance(handle) ' Careful - sets the 'current instance' to inst

	HandleMap.Remove(handle)
	InstanceMap.Remove(inst)

	If Object.ReferenceEquals(inst, current) Then
		CurrentInstance = Nothing
	Else
		CurrentInstance = current
	End If
]]></code></stage><stage stageid="0f04ef58-eacb-4204-ba2b-d073285c2be8" name="Note1" type="Note"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="150" y="-120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f0ee2a73-65b2-418e-8b77-6dc802046c5d" name="Attach" type="SubSheetInfo"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><narrative>Back-compatible link to 'Open Instance'. This opens the first running instance of Excel found and links to it in this object.

Returns:
- handle : Number : An integer with which the instance opened can be identified.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True</narrative><display x="-210" y="-120" w="240" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="92e3475b-ed7d-4ae1-940c-7eb554a7cea8" name="Start" type="Start"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>ba67509b-7301-4ce1-a467-e9970249b392</onsuccess></stage><stage stageid="c74db74c-8822-4391-8593-d9919e357a5b" name="End" type="End"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle which identifies the excel instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="f68ab231-3cbb-423e-84de-9103b9f971f4" name="handle" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba67509b-7301-4ce1-a467-e9970249b392" name="Open Instance" type="SubSheet"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="&quot;&quot;" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>c74db74c-8822-4391-8593-d9919e357a5b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="fa5aede4-db23-4781-8954-3baaf0fd0740" name="Attach to workbook" type="SubSheetInfo"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><narrative>Back compatible link to 'Open instance' - attaches to the excel instance containing the current workbook. Note that if the instance containing the workbook could not be found, a new instance will be created.

Params:
- File name : Text : The name of the file in the instance that should be opened.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
Returns:
- handle : Number : The integer that can be used to reference this instance later.</narrative><display x="-195" y="-135" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="431ac081-4d84-414a-80dd-cb137dd67a73" name="Start" type="Start"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="60" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File name" narrative="The name of the file which should be opened" stage="filename" /><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>4a719c51-85b9-4750-9593-bf0e3166edfc</onsuccess></stage><stage stageid="ba3c2775-b5ac-44a8-be6b-05befaea619b" name="End" type="End"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle indentifying the instance opened. This can be used in subsequent actions to identify the instance." stage="handle" /></outputs></stage><stage stageid="0283fb0e-8dda-4956-b434-ea1d6c99e063" name="handle" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a719c51-85b9-4750-9593-bf0e3166edfc" name="Open Instance" type="SubSheet"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="[filename]" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>ba3c2775-b5ac-44a8-be6b-05befaea619b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="c99c412d-dbb6-4a6a-a7e2-9834a74052d0" name="filename" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a734ecf-7e58-4aa4-b7ff-5aa4494ec687" name="cellref empty?" type="Decision"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>bed65abf-b1ad-4f7e-83be-c8a96e3ea162</ontrue><onfalse>39135f99-dd54-4a2b-bff2-555714753a6d</onfalse></stage><stage stageid="bed65abf-b1ad-4f7e-83be-c8a96e3ea162" name="anchor3" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b98f8e72-e995-42a4-b3f9-df0acf2a5944</onsuccess></stage><stage stageid="b98f8e72-e995-42a4-b3f9-df0acf2a5944" name="anchor4" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess></stage><stage stageid="250bb1db-ca8e-4edb-b9a4-52fa39261823" name="Go To Cell" type="SubSheet"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="29427d7f-a2d9-4b65-b6c4-773881bd285d" name="cellref empty?" type="Decision"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>e743b184-cb2f-43cb-83c1-b99654286d3d</ontrue><onfalse>250bb1db-ca8e-4edb-b9a4-52fa39261823</onfalse></stage><stage stageid="e743b184-cb2f-43cb-83c1-b99654286d3d" name="anchor3" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dea637ce-5933-4805-94a4-f2bbd9b99d0b</onsuccess></stage><stage stageid="dea637ce-5933-4805-94a4-f2bbd9b99d0b" name="anchor4" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess></stage><stage stageid="bcf597f1-97f7-449c-8865-ff8ca139dd6c" name="Get Active Cell Value" type="SubSheetInfo"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><narrative>Gets the value of the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b69207e1-2811-4150-a61f-4746ef8489d4" name="Start" type="Start"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell whose value is required resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>af8aab5e-4539-4acc-a5cc-1bd632282587</onsuccess></stage><stage stageid="73e8408e-ff97-4d9f-b0e0-5a0e844b731c" name="End" type="End"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value found at the specified cell." stage="Value" /></outputs></stage><stage stageid="af8aab5e-4539-4acc-a5cc-1bd632282587" name="Get Active Cell Value" type="SubSheet"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;&quot;" /></inputs><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>73e8408e-ff97-4d9f-b0e0-5a0e844b731c</onsuccess><processid>0e031661-2f5e-4cb2-949b-97babe59ff81</processid></stage><stage stageid="88d7196d-2443-4439-8261-6700e9673d0a" name="handle" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e4cdc61b-a1e1-461e-8d91-a98cd40a2c5a" name="Value" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69cd13bc-f818-4a5b-be64-b6fb7de62c61" name="Create Worksheet" type="SubSheetInfo"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><narrative>Creates a new worksheet in the specified workbook with the given name. If a sheet with the given name already exists, this will activate that sheet.

Params:
- handle : Number : The number identifying the instance required.
- Workbook Name : Text : The name of the workbook to add it to. An empty string (the default) indicates the active workbook in the instance.
- Worksheet Name : Text : The name of the worksheet that is required. Note that if the name matches a worksheet already in the workbook a new worksheet will not be created, but that worksheet will be activated.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a0c385f-fe76-4eb3-a36f-4936eb7ac84a" name="Start" type="Start"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /></inputs><onsuccess>89240340-492e-44ab-9fed-c64a6d3fffdf</onsuccess></stage><stage stageid="5d624e42-813e-467d-bda1-ebb3e410045c" name="End" type="End"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="89240340-492e-44ab-9fed-c64a6d3fffdf" name="Activate Worksheet" type="SubSheet"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /><input type="flag" name="Create If Missing?" expr="True" /><input type="text" name="Worksheet Name" expr="[worksheetname]" /></inputs><onsuccess>5d624e42-813e-467d-bda1-ebb3e410045c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="ab7509fd-0572-44d9-9050-b9c9907c49ac" name="handle" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="544db1ef-b84c-403c-b4ee-de2d660ec253" name="worksheetname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df17296d-4f63-46cf-bcd9-4acd7eefed34" name="workbookname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64089c9a-4a30-4db5-bf87-7ba017ba54e7" name="Write Collection" type="SubSheetInfo"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a1ab274b-c2fb-47c7-94f8-292590df5765" name="Start" type="Start"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>a3a318c6-e218-4e78-a818-1673f90541b3</onsuccess></stage><stage stageid="8819df51-0132-421d-baae-b24b5082f131" name="End" type="End"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="85afbd6d-2c6e-42f8-8e71-7858a8488167" name="handle" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc024959-b016-4b16-93a8-e230e4ab936d" name="collection" type="Collection"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71e25266-b464-4b47-b6a7-c8a70cff7514" name="worksheetname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5f2a253-bee4-4ee0-9d8c-ab780265b5db" name="workbookname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c5b0c8-0c25-4972-b9c8-6057e6841ce5" name="includecolnames" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3a318c6-e218-4e78-a818-1673f90541b3" name="Activate Worksheet" type="SubSheet"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>f2ebff4d-5325-45e8-945d-73006f5bd7ce</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="f2ebff4d-5325-45e8-945d-73006f5bd7ce" name="WriteColl" type="Code"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><onsuccess>8819df51-0132-421d-baae-b24b5082f131</onsuccess><code><![CDATA[' Get to the cell
Dim ws As Object = GetWorksheet(handle, workbookname, worksheetname)
Dim origin As Object = ws.Range(cellref, cellref)
Dim cell As Object = origin

Dim colInd As Integer = 0, rowInd As Integer = 0 ' Offsets from the origin cell

' Deal with the column names first
If includecolnames Then
	For Each col As DataColumn In Collection.Columns
		Try
			cell = origin.Offset(rowInd, colInd)
		Catch ex As Exception ' Hit the edge.
			Exit For
		End Try
		SetProperty(cell, "Value", col.ColumnName)
		colInd += 1
	Next
	rowInd += 1
End If

' Now for the data itself
For Each row As DataRow In Collection.Rows
	colInd = 0
	For Each col As DataColumn In Collection.Columns
		Try
			cell = origin.Offset(rowInd, colInd)
		Catch ex As Exception ' Hit the edge.
			Exit For
		End Try
		'MessageBox.Show("RowOffset:" & rowInd & "; ColOffset:" & colInd & "; cell: " & cell.Address(False,False))
		SetProperty(cell, "Value", row(col))
		colInd += 1
	Next
	rowInd += 1
Next]]></code></stage><stage stageid="fb353c57-7a8c-4ccb-9428-94761a643715" name="cellref" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add1def4-fc64-4534-bbb0-d3ac07611a85" name="anchor5" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>108c176a-92d1-4f50-b460-ac6a3f0dac25</onsuccess></stage><stage stageid="51d7d624-e8bf-42b7-afdd-8d090b584865" name="anchor6" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess></stage><stage stageid="4be7292e-9eb1-43f7-9e87-3ae906bd79ed" name="savechanges" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0f8fc913-9174-4304-823f-d18ffae7217a" name="state = Lower(state)" type="Calculation"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4686174e-a845-4f2b-9a0a-70325a2df399</onsuccess><calculation expression="Lower([state])" stage="state" /></stage><stage stageid="27e7ff80-4437-42a3-ba14-e499be5bc0e5" name="sheetexists" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-240" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a854b87-0e5a-46dd-8181-a58f97555aa8" name="Sheet Existed?" type="Decision"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>ddfe7f54-b5c2-410a-8a5d-3c2b52de9550</ontrue><onfalse>9bc52652-698b-46ca-ba0d-ebb170432963</onfalse></stage><stage stageid="9bc52652-698b-46ca-ba0d-ebb170432963" name="No Such Sheet" type="Exception"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b396c564-6c31-4c6f-be0a-0cc64f178a19" name="sheetexisted" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c2259b-9d71-4364-bede-79b4af1e3e96" name="Sheet Existed?" type="Decision"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexisted]" /><ontrue>6b35d569-0eb2-4c01-bb88-e5f7c41bde81</ontrue><onfalse>091e0364-11db-49d4-8e94-8f5f9396fa9c</onfalse></stage><stage stageid="091e0364-11db-49d4-8e94-8f5f9396fa9c" name="No Such Sheet" type="Exception"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="150" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b6d0da26-0322-4b43-b1d5-304466ff29fb" name="Sheet Exists?" type="Decision"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>cf5b0880-2cac-4221-946a-e4e3d7f0bc99</ontrue><onfalse>7e8fce63-9130-4c0f-baea-ea8be793c57d</onfalse></stage><stage stageid="7e8fce63-9130-4c0f-baea-ea8be793c57d" name="No Such Sheet" type="Exception"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="286f9733-2a26-4c00-a7ff-7ac289086919" name="sheetexists" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cb56c9a-aa29-4ed4-84e1-9a65976ba50f" name="Does sheet exist?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>859597f9-d048-46a3-bf99-2f3f6588c2c5</ontrue><onfalse>2b8672dd-8330-4c2d-a522-9f12c9e27ba2</onfalse></stage><stage stageid="2b8672dd-8330-4c2d-a522-9f12c9e27ba2" name="No Such Sheet" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="c50f1065-0989-47f5-aad4-c66396e462e0" name="sheetexists" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b64b13-62f8-4431-94c4-62b7ff1f1c2c" name="Get Worksheet as Collection Offset" type="SubSheetInfo"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The offset function allows a starting cell to be specified.</narrative><display x="-330" y="-705" w="210" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="164e0a2b-6c31-48ce-8172-7fb4edd3dbb3" name="End" type="End"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-480" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="0b6697a7-4aa1-4ec1-86db-bc41f3ca9d5e" name="handle" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-330" y="-600" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c25e33f-7af9-4998-8c1a-4029c0e2af9e" name="workbookname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-330" y="-555" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee01090-4b0b-4e85-9643-1f3b40d182e2" name="Start" type="Start"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-705" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="flag" name="Use Header" narrative="This flag states if the excel collection uses a header, or not." stage="Use Header" /></inputs><onsuccess>8f50a819-e470-4c0e-97d5-08bd0f705682</onsuccess></stage><stage stageid="a755a822-d485-45ea-8d7d-426646b4aec0" name="GetWorksheetAsCollectionOffset" type="Code"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-585" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>164e0a2b-6c31-48ce-8172-7fb4edd3dbb3</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet( _
	 handle, workbookname, worksheetname)
	ws.Activate()

	Dim cell as Object = ws.Range(Start_Cell)
	Dim r as Object = _
	 ws.UsedRange.Offset(cell.row-1,cell.column-1)
	r.Select()
	r.Copy()

	Dim data As String = GetClipboardText()
	
	worksheetCollection = ParseDelimSeparatedVariables( _
	 data, vbTab, Nothing, Use_Header)
]]></code></stage><stage stageid="8f50a819-e470-4c0e-97d5-08bd0f705682" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-645" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a755a822-d485-45ea-8d7d-426646b4aec0</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="f82cf955-6669-494b-b6a1-866974c7cc74" name="worksheetname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-330" y="-510" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b329ff1-b62a-41eb-9503-6673f300eb68" name="worksheetcollection" type="Collection"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="90" y="-600" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4b3c3e-515f-4ee7-9e70-5c76c0fb3044" name="Set Events Enabled" type="SubSheetInfo"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><narrative>Enables or disables the events on the specified excel instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb955f7e-320d-42d1-8dad-26b8f55d083b" name="Start" type="Start"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." stage="handle" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" stage="Enable Events" /></inputs><onsuccess>68483479-6865-4fd5-9a77-f4392c4ade9e</onsuccess></stage><stage stageid="3969dd45-fdea-4671-879e-461a56f312be" name="End" type="End"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="68483479-6865-4fd5-9a77-f4392c4ade9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>21682417-b503-44b4-92f2-a3c80b4fad14</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="45553fd7-b75b-4fee-8961-aff490d121b3" name="Enable Events" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21682417-b503-44b4-92f2-a3c80b4fad14" name="Enable Events" type="Code"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="enable" expr="[Enable Events]" /></inputs><onsuccess>3969dd45-fdea-4671-879e-461a56f312be</onsuccess><code><![CDATA[
GetInstance(handle).EnableEvents = enable]]></code></stage><stage stageid="3fd7c1fd-f40f-451d-885e-3f5e34c62b77" name="handle" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb99ca56-7dc9-4a0d-860e-651747237d8f" name="Enable Events" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="7fb1ba2f-64f1-417b-9b97-479efb954a9d" name="anchor8" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess></stage><stage stageid="108c176a-92d1-4f50-b460-ac6a3f0dac25" name="Enable/Disable Events" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>754832af-1144-48ff-8ab0-bb6c86d3f78e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="17b0edcc-4892-4e42-93c9-9438a160ed66" name="Enable Events" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e24f71a3-1760-49ce-bbcb-4750671f20ad" name="Enable Events" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9773e311-bcc9-4426-999e-7c586da425c5" name="Enable Events" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a13edde2-3883-4007-9719-92f0e1009ddd" name="Set Events Enabled" type="SubSheet"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>d337a2cf-1121-4619-a1b1-f7f19bea974e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="7c3abf99-a3ae-44c2-b834-ad050b20a0eb" name="Enable Events" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6c2fa22d-1876-46b7-92eb-cf8343d0911f" name="Set Events Enabled" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>18a306bf-d323-4c4e-83b5-4b226773161c</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="e13408b2-c348-4d32-9ca3-e878db7cd165" name="Start Cell" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-45" y="-705" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614b5c49-3b88-427a-9513-c3048d8b716d" name="Get Worksheet Names" type="SubSheetInfo"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><narrative>Gets the name of the worksheets.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef85b34d-5145-4f90-96a4-0f1abc4c4889" name="End" type="End"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs></stage><stage stageid="7e4ae954-86d5-4183-88b2-d307fecfc6a9" name="Start" type="Start"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook." stage="workbookname" /></inputs><onsuccess>9bc4bc33-6a3a-43e0-86e0-7b209978508a</onsuccess></stage><stage stageid="9bc4bc33-6a3a-43e0-86e0-7b209978508a" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>bbd37070-c589-4f9c-8d03-11f2982c59f4</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="bbd37070-c589-4f9c-8d03-11f2982c59f4" name="Get Worksheets" type="Code"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" stage="Worksheet Names" /></outputs><onsuccess>ef85b34d-5145-4f90-96a4-0f1abc4c4889</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(Handle, WorkbookName)
Dim sheets as Object = wb.Sheets

Worksheet_Names = New DataTable()
Worksheet_Names.Columns.Add("Name", GetType(String))

If sheets IsNot Nothing Then
	For Each sheet as Object in sheets
		Worksheet_Names.Rows.Add(New Object() {sheet.Name})
	Next
End If]]></code></stage><stage stageid="cff86abf-c0f2-493d-942f-759ce2830ff8" name="handle" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d53720-b610-4e5c-bf49-94cbcaf29e20" name="workbookname" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd45f86-2f78-4a96-8e74-62414e4094e7" name="Worksheet Names" type="Collection"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="255" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9d637f02-8e13-4c65-a606-5756018a9e8c" name="Worksheet Exists" type="SubSheetInfo"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><narrative>Checks if a worksheet exists in a workbook.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54725352-a686-4ebc-88d8-80fa81af39bc" name="End" type="End"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs></stage><stage stageid="4cd78f5f-29a7-4f71-ab51-5c93e2e50ba3" name="Start" type="Start"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet Name" /></inputs><onsuccess>b4bad8df-ac04-4c0f-88cf-21bd3dc6707a</onsuccess></stage><stage stageid="4126c650-c062-413d-b6b3-501c8743b400" name="handle" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a19213a7-dbb4-4a78-b929-7c0ec2f48fa7" name="workbookname" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4bad8df-ac04-4c0f-88cf-21bd3dc6707a" name="Get Worksheet Names" type="SubSheet"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs><onsuccess>3124d4f1-6d19-450e-8d71-01e6c2cac8d9</onsuccess><processid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</processid></stage><stage stageid="920cf97d-74a9-441c-9e2b-2c47c023ac33" name="Worksheet Names" type="Collection"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="255" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3124d4f1-6d19-450e-8d71-01e6c2cac8d9" name="For Each Name" type="LoopStart"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0e40b339-b952-445b-a957-6d2d0a1bdbac</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid><looptype>ForEach</looptype><loopdata>Worksheet Names</loopdata></stage><stage stageid="27d57e09-d2fa-496d-a5c6-d382be881ad1" name="Next" type="LoopEnd"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aea2b1ba-e24b-4929-a0be-bc2ad811f277</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid></stage><stage stageid="4198f8b9-1418-4bbc-a984-4049f1b78df6" name="Worksheet Name" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="180" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e40b339-b952-445b-a957-6d2d0a1bdbac" name="Matches?" type="Decision"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Name] = [Worksheet Names.Name]" /><ontrue>f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1</ontrue><onfalse>27d57e09-d2fa-496d-a5c6-d382be881ad1</onfalse></stage><stage stageid="f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1" name="Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="True" stage="Worksheet Exists" /></stage><stage stageid="f5a7d39b-3edc-4984-89dc-f88f02b5f747" name="Worksheet Exists" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aea2b1ba-e24b-4929-a0be-bc2ad811f277" name="Not Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="False" stage="Worksheet Exists" /></stage><stage stageid="a1d81278-4fd7-4ee6-a878-8ec4dcde4793" name="Get Worksheet Range As Collection" type="SubSheetInfo"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><narrative>Exceptions
Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action</narrative><display x="-135" y="-105" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f2ee451-c914-4c38-8e19-4d3e3a519dfd" name="End" type="End"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The spreadsheet data from the specified range, as a collection" stage="worksheetcollection" /></outputs></stage><stage stageid="fa5759e6-b7e3-42d1-8297-90953ec4a343" name="handle" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="832f8dbf-c88e-4488-89ec-d0782439fc34" name="workbookname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7a36655-443b-482f-809b-eb738682ee98" name="Start" type="Start"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="text" name="EndCell" narrative="The end cell of the range of interest" stage="End Cell" /><input type="flag" name="Use Header" narrative="This flag states if the excel collection uses a header, or not." stage="Use Header" /></inputs><onsuccess>58d3ca4f-4467-492d-b85a-fd7ab4271110</onsuccess></stage><stage stageid="680eac96-2bd0-4d02-a62b-ac7bf684dae9" name="GetWorksheetRangeAsCollection" type="Code"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>6f2ee451-c914-4c38-8e19-4d3e3a519dfd</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet( _
	 handle, workbookname, worksheetname)
	Dim r as Object
	r = ws.Range(Start_Cell & ":" & End_Cell)
	r.Select()
	r.Copy()

	Dim data As String = GetClipboardText()

	worksheetCollection = ParseDelimSeparatedVariables( _
	 data, vbTab, Nothing, Use_Header)
]]></code></stage><stage stageid="706da482-84a4-4e78-a1ba-002f80123e3f" name="worksheetname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1ec36df-f335-48a9-a0f4-e3f39d6c987d" name="worksheetcollection" type="Collection"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8054b9c8-5245-4a77-a058-949faeec00a7" name="Start Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="210" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9f43b65-bd92-44fa-b0fe-cf798aaf49be" name="End Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="270" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40717bdb-980d-46a2-8ed8-4c3c283a98ff" name="Use Header" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="30" y="-705" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a437a6b-8cfe-4bc1-a7d3-ca5a2e026477" name="Remove Blank Rows" type="SubSheetInfo"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><narrative>Removes blank rows in the active excel workbook. The entire row must consist of blank cells.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c883a67c-5093-45d2-82c8-680cf35c2c0e" name="Start" type="Start"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1e0e5735-5bc9-43dc-85c9-4e8735def67f</onsuccess></stage><stage stageid="7023c112-819d-4c9c-82f3-84ab84c9f560" name="End" type="End"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e0e5735-5bc9-43dc-85c9-4e8735def67f" name="Activate Workbook" type="SubSheet"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>4fa6c603-9d6a-4077-ba95-9d213394ee06</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="890b79a0-986e-4982-a010-99e17a8f7173" name="handle" type="Data"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4fa6c603-9d6a-4077-ba95-9d213394ee06" name="Delete blank rows" type="Code"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7023c112-819d-4c9c-82f3-84ab84c9f560</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet

Const xlCellTypeLastCell As Integer = 11 
Dim FirstRow As Integer = 1
Dim LastRow As Integer = worksheet.Cells.SpecialCells(xlCellTypeLastCell).Row

For i As Integer = LastRow To FirstRow Step -1
	If worksheet.Application.CountA(worksheet.Rows(i)) = 0 Then
		worksheet.Rows(i).Delete
	End If
Next]]></code></stage><stage stageid="7ea085b3-60ed-4690-9b58-044e3adac69b" name="Move Worksheet" type="SubSheetInfo"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><narrative>Moves the specified worksheet to another workbook.
</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="48fad533-06e9-41b7-b213-bfea2423c61c" name="Start" type="Start"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the source workbook which contains the sheet required." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the source worksheet which is to be moved." stage="Source Worksheet" /><input type="text" name="Destination Workbook" narrative="The name of the destination workbook which the worksheet will be moved to." stage="Destination Workbook" /><input type="number" name="Destination Position" narrative="The destination position to move the worksheet to." stage="Destination Position" /><input type="flag" name="Copy" narrative="The true or false flag to decide if the moved worksheet will be copied." stage="Copy" /></inputs><onsuccess>b950e637-fb25-4932-b970-65e4ee21dd1d</onsuccess></stage><stage stageid="51274535-b09a-4b0b-a9bc-fff82557aa0a" name="Handle" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6336e057-ac6a-4b57-b789-906100be58cc" name="Source Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51bf5410-80ae-4517-8ee8-1ccf54a61e2f" name="Source Worksheet" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467b75ec-f03c-460e-a57d-d6852ab35293" name="Destination Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ad740a0-b0e5-483c-9247-2b766533c852" name="Source Worksheet Exists" type="SubSheet"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[Source Workbook]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" expr="[Source Worksheet]" /></inputs><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs><onsuccess>efca1a70-2f20-4dda-b071-825a986958a6</onsuccess><processid>eacc4634-9985-4a1d-9773-8f79928708ee</processid></stage><stage stageid="4702c382-1a44-441c-9cd1-83281efd10ff" name="Worksheet Exists" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efca1a70-2f20-4dda-b071-825a986958a6" name="Worksheet Exists?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Exists]" /><ontrue>e804939a-8a40-4803-89cd-b10e57a97583</ontrue><onfalse>5d46a63f-e90b-4432-8c62-52d2e2380065</onfalse></stage><stage stageid="e804939a-8a40-4803-89cd-b10e57a97583" name="Move Named Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="text" name="SourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess><code><![CDATA[Dim dBook, sSheet As Object
Dim p As Integer

Try

dBook = GetWorkbook(Handle, DestinationWorkbook)
sSheet = GetWorksheet(Handle, SourceWorkbook, SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(dBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="38d819d9-2dec-4ae8-afe3-76da44096935" name="End2" type="End"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb823085-c462-43b7-81d0-3ad7f1e026dd" name="Success" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81e05f5d-ac29-4885-b6cd-fd5a308fcc44" name="Message" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764ea205-800b-4ab5-adc1-273a46ad93b6" name="Success?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>38d819d9-2dec-4ae8-afe3-76da44096935</ontrue><onfalse>65eda7a6-ce00-4372-9fc9-26931328aba4</onfalse></stage><stage stageid="7b25db9b-d103-4ba0-a8a5-468a16e50dd7" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="345" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="87c0d87a-ef13-4eb7-8e10-085ab67dc0a0" name="Destination Position" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3e46008f-172e-42b3-b4b3-e7221f0ef6d8" name="Copy and Paste Worksheet Range" type="SubSheetInfo"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><narrative>Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action</narrative><display x="-270" y="-120" w="300" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="979c420e-1748-448e-9334-e238c47503a1" name="Copy" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5d46a63f-e90b-4432-8c62-52d2e2380065" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Source worksheet not found&quot;" /></stage><stage stageid="b470a541-1a6d-4c08-936a-94d2c6c99aa8" name="Start" type="Start"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the source workbook which is be copied." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the source worksheet which is to be copied." stage="Source Worksheet" /><input type="text" name="Source Range" narrative="The range of cells which will be copied." stage="Source Range" /><input type="text" name="Destination Workbook" narrative="The name of the destination workbook which the worksheet will be copied to." stage="Destination Workbook" /><input type="text" name="Destination Worksheet" narrative="The name of the destination worksheet which the range of cell will be copied to." stage="Destination Worksheet" /><input type="text" name="Destination Range" narrative="The destination range of cells." stage="Destination Range" /></inputs><onsuccess>11afaed8-560c-4915-b3eb-04f45158a941</onsuccess></stage><stage stageid="b4598457-7e50-432e-ae29-7d081367e298" name="Source Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc6e0465-0f54-401c-964f-974f43802264" name="Source Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b0fe7d-0b86-4fd0-bcd9-6c80841ae464" name="Destination Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0366fbb1-1c68-4466-87cb-760d499b4cdd" name="Worksheet Exists" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11afaed8-560c-4915-b3eb-04f45158a941" name="Paste Worksheet" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
sheet.Paste()
cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="70304b7a-b551-4a52-b52d-924f11d328a7" name="End2" type="End"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61bc4bd1-c8ab-4fe3-993e-a7e30fcaf9ef" name="Success" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e558b45-ad3b-459a-978c-048e7f555c4a" name="Message" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8136ae2b-8fb0-4945-8016-b5b9eae4c2d2" name="Success?" type="Decision"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>70304b7a-b551-4a52-b52d-924f11d328a7</ontrue><onfalse>470e1a49-496c-497e-b59a-537f730059cb</onfalse></stage><stage stageid="470e1a49-496c-497e-b59a-537f730059cb" name="Exception" type="Exception"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="2a17d158-14b5-4cec-aa84-2b6789585973" name="Destination Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="124d4f6c-b7b5-4935-8d7a-71a253571261" name="Handle" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b950e637-fb25-4932-b970-65e4ee21dd1d" name="Source Worksheet Number?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="IsNumber([Source Worksheet])" /><ontrue>eba296d1-0f89-4c61-892c-b25b40f3f618</ontrue><onfalse>9ad740a0-b0e5-483c-9247-2b766533c852</onfalse></stage><stage stageid="8b56215b-b4e5-4a95-a49d-179871dd1d2b" name="Move Numbered Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="number" name="SourceWorksheet" expr="[Source Worksheet Number]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e9db38cf-4c64-49fa-a46b-f2dfa31dfe18</onsuccess><code><![CDATA[Dim sBook, dBook As Object
Dim sSheet As Object
Dim p As Integer

Try

sBook = GetWorkbook(Handle, SourceWorkbook)
dBook = GetWorkbook(Handle, DestinationWorkbook)

sSheet = sBook.Worksheets(SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(sBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sBook = Nothing
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="e9db38cf-4c64-49fa-a46b-f2dfa31dfe18" name="anchor7" type="Anchor"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="195" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess></stage><stage stageid="65eda7a6-ce00-4372-9fc9-26931328aba4" name="Copy?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="240" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Copy]" /><ontrue>7b25db9b-d103-4ba0-a8a5-468a16e50dd7</ontrue><onfalse>32d3772b-fe03-4a13-a415-62b4fdd5fa8f</onfalse></stage><stage stageid="32d3772b-fe03-4a13-a415-62b4fdd5fa8f" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to move worksheet: &quot; &amp; [Message]" /></stage><stage stageid="eba296d1-0f89-4c61-892c-b25b40f3f618" name="Source Workbook Number" type="Calculation"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8b56215b-b4e5-4a95-a49d-179871dd1d2b</onsuccess><calculation expression="[Source Worksheet]" stage="Source Worksheet Number" /></stage><stage stageid="2cc989f3-1c41-4289-98fb-383b0c88ed74" name="Source Worksheet Number" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09bbef8a-09b2-4a43-925d-b1a0b88e692b" name="Get Worksheet Position" type="SubSheetInfo"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4235fac3-2295-4511-828e-090e9c888d38" name="End" type="End"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" narrative="The output data - the position of the worksheet." stage="Position" /></outputs></stage><stage stageid="46d026ab-934f-4e60-8d1f-68344ac1b103" name="Handle" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3d97151-6742-41e9-9b9a-08ce6b9700d1" name="Workbook" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ec78a25-f322-4161-8872-54815ffbc0f0" name="Worksheet" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccd25c1-379e-41cf-92fd-2d02ac1fc7ac" name="Start" type="Start"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet" /></inputs><onsuccess>244c946c-e677-4da7-8d5a-de244ec07eea</onsuccess></stage><stage stageid="244c946c-e677-4da7-8d5a-de244ec07eea" name="Get Worksheet Position" type="Code"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Position" stage="Position" /></outputs><onsuccess>27d60ef1-833c-44f5-b5ab-0aefb2c0581c</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets
Position = ws(Worksheet).Index

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="f13a2dde-4da4-4811-a0dd-f3f0bb009354" name="Position" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32b13d14-acc8-406c-8d15-9ffdc7355c5d" name="Source Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa73a8e-f525-4d57-a0ff-9df54a1d2d63" name="Destination Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1da6ce-caa1-4a5c-b622-70602b8ad49e" name="Select" type="SubSheetInfo"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><narrative>Selects cells of a worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30e9f460-bd3e-4273-bb7c-77fedbfe445f" name="End" type="End"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a24031db-2c21-4624-9a0b-6643f3e75247" name="Handle" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9504d1-c2d1-49a6-a6f2-cf95da7eeb12" name="Workbook" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcba2fd7-c2e3-4661-a6c4-be512624d70c" name="Worksheet" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f78616ed-e974-46dd-ace5-c44a1b800c11" name="Start" type="Start"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /><input type="text" name="Cell Reference" narrative="The reference of cells that is selected." stage="Cell Reference" /></inputs><onsuccess>34677bae-38d3-4518-917f-c883f9c1677d</onsuccess></stage><stage stageid="92300230-c4b8-4530-9378-f98dfd556895" name="Cell Reference" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34677bae-38d3-4518-917f-c883f9c1677d" name="Select Cells" type="Code"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Reference" expr="[Cell Reference]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>2cb73eba-be13-4568-a11a-02f3a20b9dfe</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Reference)
range.Select()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	excel = Nothing
	sheet = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="2cb73eba-be13-4568-a11a-02f3a20b9dfe" name="Success?" type="Decision"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>30e9f460-bd3e-4273-bb7c-77fedbfe445f</ontrue><onfalse>7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4</onfalse></stage><stage stageid="7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4" name="Exception" type="Exception"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to select row: &quot; &amp; [Message]" /></stage><stage stageid="3e5f45b4-d1b1-4dc1-8be0-29a9b4a55c53" name="Success" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34efe5b1-fcdd-4221-a651-006b1110ebbd" name="Message" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8189dfa8-421a-45da-9d7c-26ac377bc514" name="Delete" type="SubSheetInfo"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><narrative>Delete cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a3f17004-6131-48f2-b0a8-e602f24b599e" name="End" type="End"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d0b1914-39fd-4e17-b7b4-55faafd45af7" name="Handle" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75588f1d-b4d2-4c8c-a51f-61c822a68abb" name="Workbook" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad8ce293-a3a3-43ca-9b8f-1d680fbdc03e" name="Start" type="Start"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Shift (Left or Up)" narrative="The shift type for cells to be deleted." stage="Shift" /></inputs><onsuccess>97daebd3-2794-4944-af67-9698bbaa77b3</onsuccess></stage><stage stageid="57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd" name="Delete Selection" type="Code"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>6f1da154-330d-490b-b615-df266c6767fa</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Delete(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="6f1da154-330d-490b-b615-df266c6767fa" name="Success?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>a3f17004-6131-48f2-b0a8-e602f24b599e</ontrue><onfalse>bb18bdc9-f544-4157-a6ba-e289c8f33c43</onfalse></stage><stage stageid="bb18bdc9-f544-4157-a6ba-e289c8f33c43" name="Exception" type="Exception"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="d0c4907b-2b85-424d-a6ef-8bcfb43d3f72" name="Success" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9dbebe22-4f86-499f-8f29-155baf2cc42d" name="Message" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2110b138-01f6-47af-befd-7a71637b5844" name="Shift" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97daebd3-2794-4944-af67-9698bbaa77b3" name="Shift Left?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>6e608312-7a91-4039-8f0a-90ccaac7d3cc</ontrue><onfalse>8a8e9a33-5eca-485a-adeb-e5a43592d6d4</onfalse></stage><stage stageid="6e608312-7a91-4039-8f0a-90ccaac7d3cc" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="4095b231-4d4f-4c98-b74d-6134fb63b9af" name="Shift Type" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8e9a33-5eca-485a-adeb-e5a43592d6d4" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage><stage stageid="27122991-d4c6-4811-a366-7fd47a11da5c" name="Copy" type="SubSheetInfo"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><narrative>Copy cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bba0e0d4-6894-469c-a9b8-1f07855dadc9" name="End" type="End"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="364a6306-d747-4c70-84ae-4128d8938fbc" name="Handle" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0139001-74d1-4ab8-a517-4329434df1e5" name="Workbook" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d750a5-2e0e-4aaa-951a-76aaf6b973da" name="Start" type="Start"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /></inputs><onsuccess>d8005fde-9fe5-47f9-a980-e4beae15815a</onsuccess></stage><stage stageid="a8acd5cc-0955-4896-b87a-80091b060926" name="Success?" type="Decision"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bba0e0d4-6894-469c-a9b8-1f07855dadc9</ontrue><onfalse>6ceb186e-fea0-48a8-a72d-f104f83699c6</onfalse></stage><stage stageid="6ceb186e-fea0-48a8-a72d-f104f83699c6" name="Exception" type="Exception"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy selection: &quot; &amp; [Message]" /></stage><stage stageid="4f25dc7f-bd6f-495d-90e7-0d561dba2662" name="Success" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8da6c3-ceed-4a32-8e4d-473b53a57602" name="Message" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8005fde-9fe5-47f9-a980-e4beae15815a" name="Copy Selection" type="Code"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a8acd5cc-0955-4896-b87a-80091b060926</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Copy

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="044c591e-e63e-4f13-80b8-de4217a78b3b" name="Paste" type="SubSheetInfo"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><narrative>Paste text into cells of a workbook.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ebf6405-9e3a-45f8-be9c-fdd70f254b34" name="End" type="End"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f23548e-a9f9-48c6-93c3-fbd8fa4f8d8d" name="Handle" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf7ad6-162d-4e2d-9a03-a6ebc54eb526" name="Workbook" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4b5681-cffa-432d-be94-08d4ddf16986" name="Start" type="Start"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="flag" name="Values Only" narrative="True or false flag to decide whether to paste the values only." stage="Values Only" /></inputs><onsuccess>0d27a545-71b3-4a27-843b-8ed69b1648ce</onsuccess></stage><stage stageid="360c1bdb-1960-4486-ad05-8ec4485ef0ec" name="Success?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>1ebf6405-9e3a-45f8-be9c-fdd70f254b34</ontrue><onfalse>4830e942-edaf-4bd2-8922-9cffafc084ad</onfalse></stage><stage stageid="4830e942-edaf-4bd2-8922-9cffafc084ad" name="Exception" type="Exception"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to paste from clipboard: &quot; &amp; [Message]" /></stage><stage stageid="77b051c2-e570-49a3-8708-b42785a2517f" name="Success" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da93fc46-495b-4511-a724-a1cc7d70cffa" name="Message" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24bf06a1-fd8f-4cd3-bab6-e05552f8bdba" name="Paste Values" type="Code"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Paste Option" expr="[Paste Option]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>360c1bdb-1960-4486-ad05-8ec4485ef0ec</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.PasteSpecial(Paste:=Paste_Option, Operation:=-4142, SkipBlanks:=False, Transpose:=False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
   range = Nothing
End Try]]></code></stage><stage stageid="ba04d5a5-b0f7-4979-af44-2f0fee5237f9" name="Write To Clipboard" type="SubSheetInfo"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><narrative>Writes text to clipboard so that it can be copied.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1587c068-8225-4476-b636-9403f8acd84a" name="Start" type="Start"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" narrative="The text that is to be copied to clipboard." stage="Value" /></inputs><onsuccess>2279ba0c-3963-48f8-b813-4b0f53f47471</onsuccess></stage><stage stageid="a82e0657-86e9-4273-bd0f-2065d5f70254" name="End" type="End"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eda7181f-a720-4b63-9d69-86221881d965" name="Value" type="Data"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2279ba0c-3963-48f8-b813-4b0f53f47471" name="Write To Clipboard" type="Code"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" expr="[Value]" /></inputs><onsuccess>a82e0657-86e9-4273-bd0f-2065d5f70254</onsuccess><code><![CDATA[
SetClipboardText(Value)
]]></code></stage><stage stageid="79b62074-ec0d-49c6-a258-61823cc8a849" name="Values Only" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0d27a545-71b3-4a27-843b-8ed69b1648ce" name="Values Only?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Values Only]" /><ontrue>5bd5a242-a414-4d49-b093-0eb8d3978f8a</ontrue><onfalse>f98e8dcf-bff1-418a-9963-4878022c7391</onfalse></stage><stage stageid="f98e8dcf-bff1-418a-9963-4878022c7391" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4104" stage="Paste Option" /></stage><stage stageid="8e80a8c9-867f-46fa-ace9-d251af38eeed" name="Paste Option" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd5a242-a414-4d49-b093-0eb8d3978f8a" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4163" stage="Paste Option" /></stage><stage stageid="7f2dfa02-938c-4179-9e22-216057d33f43" name="Cut" type="SubSheetInfo"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><narrative>Cut cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2f20301-ebd9-4fbd-9b94-ca2074e69294" name="End" type="End"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d29233ea-0e94-44a4-864c-f32568e42c4b" name="Handle" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59232dab-20a4-4e84-8a43-e2016ef6a74c" name="Workbook" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6c212b-fd48-44cf-a931-8c99060d29cc" name="Start" type="Start"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /></inputs><onsuccess>3dcf0167-85d1-4170-b214-86784cbcab65</onsuccess></stage><stage stageid="581ece97-ebdc-4855-8fdf-45290b4e587d" name="Success?" type="Decision"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>f2f20301-ebd9-4fbd-9b94-ca2074e69294</ontrue><onfalse>797b7b44-cd61-4d3c-8874-82e44868ea1b</onfalse></stage><stage stageid="797b7b44-cd61-4d3c-8874-82e44868ea1b" name="Exception" type="Exception"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to cut selection: &quot; &amp; [Message]" /></stage><stage stageid="3556655c-d270-4054-a989-b2f44854a7ba" name="Success" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9b9ba3-e800-4df7-bc87-db6b36f846c9" name="Message" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dcf0167-85d1-4170-b214-86784cbcab65" name="Cut Selection" type="Code"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>581ece97-ebdc-4855-8fdf-45290b4e587d</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Cut

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fc13a15a-74aa-47dc-af68-38bea19af981" name="Protect Workbook" type="SubSheetInfo"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><narrative>Protects the workbook so that it is encrypted with a password.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0e32102b-7c0a-4f3e-9fe7-cc267fede407" name="Handle" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03b0377d-35e5-4a7d-b16c-756d690843ee" name="Workbook" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1610a1c-3532-4a88-8732-39cbfb4495f4" name="Start" type="Start"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="password" name="Password" narrative="The password of the workbook." stage="Password" /></inputs><onsuccess>e47e5f86-b7d0-409e-bf2a-6673cf28bac7</onsuccess></stage><stage stageid="de93c65e-11ae-4507-b8bf-da3f09910f82" name="Password" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e47e5f86-b7d0-409e-bf2a-6673cf28bac7" name="Protect Workbook" type="Code"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="password" name="Password" expr="[Password]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)
wb.Protect(Password, True, True)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="6a177cf9-5ec0-481d-84e9-c5d72177038d" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><narrative>Hides worksheet so that is not visible.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0cc70266-582a-410c-9c3a-29ff9dfb795e" name="Handle" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf25a3a-b4dd-4b80-8339-06b9d63e56e6" name="Workbook" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8889824-2e30-472c-bb9a-4daad82560f3" name="Worksheet" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d9d6921-9f68-4152-be57-8b0df6472eda" name="Start" type="Start"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /></inputs><onsuccess>298fe33e-bd86-4109-8540-f1abe8d02eb8</onsuccess></stage><stage stageid="4a51d886-d307-4904-8ce4-98191c734a17" name="End" type="End"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0" name="Success?" type="Decision"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4a51d886-d307-4904-8ce4-98191c734a17</ontrue><onfalse>fbeb4a74-fc5f-431f-b150-15549afc2a22</onfalse></stage><stage stageid="fbeb4a74-fc5f-431f-b150-15549afc2a22" name="Exception" type="Exception"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protect workbook: &quot; &amp; [Message]" /></stage><stage stageid="298fe33e-bd86-4109-8540-f1abe8d02eb8" name="Hide Worksheet" type="Code"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>66ad2075-9b87-44be-9c6d-0a702d752f57</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook, Worksheet)
ws.Visible = False

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="c2e5c7e9-93a1-489e-a870-523042f050f1" name="End" type="End"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66ad2075-9b87-44be-9c6d-0a702d752f57" name="Success?" type="Decision"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c2e5c7e9-93a1-489e-a870-523042f050f1</ontrue><onfalse>7dca362f-2e45-443b-adc7-9075f02fc717</onfalse></stage><stage stageid="7dca362f-2e45-443b-adc7-9075f02fc717" name="Exception" type="Exception"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="c3b30035-3883-4740-9cf0-49e967ad6306" name="Success" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff6900f6-3524-4b24-be71-4d12c2d4c77e" name="Message" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cea8af9d-95ea-4c09-9932-adc8cc633db6" name="Success" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7888130-7082-4f05-8864-3f0709675831" name="Message" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b9509a6-dfc6-4f25-9474-dba6e8b7ed20" name="Hide Other Worksheets" type="SubSheetInfo"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><narrative>Hide all other worksheets so that they are not visible.</narrative><display x="-480" y="-1020" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a81bb6df-46b8-4641-8531-802be8934741" name="Handle" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-945" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f349c5cb-454b-448c-b225-5c474ae4e52d" name="Workbook" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-915" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="999117c1-6fa6-4172-9512-78106c277a38" name="Worksheet" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-885" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6444d8d9-7f26-4eb5-ab31-c98706e6209a" name="Start" type="Start"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-1020" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /></inputs><onsuccess>c5ca2626-02e2-4413-9476-9958c1b7b717</onsuccess></stage><stage stageid="c5ca2626-02e2-4413-9476-9958c1b7b717" name="Hide Other Worksheets" type="Code"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-960" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>36529e74-e353-4cbd-b6ff-3591c0390efd</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)

For Each ws As Object In wb.Worksheets
	ws.Visible = (ws.Name = Worksheet)
Next

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="52e20387-128e-4f5c-b182-7d28a9005a71" name="End" type="End"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-810" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36529e74-e353-4cbd-b6ff-3591c0390efd" name="Success?" type="Decision"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-885" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>52e20387-128e-4f5c-b182-7d28a9005a71</ontrue><onfalse>c5840684-3348-4ee6-a024-dda79500a851</onfalse></stage><stage stageid="c5840684-3348-4ee6-a024-dda79500a851" name="Exception" type="Exception"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-165" y="-885" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to hide worksheets: &quot; &amp; [Message]" /></stage><stage stageid="089eef49-c020-4aea-929e-4d1ae4282215" name="Success" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-840" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370e2ccf-3010-44ea-9155-06babd5e856c" name="Message" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-810" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4996af5e-0cc1-4e24-aedf-20320350469e" name="Import CSV" type="SubSheetInfo"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><narrative>Import CSV worksheets into a workbook using a path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4b14657-a0f4-4c85-9466-5146878dfbe7" name="Handle" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbfe7495-0fef-4c22-a251-88166b8485d4" name="Workbook" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c0e661b-9b74-4d25-9a8b-1da52f957ed2" name="Worksheet" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8df3e95e-4a03-4e0a-a649-37fb1d17ff41" name="Start" type="Start"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Destination Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Destination Workbook" narrative="The name of the workbook that the CSV is imported to." stage="Workbook" /><input type="text" name="Destination Worksheet" narrative="The name of the worksheet that the CSV is imported to." stage="Worksheet" /><input type="text" name="Destination Range" narrative="The destination range of where the CSV will be imported into the worksheet," stage="Range" /><input type="text" name="Source File Path" narrative="The file path of the CSV file to be imported." stage="Path" /><input type="text" name="Source Text Qualifier" narrative="The source text of the CSV to be imported." stage="Qualifier" /></inputs><onsuccess>a09cfa98-b04d-472f-ad84-87e6a0bdb011</onsuccess></stage><stage stageid="7803cce6-3095-4d46-9cd2-793181eb080d" name="Import CSV" type="Code"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="Path" expr="[Path]" /><input type="number" name="Qualifier" expr="[Qualifier Code]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>91f84fae-ca36-4b8b-8221-bc3e95cd2ef3</onsuccess><code><![CDATA[Dim dw, ds, dr, qt As Object

Try

dw = GetWorkbook(Handle, Workbook)
ds = GetWorksheet(Handle, Workbook, Worksheet)
dr = ds.Range(Range)
qt = ds.QueryTables.Add(Connection:="TEXT;" & Path, Destination:=dr)

With qt
	.FieldNames = True
	.RowNumbers = False
	.FillAdjacentFormulas = False
	.PreserveFormatting = True
	.RefreshOnFileOpen = False
	.RefreshStyle = 1 'xlInsertDeleteCells
	.SavePassword = False
	.SaveData = True
	.AdjustColumnWidth = True
	.RefreshPeriod = 0
	.TextFilePromptOnRefresh = False
	.TextFilePlatform = 437
	.TextFileStartRow = 1
	.TextFileParseType = 1 'xlDelimited
	.TextFileTextQualifier = Qualifier
	.TextFileConsecutiveDelimiter = False
	.TextFileTabDelimiter = False
	.TextFileSemicolonDelimiter = False
	.TextFileCommaDelimiter = True
	.TextFileSpaceDelimiter = False
	.TextFileTrailingMinusNumbers = True
End With
qt.Refresh(False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dw = Nothing
	ds = Nothing
	dr = Nothing
	qt = Nothing
End Try]]></code></stage><stage stageid="bfe990bf-be29-4c21-ac04-96a798ab1827" name="End" type="End"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="91f84fae-ca36-4b8b-8221-bc3e95cd2ef3" name="Success?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="210" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bfe990bf-be29-4c21-ac04-96a798ab1827</ontrue><onfalse>6aaf6a41-be76-442d-9c2b-06905c4e0355</onfalse></stage><stage stageid="6aaf6a41-be76-442d-9c2b-06905c4e0355" name="Exception" type="Exception"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="225" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to import CSV: &quot; &amp; [Message]" /></stage><stage stageid="af967b8b-4ec8-4202-ac07-6acbf9d12d46" name="Success" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5335f808-6164-4249-9a2c-682294b9834c" name="Message" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="955e0188-d711-476b-b15b-1362ba3b0ea4" name="Path" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef84711-b0a0-4f04-a09d-a6e9637ea2cb" name="Qualifier" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a09cfa98-b04d-472f-ad84-87e6a0bdb011" name="Double Quote Qualifier?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Qualifier]=&quot;&quot;&quot;&quot;" /><ontrue>b0e18e5b-791a-492a-b6c6-112ed2cdf10f</ontrue><onfalse>6e036392-ff83-4dfa-94fe-ff1ed03cd9bc</onfalse></stage><stage stageid="b0e18e5b-791a-492a-b6c6-112ed2cdf10f" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="1" stage="Qualifier Code" /></stage><stage stageid="f9eb7145-ee8c-41cc-8ea2-2417adbcd435" name="Qualifier Code" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc2b8ffb-c597-4ede-8134-1cc80a2c3293" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="-4142" stage="Qualifier Code" /></stage><stage stageid="6e036392-ff83-4dfa-94fe-ff1ed03cd9bc" name="Note2" type="Note"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><narrative>Assume no text qualifier</narrative><display x="15" y="60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc2b8ffb-c597-4ede-8134-1cc80a2c3293</onsuccess></stage><stage stageid="70744683-2ca9-4e9a-89b9-194945f98e32" name="Range" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c8e00b5-ec48-479b-8abf-6a6658752cb5" name="Get Worksheet Name" type="SubSheetInfo"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><narrative>Gets the name of the worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2af2843d-00f3-464f-ab67-305ae6ccf858" name="End" type="End"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Worksheet" narrative="The output data - the name of the worksheet." stage="Worksheet" /></outputs></stage><stage stageid="26c465a5-f001-4ff8-ac21-28437489e85f" name="Handle" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2de7e6b6-6118-4b3f-ba2b-179ba64d95d8" name="Workbook" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee8f628-7829-42f7-ac8c-672d78be654f" name="Worksheet" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c752debc-3eea-4935-a460-f8eb77039d5d" name="Start" type="Start"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="number" name="Worksheet Position" narrative="The position of the worksheet." stage="Position" /></inputs><onsuccess>ba712112-b784-4f87-a7ff-5a8721aca35d</onsuccess></stage><stage stageid="ba712112-b784-4f87-a7ff-5a8721aca35d" name="Get Worksheet" type="Code"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Position" expr="[Position]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Worksheet" stage="Worksheet" /></outputs><onsuccess>39f8ebfd-a1e8-4517-add5-653f475fe8eb</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets(Position)
Worksheet = ws.Name

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="2cbe9309-244f-45ae-8716-0d02bf738530" name="Position" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27d60ef1-833c-44f5-b5ab-0aefb2c0581c" name="Success?" type="Decision"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4235fac3-2295-4511-828e-090e9c888d38</ontrue><onfalse>8edc5ff8-0139-409d-ba63-7f23bf726964</onfalse></stage><stage stageid="8edc5ff8-0139-409d-ba63-7f23bf726964" name="Exception" type="Exception"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet position: &quot; &amp; [Message]" /></stage><stage stageid="39f8ebfd-a1e8-4517-add5-653f475fe8eb" name="Success?" type="Decision"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>2af2843d-00f3-464f-ab67-305ae6ccf858</ontrue><onfalse>636399b4-ec2b-41a7-ac41-27e98637df4c</onfalse></stage><stage stageid="636399b4-ec2b-41a7-ac41-27e98637df4c" name="Exception" type="Exception"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet name: &quot; &amp; [Message]" /></stage><stage stageid="69b153d1-9bd9-4c51-8b96-d45c1112bbfb" name="Success" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="464ca930-cf54-4147-8041-1007cc2416b6" name="Message" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def46f81-3f9f-421d-91cf-f12583e956d3" name="Success" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1195aa37-1cbe-4f02-9d00-c39f3e304cfc" name="Message" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5222003b-5cb9-4669-bc35-96d41b028249" name="Insert" type="SubSheetInfo"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><narrative>Insert cells into the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c868cff-a594-49f6-bde7-fc3ba2cd17c6" name="End" type="End"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c34b4fa-4824-48bf-ae2a-b709a25cec17" name="Handle" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dc53e03-3a4f-4ca9-ba70-17573564d976" name="Workbook" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89909450-cca0-4546-bbbc-32cbd4c609bc" name="Start" type="Start"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Shift (Left or Up)" narrative="The shift type to be used to insert cells." stage="Shift" /></inputs><onsuccess>1f31ede9-3b32-4aaf-9b55-573cb227a850</onsuccess></stage><stage stageid="dc1f9d40-b099-44c3-a2c1-e782413b0914" name="Insert" type="Code"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be039ecb-6427-4a80-8a91-9b69561fc2de</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Insert(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="be039ecb-6427-4a80-8a91-9b69561fc2de" name="Success?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>7c868cff-a594-49f6-bde7-fc3ba2cd17c6</ontrue><onfalse>741cc1d1-3936-4201-ad74-e95993e64b92</onfalse></stage><stage stageid="741cc1d1-3936-4201-ad74-e95993e64b92" name="Exception" type="Exception"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="aac1165a-4574-4834-a68e-18db8cdd0216" name="Success" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52ea365d-8434-45cb-97ba-cd7c741b7c7c" name="Message" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd2ee59b-4044-4f2c-8439-05e1a9b23c7d" name="Shift" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f31ede9-3b32-4aaf-9b55-573cb227a850" name="Shift Left?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>594ef012-6d63-4256-a43c-dd84c172ad15</ontrue><onfalse>21ff25a4-b431-43fb-af46-02fff92627e7</onfalse></stage><stage stageid="594ef012-6d63-4256-a43c-dd84c172ad15" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4161" stage="Shift Type" /></stage><stage stageid="c07375e4-4e0d-4a0d-b7b2-d1bab9884769" name="Shift Type" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21ff25a4-b431-43fb-af46-02fff92627e7" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4121" stage="Shift Type" /></stage><stage stageid="53f2c5f2-ac8f-40c2-ace8-24614c6d3676" name="Run Macro" type="SubSheetInfo"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da9401ad-8267-4f76-bb0d-02d380427eb5" name="Start" type="Start"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /></inputs><onsuccess>a19d33b9-0a8b-4fb1-b333-7fb65c7733ab</onsuccess></stage><stage stageid="0a6413b8-4ce8-4399-b3e2-974e44d812af" name="End" type="End"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a19d33b9-0a8b-4fb1-b333-7fb65c7733ab" name="Run Macro" type="Code"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /></inputs><onsuccess>0a6413b8-4ce8-4399-b3e2-974e44d812af</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name)]]></code></stage><stage stageid="669163d5-5b66-446d-84fc-ddaaccf6ecc8" name="Handle" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d95761c1-c5f3-46a0-8b86-7f90e58418cc" name="Macro Name" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d3ca4f-4467-492d-b85a-fd7ab4271110" name="Activate Worksheet" type="SubSheet"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-60" w="150" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>680eac96-2bd0-4d02-a62b-ac7bf684dae9</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="31fdd089-280c-4f33-ba2b-a9b52b556682" name="Open Active Instance" type="Block"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="105" y="-255" w="360" h="375" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c478137a-cdb0-4cd8-bb73-fe4c052d6200" name="Timeout" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="9474db50-6935-47fa-b862-4aa1a49143f8" name="CheckTimeout" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-165" w="120" h="30" /><outputs><output type="flag" name="TimeoutOccoured" stage="Timeout Occoured" /></outputs><onsuccess>6af35f22-949f-47dd-8517-78b00d73f8d9</onsuccess><code><![CDATA[TimeoutOccoured = TypeOf mLastException Is TimeoutException
mLastException = Nothing]]></code></stage><stage stageid="6af35f22-949f-47dd-8517-78b00d73f8d9" name="Timeout Occoured?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-120" w="90" h="30" /><decision expression="[Timeout Occoured]" /><ontrue>40a1c81a-4d1f-484f-bcde-c2cc59d83dbd</ontrue><onfalse>59ebf811-1faf-4486-8630-6d2de19027f5</onfalse></stage><stage stageid="40a1c81a-4d1f-484f-bcde-c2cc59d83dbd" name="Anchor1" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="570" y="-120" w="10" h="10" /><onsuccess>567674ba-270a-4107-ada5-1dae59125522</onsuccess></stage><stage stageid="3bd76d6f-b60f-4a9d-9293-19a63314f33e" name="Timeout Occoured" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4fa207ba-9e59-4717-8a0e-f28210974ff9" name="Timeout" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="e87e0c42-73bb-43a9-9fb1-0c07d02391e1" name="Timeout" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="04901364-93ea-4b62-a8ea-471525e3d12d" name="Timeout" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="255" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="c14b670d-b87c-43c9-a54f-7653da70eb83" name="Timeout" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="7cef178b-10af-4ed1-8400-e41a9640bc73" name="Timeout" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="3a73f260-90db-458b-8d72-ef07a38548f1" name="Timeout" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="105" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="684b23a1-3d16-4db8-a54b-5925cf13321d" name="Use Header" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="330" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="b12c3527-d491-4e7d-a2f0-da0a1ea7b44d" name="fetchDataWithMethod" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Value</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="c28cdbe1-9417-4ded-80c1-19fc3f6ab7f0" name="MS Outlook Email VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Outlook Email VBO" version="7.0.1.49890" bpversion="7.1.1.65484" narrative="Business Object for interacting with Microsoft Outlook email functions" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ec75c4f1-6276-470b-b23f-9a88eb7a0f96</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>32</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="The Object requires a MS interop runtime DLL &quot;Microsoft.Office.Interop.Outlook.dll&quot; to be installed in order to run. This DLL can be installed as an optional feature using the Blue Prism installer." /></preconditions><endpoint narrative="" /><subsheet subsheetid="810b21b7-6b6b-4c7b-be10-b0c5f2911afc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-182</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0b58522-643b-42ad-8fdd-4cb5246c5558" type="Normal" published="True"><name>Send Email</name><view><camerax>-98</camerax><cameray>49</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="78125029-0b28-4ee1-a064-c3a9e70ad7ca" type="Normal" published="True"><name>Reply All to Email</name><view><camerax>-25</camerax><cameray>8</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f6f16944-bdad-4ff4-a5df-b687b904183c" type="Normal" published="True"><name>Reply to Email</name><view><camerax>0</camerax><cameray>57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9bf4e24d-5759-4357-97f1-adc1c08c843a" type="Normal" published="True"><name>Forward Email</name><view><camerax>-191</camerax><cameray>26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e6fb66c-9607-4731-829c-e3dfd4510a95" type="Normal" published="True"><name>Save Email As File</name><view><camerax>21</camerax><cameray>-5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5734e4af-7917-40d8-b0b6-83d8e1872074" type="Normal" published="True"><name>Delete Email</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="204201c2-30d3-467a-b6fb-4e0010b046af" type="Normal" published="True"><name>Mark Email As Read</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2d1820f0-98e4-4a10-8361-8f5322babcee" type="Normal" published="True"><name>Mark Email As Unread</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bca6ce7c-1d99-4e01-8f69-55a1b2e74904" type="Normal" published="True"><name>Flag Email for Follow-up</name><view><camerax>5</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c99a9bb4-1c93-420d-9165-5da9fd1132fa" type="Normal" published="True"><name>Clear Email Flag</name><view><camerax>-8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61b6fc18-b98a-4456-9381-8c8cfe9f6f60" type="Normal" published="True"><name>Move Email to Inbox Sub Folder</name><view><camerax>-8</camerax><cameray>65</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="758f4938-75a1-4157-b0f7-2d9b99144d61" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f" type="Normal" published="True"><name>Save Attachment</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7aafcecd-5e8f-49d4-9987-73958f3cedc3" type="Normal" published="True"><name>Get Sent Items (Basic)</name><view><camerax>27</camerax><cameray>9</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d9c8a6c7-f973-45af-b333-8166a34297c7" type="Normal" published="True"><name>Get Sent Items (Advanced)</name><view><camerax>143</camerax><cameray>93</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="43fde12c-9d96-4cdd-a342-88204c037438" type="Normal" published="True"><name>Get Sent Items (Expert)</name><view><camerax>-42</camerax><cameray>67</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="a2bc0172-492f-4781-b7ed-1f1d550da3ba" type="Normal" published="True"><name>Get Received Items (Basic)</name><view><camerax>103</camerax><cameray>357</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f28aad59-a89a-4a9c-98ab-d31d6b69d9a5" type="Normal" published="True"><name>Get Received Items (Advanced)</name><view><camerax>-33</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ea004198-e1fb-44bc-b549-bf8f7fa06631" type="Normal" published="True"><name>Get Received Items (Expert)</name><view><camerax>49</camerax><cameray>67</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="fb0dd28d-2875-4ec6-b6d5-475120ac222c" type="Normal" published="False"><name>Internal_Get Items</name><view><camerax>-91</camerax><cameray>33</cameray><zoom version="2">1.5625</zoom></view></subsheet><stage stageid="72d471a3-047f-457c-b72a-b8026ed0c984" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5</onsuccess></stage><stage stageid="2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="bf10fbf6-c2a1-4b51-9a5b-9919863cc24b" name="Stage1" type="ProcessInfo"><display x="-180" y="-15" w="150" h="210" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.Office.Interop.Outlook.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.VisualBasic</import><import>Microsoft.Win32</import><import>Microsoft.Office.Interop.Outlook</import><import>System.Collections</import><import>System.Collections.Generic</import><import>System.Linq</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="0e25d23b-b518-4ba3-989e-4adf589c7dd3" name="Clean Up" type="SubSheetInfo"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a9d4d214-a0e7-4383-8e44-7a4f068d71cd" name="Start" type="Start"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>253513b1-e08e-49b0-a789-fb3659eeb650</onsuccess></stage><stage stageid="253513b1-e08e-49b0-a789-fb3659eeb650" name="End" type="End"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7d086243-ce98-49a9-8674-b8ca5349db4c" name="Note1" type="Note"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="8c3c4d09-dac0-411e-8e05-4db606c12164" name="Save Email As File" type="SubSheetInfo"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>Stores a specified email as a ".msg" file on any file location (file path).

The Entry ID is the unique idenfier used to determine which email is to be saved.</narrative><display x="-195" y="-75" w="150" h="120" /></stage><stage stageid="2ff43150-6180-4cff-bf98-fd8d855bdbf9" name="Start" type="Start"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="File Path" narrative="Mandatory. The destination file path. Default blank." stage="File Path" /><input type="text" name="File Name" narrative="Mandatory. The File Name for the stored Email." stage="File Name" /></inputs><onsuccess>7287aac3-f380-41fd-99ed-1308db516359</onsuccess></stage><stage stageid="0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef" name="End" type="End"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7287aac3-f380-41fd-99ed-1308db516359" name="Save As" type="Code"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><onsuccess>0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.SaveAs (File_Path & File_Name & ".msg")]]></code></stage><stage stageid="0d8dbc79-fe44-41e3-a7a5-5b60b74fa2cf" name="File Path" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15416548-42aa-42e9-8a36-49d19e45e678" name="Internal_Get Items" type="SubSheetInfo"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Sub function used by multiple actions within VBO. Do not change or publish.

Uses the Restrict method to create a filtered list of folder items. Not intended for publication.

</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6573dfb-b844-470c-bfe7-73c863da28d4" name="Start" type="Start"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." stage="Shared Mailbox" /></inputs><onsuccess>d9ef3bca-bf49-4f84-9d4c-b3648951f323</onsuccess></stage><stage stageid="26935ec9-3f33-4a4d-982c-0e6b0a5edbc2" name="End" type="End"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d9ef3bca-bf49-4f84-9d4c-b3648951f323" name="Get Items" type="Code"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" stage="Items" /><output type="number" name="Item Count" stage="Item Count" /></outputs><onsuccess>26935ec9-3f33-4a4d-982c-0e6b0a5edbc2</onsuccess><code><![CDATA[Dim PR_SMTP_ADDRESS As String = "https://schemas.microsoft.com/mapi/proptag/0x39FE001E"
Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim folder As Folder

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	Dim recipient = _nameSpace.CreateRecipient(Shared_Mailbox)
    recipient.Resolve()
	If recipient.Resolved Then
		folder = _nameSpace.GetSharedDefaultFolder(recipient, Outlook_Folder_ID)
	Else
		Dim ex1 As New System.Exception(VbCrlf + "Failed to resolve shared mailbox '" + Shared_Mailbox + "'.")
		Throw ex1
	End If
Else
	If Not String.IsNullOrEmpty(Account_Display_Name) Then
		Try
			Dim aa As List(Of Account) = _nameSpace.Accounts.Cast(Of Account).ToList()
			folder  = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Outlook_Folder_ID)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Else
		folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)
	End If
End If

If Sub_Folder <> "" Then
	For each name as string in Sub_Folder.Split("\")
		folder = folder.Folders(name)
	Next
End If

'See https://msdn.microsoft.com/en-us/library/office/aa210946(v=office.11).aspx
'for mail item properties
Dim dataTable As New Data.DataTable
dataTable.Columns.Add("EntryID", Type.GetType("System.String"))
dataTable.Columns.Add("To", Type.GetType("System.String"))
dataTable.Columns.Add("CC", Type.GetType("System.String"))
dataTable.Columns.Add("Subject", Type.GetType("System.String"))
dataTable.Columns.Add("Body", Type.GetType("System.String"))
dataTable.Columns.Add("Attachments", Type.GetType("System.String"))
dataTable.Columns.Add("ReceivedOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SentOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SenderName", Type.GetType("System.String"))
dataTable.Columns.Add("SenderEmailAddress", Type.GetType("System.String"))
dataTable.Columns.Add("Unread", Type.GetType("System.Boolean"))
dataTable.Columns.Add("Sensitivity", Type.GetType("System.Int16"))
dataTable.Columns.Add("Importance", Type.GetType("System.Int16"))
dataTable.Columns.Add("Flag", Type.GetType("System.String"))
dataTable.Columns.Add("IsHTML", Type.GetType("System.Boolean"))

Dim folderItems = If(Filter_Expression <> "", folder.Items.Restrict(Filter_Expression), folder.Items)

For Each item As Object In folderItems
	If Not TypeOf item Is MailItem Then Continue For
	Dim row As Data.DataRow = dataTable.NewRow
	row("EntryID") = item.EntryID
	row("To") = item.To
	row("CC") = item.CC
	row("Subject") = item.Subject
	row("Body") = If(item.BodyFormat = 2, item.HTMLBody, item.Body)
	
	Dim attachments As String = ""
	For Each attachment As Object In item.Attachments
        If attachment.Type = 1 Then
			attachments = attachments & "|" & attachment.DisplayName
		End If
	Next
	
	row("Attachments") = If (attachments.Length = 0, "", attachments.SubString(1))
	row("SentOn") = item.SentOn
	row("ReceivedOn") = item.ReceivedTime
	row("SenderName") = item.SenderName

	If item.SenderEmailType = "EX" Then
		Dim sender As AddressEntry = item.Sender
		If sender IsNot Nothing Then
			If sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeUserAddressEntry OrElse sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeRemoteUserAddressEntry Then
				Dim exchUser As ExchangeUser = sender.GetExchangeUser()
				If exchUser IsNot Nothing Then
					row("SenderEmailAddress") = exchUser.PrimarySmtpAddress
				End If
			ElseIf sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeDistributionListAddressEntry Then
				Dim exchDL As ExchangeDistributionList = sender.GetExchangeDistributionList
				If exchDL IsNot Nothing Then
					row("SenderEmailAddress") = exchDL.PrimarySmtpAddress
				End If
			Else
				row("SenderEmailAddress") = TryCast(sender.PropertyAccessor.GetProperty(PR_SMTP_ADDRESS), String)
			End If
		End If
	Else
		row("SenderEmailAddress") = item.SenderEmailAddress
	End If

	row("Unread") = item.Unread
	row("Sensitivity") = item.Sensitivity
	row("Importance") = item.Importance
	row("Flag") = item.FlagRequest
	row("IsHTML") = (item.BodyFormat = 2)

	dataTable.Rows.Add(row)
	Item_Count += 1
Next
Items = dataTable]]></code></stage><stage stageid="301b8904-3bcd-4b1b-805a-0a190d6a1f23" name="Item Count" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="563eaaf3-d093-48a1-89fe-5b6dcc312f81" name="Filter Expression" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d314f7c0-0af6-4cc5-a2e1-1b2cb29674d9" name="Entry ID" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5106a0ab-6cbb-410f-9e0d-113791019ded" name="Get Received Items (Advanced)" type="SubSheetInfo"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Lists Inbox items matching the filter provided

Eg1 [From]='Mike Coworker' AND [unread]=False

Eg2 [Unread]=True AND [ReceivedTime] &gt;= '2018/01/01'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="38a5b9e1-f5ae-4293-96b5-8e39f6ddad5f" name="Start" type="Start"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." stage="Shared Mailbox" /></inputs><onsuccess>bb657ac6-ea98-4042-8df8-0bfec4fe5f42</onsuccess></stage><stage stageid="88b1aeeb-8765-4f0c-98b3-a64aa3effa2c" name="Item Count" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9952465-1c95-422d-9bfe-1735745d3012" name="Filter Expression" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d97db59-defd-4f2b-80a0-50ae2c87c68e" name="Outlook Folder ID" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="bb657ac6-ea98-4042-8df8-0bfec4fe5f42" name="Internal_Get Items" type="SubSheet"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>87fa8e80-f1f1-4329-8256-0224c2a2164c</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="036baecd-65dc-4916-9438-165b479478b1" name="Outlook Folder ID" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="7c584784-b258-4700-ae02-482668348ae9" name="Get Sent Items (Expert)" type="SubSheetInfo"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Lists Sent Items matching the query provided.

Eg1 @SQL=urn:schemas:httpmail:subject='Data Input'

Eg2 @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')"

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ecc59d78-3d95-4f68-8f6d-7dfa2ad7c6d4" name="Start" type="Start"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." stage="Shared Mailbox" /></inputs><onsuccess>ef7b49fa-9e40-4ce5-b6ac-67e5c3171164</onsuccess></stage><stage stageid="68c67a7a-d81f-4def-823b-761b317fc9f5" name="Item Count" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78a90b2a-607e-4d8d-8f04-7c3a81e8bf63" name="Filter Expression" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="920c79f3-90b3-487b-a30c-4e95162d5ecb" name="Outlook Folder ID" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="ef7b49fa-9e40-4ce5-b6ac-67e5c3171164" name="Internal_Get Items" type="SubSheet"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>88475529-0d3e-40b9-8ead-79cedfbdf8c6</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="89de27c3-f759-42a1-956d-49dc91baa367" name="Send Email" type="SubSheetInfo"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Sends an Email 

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2f285e28-d6bb-4e7b-be7b-2631c3a8ac84" name="End" type="End"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="120" /></stage><stage stageid="79296089-edc5-4338-bf95-6734ad47825d" name="Send Item" type="Code"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /></inputs><onsuccess>2f285e28-d6bb-4e7b-be7b-2631c3a8ac84</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")

Dim mail = app.CreateItem(0)
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve  
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
	
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next

End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.Subject = Subject

If Message_Is_HTML Then
	mail.BodyFormat = 2
	mail.HTMLBody = Message
Else
	mail.BodyFormat = 1
	mail.Body = Message
End If

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	mail.Attachments.Add(att)
Next

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	mail.Sensitivity = Sensitivity
Else
	mail.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	mail.Importance = Importance
Else
	mail.Importance = 1
End If

If Not String.IsNullOrEmpty(Account_Display_Name) Then
	Try
		Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")
		Dim aa As List(Of Account) = _nameSpace.Accounts.Cast(Of Account).ToList()
		Dim acct = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault()
		mail.SendUsingAccount(acct)
	Catch ex As System.Exception
		Dim ex1 As New System.Exception(VbCrlf + "Unable to find Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
		Throw ex1
	End Try
End If

mail.Save
mail.Send]]></code></stage><stage stageid="e8e74832-24e7-4d9b-977d-f3720a5f58a3" name="Subject" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9254c70d-8233-413f-a7c8-5b920c8d7595" name="To" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c4cefa2-e465-4d3a-adae-410a8e2d6b73" name="Message" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3106293e-e64d-4d13-9671-b39e8c6be771" name="Attachments" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9418ede2-db6d-4912-bcd8-209a495359dc" name="Save Attachments" type="SubSheetInfo"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>Downloads all attachments to a folder. 

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f3f87040-02dc-44e3-94ac-4e94444ce722" name="End" type="End"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2e36171f-a7a2-4de1-b778-bd029753aad5" name="Start" type="Start"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /></inputs><onsuccess>0ec3c501-009c-4736-9511-3b84c98dcc66</onsuccess></stage><stage stageid="0ec3c501-009c-4736-9511-3b84c98dcc66" name="Save Attachments" type="Code"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Folder Path" expr="[Folder Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Pattern" expr="[File Pattern]" /></inputs><onsuccess>f3f87040-02dc-44e3-94ac-4e94444ce722</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
If item Is Nothing Then Return

If Not Folder_Path.EndsWith("\") Then Folder_Path &="\"

For Each attachment As Object In item.Attachments
	If (attachment.Type = 1 OrElse attachment.Type = 5 OrElse attachment.Type = 6) AndAlso attachment.FileName Like File_Pattern Then
		attachment.SaveAsFile(Folder_Path & attachment.FileName)
	End If
Next
]]></code></stage><stage stageid="38d69990-6a5f-40ce-a4bb-541e49726b64" name="Folder Path" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f357ec6-15f4-4133-8da8-5061d4359d38" name="Entry ID" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a88d805-9f51-4298-9905-cb28610dae96" name="File Pattern" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">*.*</initialvalue><private /><alwaysinit /></stage><stage stageid="ad2e31ff-e5ef-4467-a348-13dc9a8a1acb" name="Save Attachment" type="SubSheetInfo"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>Downloads a specfic attachment to a folder. E.g. use cases are "*.txt" or "*.docx" etc.

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a8e9b1e1-4b0f-487d-89a5-6cacb4092be4" name="End" type="End"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2d1786e1-24e4-45da-b52c-bffa330fb007" name="Start" type="Start"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Name" narrative="Optional, Default value is *.* but common cases inlcude &quot;.docx&quot; , &quot;.pdf&quot; , &quot;.xlsx&quot; etc." stage="File Name" /></inputs><onsuccess>b1663b58-d99f-4f8e-9641-4b3db50ca615</onsuccess></stage><stage stageid="d2e8f631-485a-489a-8cbc-aac247d721f9" name="Folder Path" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7649073-c4eb-42b1-aaa4-7c50430a5cf3" name="Entry ID" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b7a4371-4fa0-4a3e-a132-5315118f7cae" name="File Name" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9a607b6-73e8-49ec-b2bc-a8032c0ab747" name="Save Attachments" type="SubSheet"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." expr="[Entry ID]" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." expr="[Folder Path]" /></inputs><onsuccess>a8e9b1e1-4b0f-487d-89a5-6cacb4092be4</onsuccess><processid>758f4938-75a1-4157-b0f7-2d9b99144d61</processid></stage><stage stageid="16e667f4-007c-48aa-91ad-4f253b96fc00" name="CC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc158b15-69a9-4850-a4e2-d67f53c55d87" name="BCC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="983656a5-d686-4ef0-ab54-aa50aa32e7d5" name="Delete Email" type="SubSheetInfo"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>Deletes a specific email item.

The Entry ID is the unique idenfier used to determine which email is to be deleted.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5f395532-0166-41e3-9087-6eb241347133" name="Start" type="Start"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>29bbbced-f689-4200-b43b-27e7b01a3c5d</onsuccess></stage><stage stageid="a191ef9e-e78a-4de9-901b-19e7ca766c72" name="End" type="End"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="29bbbced-f689-4200-b43b-27e7b01a3c5d" name="Delete" type="Code"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>a191ef9e-e78a-4de9-901b-19e7ca766c72</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Delete]]></code></stage><stage stageid="2d8d8f32-8e9d-49fc-a345-a25e3050ecac" name="Entry ID" type="Data"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1dcba3a-0e74-4632-809f-7b942c719eeb" name="Reply All to Email" type="SubSheetInfo"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>Reply to all Emails recipients of a specific email.

The &lt;Reply All to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-195" y="-60" w="150" h="120" /></stage><stage stageid="91e5fe6f-95fe-4c43-aac6-317ccb565fa8" name="End" type="End"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="719856cc-820a-4771-b362-9f0d98896f7b" name="Start" type="Start"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 to 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 to 2, default to 1." stage="Importance" /><input type="text" name="Subject" narrative="Optional. Any text entered will override the default reply subject." stage="Subject" /></inputs><onsuccess>a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96</onsuccess></stage><stage stageid="a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96" name="Reply All" type="Code"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /><input type="flag" name="Message_Is_HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Subject" expr="[Subject]" /></inputs><onsuccess>91e5fe6f-95fe-4c43-aac6-317ccb565fa8</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.ReplyAll

If String.IsNullOrEmpty(Subject) Then
	reply.Subject = item.Subject
Else
	reply.Subject = Subject
End If

If Message_Is_HTML Then
	reply.BodyFormat = 2
	reply.HTMLBody = Message & vbCrLf & item.HTMLBody
Else
	reply.BodyFormat = 1
	reply.Body = Message & vbCrLf & item.Body
End If

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	reply.Sensitivity = Sensitivity
Else
	reply.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	reply.Importance = Importance
Else
	reply.Importance = 1
End If

reply.Send]]></code></stage><stage stageid="c0de4880-e914-4cbd-9b40-fd4b87639b56" name="Entry ID" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4aa3eccc-d10e-460b-96ce-82f3d86a5c36" name="Message" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="502b5d9b-0ef4-4f7d-9e45-2740f2866f3a" name="Forward Email" type="SubSheetInfo"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>Forward Email to recipients (To/CC/BCC) including (Message) as input parameters.

The &lt;Forward Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-195" y="-105" w="150" h="150" /></stage><stage stageid="d398f6bf-9903-432b-9d08-93ca68a5ce15" name="End" type="End"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b5542c2e-3ef3-4636-82e6-10fcb6b9f5ef" name="Entry ID" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd6ecc76-eb50-4203-95cd-c77e9fcf2ad5" name="Message" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9886ff21-e65d-440d-b60a-9869153650be" name="Forward" type="Code"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="flag" name="Message_Is_HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Subject" expr="[Subject]" /></inputs><onsuccess>d398f6bf-9903-432b-9d08-93ca68a5ce15</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim mail = item.Forward
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next

End If

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve	
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC
	Next

End If
	
If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

If String.IsNullOrEmpty(Subject) Then
	mail.Subject = item.Subject
Else
	mail.Subject = Subject
End If

If Message_Is_HTML Then
	mail.BodyFormat = 2
	mail.HTMLBody = Message & vbCrLf & item.HTMLBody
Else
	mail.BodyFormat = 1
	mail.Body = Message & vbCrLf & item.Body
End If

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	mail.Sensitivity = Sensitivity
Else
	mail.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	mail.Importance = Importance
Else
	mail.Importance = 1
End If

mail.Save
mail.Send]]></code></stage><stage stageid="9a9158e0-2caf-4e8b-8277-bcfa3f0b8565" name="To" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fba137b6-ad3b-48a5-b887-6302a10956ec" name="CC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d683ac76-a352-4994-89a5-d8a249f84648" name="BCC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ed52409-4c74-4cd4-8b16-9e9d057097b4" name="Start" type="Start"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 to 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 to 2, default to 1." stage="Importance" /><input type="text" name="Subject" narrative="Optional. Any text entered will override the default forwarding subject." stage="Subject" /></inputs><onsuccess>9886ff21-e65d-440d-b60a-9869153650be</onsuccess></stage><stage stageid="c36190da-7569-4737-a401-bec5b006c53f" name="Start" type="Start"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 and 2 default to 1." stage="Importance" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /></inputs><onsuccess>79296089-edc5-4338-bf95-6734ad47825d</onsuccess></stage><stage stageid="6e74a6d0-d073-418d-bcee-5efe9f5733bb" name="Sub Folder" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df4f0bad-ced5-4315-8edc-e3138d7a7123" name="Sub Folder" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80516df7-3359-4f2c-8547-9312e5b237c2" name="Items" type="Collection"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="195" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email" /><field name="Importance" type="number" description="Importance of an email" /><field name="Flag" type="text" description="Flag status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="88475529-0d3e-40b9-8ead-79cedfbdf8c6" name="End" type="End"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="87fa8e80-f1f1-4329-8256-0224c2a2164c" name="End" type="End"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="93f4c073-8a54-4ee0-9b01-776c516fec9d" name="Reply to Email" type="SubSheetInfo"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>Reply to Email sender of a specific email.

The &lt;Reply to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-165" y="-60" w="150" h="120" /></stage><stage stageid="7273229e-a2d0-4468-a343-efaf656b1598" name="End" type="End"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f68ab080-2e34-44d9-93af-67409139a21d" name="Start" type="Start"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 to 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 to 3, default to 1." stage="Importance" /><input type="text" name="Subject" narrative="Optional. Any text entered will override the default reply subject." stage="Subject" /></inputs><onsuccess>52a97793-74c5-49d7-b4fc-55d03d5b81a2</onsuccess></stage><stage stageid="52a97793-74c5-49d7-b4fc-55d03d5b81a2" name="Reply" type="Code"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /><input type="flag" name="Message_Is_HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Subject" expr="[Subject]" /></inputs><onsuccess>7273229e-a2d0-4468-a343-efaf656b1598</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.Reply

If String.IsNullOrEmpty(Subject) Then
	reply.Subject = item.Subject
Else
	reply.Subject = Subject
End If

If Message_Is_HTML Then
	reply.BodyFormat = 2
	reply.HTMLBody = Message & vbCrLf & item.HTMLBody
Else
	reply.BodyFormat = 1
	reply.Body = Message & vbCrLf & item.Body
End If

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	reply.Sensitivity = Sensitivity
Else
	reply.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	reply.Importance = Importance
Else
	reply.Importance = 1
End If

reply.Send
]]></code></stage><stage stageid="b129ab89-df26-4975-a3b1-30127f6e78af" name="Entry ID" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-165" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34d6dbc0-3597-4b72-8a65-5a90f164b75a" name="Message" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da3ecbf5-d75b-47d2-90f4-fa09e80b656b" name="Move Email to Inbox Sub Folder" type="SubSheetInfo"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>Moves an email to a subfolder within the inbox folder.

The Entry ID is the unique idenfier used to determine which email is to be moved.

Example
Inbox to Inbox\SubFolder </narrative><display x="-180" y="-60" w="150" h="120" /></stage><stage stageid="9033fc52-da65-4e8d-92a5-b67a33a0379a" name="Start" type="Start"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Destination Folder" narrative="Mandatory. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Destination Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account to move the email to. Default account is used if omitted." stage="Account Display Name" /></inputs><onsuccess>3fa82add-9fd2-4264-8fbe-02536dae2237</onsuccess></stage><stage stageid="5461bd38-d7d7-4a3c-b23b-35857aa8a5ef" name="End" type="End"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="New Entry ID" narrative="Returns the new Entry ID from the Moved Email Object" stage="New Entry ID" /></outputs></stage><stage stageid="3fa82add-9fd2-4264-8fbe-02536dae2237" name="Move" type="Code"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Destination Folder" expr="[Destination Folder]" /><input type="text" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /></inputs><outputs><output type="text" name="New Entry ID" stage="New Entry ID" /></outputs><onsuccess>5461bd38-d7d7-4a3c-b23b-35857aa8a5ef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim folder As Folder
Dim item = _nameSpace.GetItemFromID(Entry_ID)

If Not String.IsNullOrEmpty(Account_Display_Name) Then
	Try
		Dim aa As List(Of Account) = _nameSpace.Accounts.Cast(Of Account).ToList()
		folder = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Outlook_Folder_ID)
	Catch ex As System.Exception
		Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
		Throw ex1
	End Try
Else
	folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)
End If

If Destination_Folder <> "" Then
	For each name as string in Destination_Folder.Split("\")
		Try
			folder = folder.Folders(name)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to locate folder '" + name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Next
End If

New_Entry_ID = item.Move(folder).EntryID]]></code></stage><stage stageid="18da11cb-f313-4820-b7e7-8c9bd6f12675" name="Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-180" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41304024-3f20-476e-b6bf-1e12ff6ead9a" name="Outlook Folder ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>MS Outlook - OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-180" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="9d9afabb-e65b-471a-8a66-913480436037" name="Destination Folder" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9964be-3e71-4206-88f6-74e09c1f1415" name="File Name" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">
</initialvalue><private /><alwaysinit /></stage><stage stageid="30cb5e90-86c2-4790-9204-89ddbd70d778" name="Get Sent Items (Basic)" type="SubSheetInfo"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Lists Sent Items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4070f66-8405-4c2f-87f1-4d34a75561b8" name="Start" type="Start"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sent To" narrative="Optional. The To display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Sent To" /><input type="text" name="Copied To" narrative="Optional. The CC display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a semi-colon separated list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Copied To" /><input type="datetime" name="Sent Earliest" narrative="Optional. The earliest date to search from." stage="Sent Earliest" /><input type="datetime" name="Sent Latest" narrative="Optional. The latest date to search to." stage="Sent Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." stage="Shared Mailbox" /></inputs><onsuccess>69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c</onsuccess></stage><stage stageid="905b5da3-5ab3-4c57-8c5f-33ed85e5c4a8" name="Item Count" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97127f0f-f77c-4b85-9c18-18e6556fbfa4" name="Outlook Folder ID" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="5097438d-04b5-4688-9fd5-c93dbe0d26c4" name="Internal_Get Items" type="SubSheet"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="285" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>20b10fc6-ced8-4cf1-b991-19fbff8e181a</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="20b10fc6-ced8-4cf1-b991-19fbff8e181a" name="End" type="End"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="345" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="2fc294dd-0be1-48ae-85b7-f811d7015b19" name="Filter Expression" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29639c3b-dcc7-4427-bc90-57319d2ae6e8" name="Sent Earliest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="-45" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28d1cc10-ae57-4ea2-b01c-b9a8bded12ad" name="Sent Latest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="0" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3d2888f-df21-47e3-8405-7f6f4564a71b" name="Clean" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="240" /><onsuccess>5097438d-04b5-4688-9fd5-c93dbe0d26c4</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="b1ccbeb8-4c66-4932-a81f-c8c55c156731" name="Copied To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67f7a5fe-f2d5-480e-be1c-6a18d5a79508" name="Sent To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c54a3bb-1c08-4f3e-9ab2-3ceae0478554" name="Get Received Items (Basic)" type="SubSheetInfo"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Lists Inbox items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b5946711-b185-44bd-b97e-cfe91f9b05a2" name="Item Count" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="300" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32bea08c-862f-440c-bc83-c05ca252286c" name="Internal_Get Items" type="SubSheet"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="420" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>717dbab6-6472-4f2d-9370-0ae2d5893829</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="cc00500b-17df-437f-816e-59bd2b9b6a11" name="Outlook Folder ID" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="0a3d1d6c-696a-4e50-a124-af43552a1c59" name="Sub Folder" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="717dbab6-6472-4f2d-9370-0ae2d5893829" name="End" type="End"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="480" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="fa7fc102-6824-4d83-9171-9b36913fb323" name="Subject" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0149c9d2-5846-4f23-8eb9-e639be1f7435" name="Start" type="Start"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sender Name" narrative="Optional. The From display name, which might be a name (eg John Smith) or email address (eg admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the From field." stage="Sender Name" /><input type="text" name="Sender Email" narrative="Optional. The sender email address." stage="Sender Email" /><input type="datetime" name="Received Earliest" narrative="Optional. The earliest date to search from." stage="Received Earliest" /><input type="datetime" name="Received Latest" narrative="Optional. The latest date to search to." stage="Received Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="flag" name="Include Read" narrative="Optional, default True" stage="Include Read" /><input type="flag" name="Include Unread" narrative="Optional, default True" stage="Include Unread" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." stage="Shared Mailbox" /></inputs><onsuccess>6b969896-5d1a-4f3c-9112-66df0d584150</onsuccess></stage><stage stageid="9d18dd85-49e7-4434-b66e-2f6bdedb4dad" name="Received Earliest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="135" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3fc67bd-0f5c-4d13-bb51-0b378401d726" name="Received Latest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="180" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f180ecf8-78fc-4b37-8a12-69b310abf874" name="Filter Expression" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b969896-5d1a-4f3c-9112-66df0d584150" name="Sender Name?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="[Sender Name]&lt;&gt;&quot;&quot;" /><ontrue>1eaeb40e-7ba5-4437-86fb-8490d10d7e99</ontrue><onfalse>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onfalse></stage><stage stageid="1eaeb40e-7ba5-4437-86fb-8490d10d7e99" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:sendername LIKE '&quot;&amp;Replace([Sender Name], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="cf1214bb-b7fd-4fec-ab0b-dde176bcca9a" name="Clean Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="330" /><onsuccess>2bc9f050-ac4b-4e53-833b-77f8fd75e0ab</onsuccess><calculation expression="Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="0a1a6586-94ea-4da3-a8af-cb1ea4a13659" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>f24225cb-32e2-4f31-b9f8-f75390a670a9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="747ae4c1-94e5-4288-a0cf-573663610ed9" name="Subject?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>0a1a6586-94ea-4da3-a8af-cb1ea4a13659</ontrue><onfalse>f24225cb-32e2-4f31-b9f8-f75390a670a9</onfalse></stage><stage stageid="4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20" name="Sender Email?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="[Sender Email]&lt;&gt;&quot;&quot;" /><ontrue>9153efb4-8f18-48c4-9833-9f3364eeea6a</ontrue><onfalse>747ae4c1-94e5-4288-a0cf-573663610ed9</onfalse></stage><stage stageid="9153efb4-8f18-48c4-9833-9f3364eeea6a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>747ae4c1-94e5-4288-a0cf-573663610ed9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:senderemail LIKE '&quot;&amp;Replace([Sender Email], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="a72f4464-acf3-4e70-825d-a0ae628fb772" name="Sender Name" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="-45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da4b8732-2d70-4ad2-8757-603e1aa7d769" name="Sender Email" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2bc9f050-ac4b-4e53-833b-77f8fd75e0ab" name="Filter Expression?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="375" /><decision expression="[Filter Expression]&lt;&gt;&quot;&quot;" /><ontrue>cf067e4c-9a82-41b9-acb9-9643cb195100</ontrue><onfalse>32bea08c-862f-440c-bc83-c05ca252286c</onfalse></stage><stage stageid="cf067e4c-9a82-41b9-acb9-9643cb195100" name="Prepend" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="375" /><onsuccess>32bea08c-862f-440c-bc83-c05ca252286c</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;[Filter Expression]" stage="Filter Expression" /></stage><stage stageid="b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=0&quot;" stage="Filter Expression" /></stage><stage stageid="e3df62cc-bf1a-4ea1-8c56-de279ca09c6b" name="Sent To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Sent To]&lt;&gt;&quot;&quot;" /><ontrue>efe53d68-d29a-4388-afbd-b2866cb03c87</ontrue><onfalse>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onfalse></stage><stage stageid="efe53d68-d29a-4388-afbd-b2866cb03c87" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displayto LIKE '&quot;&amp;Replace([Sent To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="3ac23120-2c22-4fc7-b0ef-bbbc45a030b1" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="4df1ab8f-9b5e-4224-976f-67c1073cabfb" name="Subject?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>3ac23120-2c22-4fc7-b0ef-bbbc45a030b1</ontrue><onfalse>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onfalse></stage><stage stageid="4cc56a65-c57b-4daa-86ed-8033d486e7b9" name="Copied To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Copied To]&lt;&gt;&quot;&quot;" /><ontrue>9533d2e4-6aa7-4fd8-84aa-328875bd17d3</ontrue><onfalse>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onfalse></stage><stage stageid="9533d2e4-6aa7-4fd8-84aa-328875bd17d3" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displaycc LIKE '&quot;&amp;Replace([Copied To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>e42900f2-2408-444c-b8c0-7077cfc7ab63</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Sent Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c" name="Earliest?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="IsDate([Sent Earliest])" /><ontrue>c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4</ontrue><onfalse>e42900f2-2408-444c-b8c0-7077cfc7ab63</onfalse></stage><stage stageid="e42900f2-2408-444c-b8c0-7077cfc7ab63" name="Latest" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="IsDate([Sent Latest])" /><ontrue>bbfb0329-e644-42ca-8e5b-91a771933be0</ontrue><onfalse>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onfalse></stage><stage stageid="bbfb0329-e644-42ca-8e5b-91a771933be0" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Sent Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f47c58b8-fa7d-43e4-9879-9489b3c45b64" name="Get Sent Items (Advanced)" type="SubSheetInfo"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Lists Sent Items matching the filter provided.

Eg1 [Subject]='Exception Report'

Eg2 [To]='Mike Colleague' OR [To]='Mike Coworker'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="120" /></stage><stage stageid="8eb9cd1f-4784-4a10-b9f5-9257375fa249" name="Start" type="Start"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [To]='Mike Colleague' AND [SentOn]&gt;='15 January 2018 09:00' AND [SentOn]&lt;='19 January 2018 17:00'" stage="Filter Expression" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." stage="Shared Mailbox" /></inputs><onsuccess>86fdf439-537b-402e-bf87-83a0aa0186aa</onsuccess></stage><stage stageid="0db44ad5-c704-4846-be43-d47afae7ddff" name="Item Count" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="225" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7038439e-d7a5-4958-a2a6-b7076ad6e877" name="Filter Expression" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8b0ade5-d70a-469c-b475-5e38be742df6" name="Outlook Folder ID" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="86fdf439-537b-402e-bf87-83a0aa0186aa" name="Internal_Get Items" type="SubSheet"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>9be25db3-9033-4941-81dc-97124e0e4917</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="9be25db3-9033-4941-81dc-97124e0e4917" name="End" type="End"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="f223606b-95bb-4058-9217-4ed244648a97" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>b846e5cd-ed99-489e-9671-08f3d63a07ff</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Received Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="020266f4-5352-4942-9ca5-2b5b2c28ba9e" name="Earliest?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="IsDate([Received Earliest])" /><ontrue>f223606b-95bb-4058-9217-4ed244648a97</ontrue><onfalse>b846e5cd-ed99-489e-9671-08f3d63a07ff</onfalse></stage><stage stageid="b846e5cd-ed99-489e-9671-08f3d63a07ff" name="Latest" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="IsDate([Received Latest])" /><ontrue>46ee2d04-b46b-4315-bd1a-abadb043b648</ontrue><onfalse>4d51e55a-9744-4090-b1d2-83bc995adeb5</onfalse></stage><stage stageid="46ee2d04-b46b-4315-bd1a-abadb043b648" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>4d51e55a-9744-4090-b1d2-83bc995adeb5</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Received Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="dd6e1514-fd6a-4d97-905d-55b4c8076300" name="Include Unread" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4931c0a2-5942-4727-aa8e-c354a58dc3d9" name="Include Read" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4d51e55a-9744-4090-b1d2-83bc995adeb5" name="Unread Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="225" /><decision expression="[Include Unread]=True AND [Include Read]=False" /><ontrue>b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9</ontrue><onfalse>1d38891a-a1cf-47ac-952b-2e4f9879a947</onfalse></stage><stage stageid="1d38891a-a1cf-47ac-952b-2e4f9879a947" name="Read Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="225" /><decision expression="[Include Read]=True AND [Include Unread]=False" /><ontrue>9ec12e81-08b4-4b01-a8ea-02ed52fafbf6</ontrue><onfalse>b8b8afa2-e3b6-490d-b4d1-b636fc831a96</onfalse></stage><stage stageid="9ec12e81-08b4-4b01-a8ea-02ed52fafbf6" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="270" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=1&quot;" stage="Filter Expression" /></stage><stage stageid="b8b8afa2-e3b6-490d-b4d1-b636fc831a96" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="225" w="10" h="10" /><onsuccess>faa2ec03-a715-4589-a137-e014002ddca2</onsuccess></stage><stage stageid="faa2ec03-a715-4589-a137-e014002ddca2" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="330" w="10" h="10" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess></stage><stage stageid="59dcb54a-0ca1-49a8-9543-3581d721886e" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="330" w="10" h="10" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess></stage><stage stageid="fd8830ea-eced-4fa2-8bbb-3537fca5a68b" name="Get Received Items (Expert)" type="SubSheetInfo"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Lists Inbox Items matching the filters provided.

Eg1 @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND urn:schemas:httpmail:read=0

Eg2 @SQL=urn:schemas:httpmail:fromname='The Boss' AND urn:schemas:httpmail:subject LIKE '%Urgent%'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fcb20265-28c5-415d-a083-d217916df151" name="Start" type="Start"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." stage="Shared Mailbox" /></inputs><onsuccess>4828b977-8cfe-494b-9d2a-5ac65c8b6834</onsuccess></stage><stage stageid="b0aadff2-6a6a-4209-aea3-5c4ad4d2161d" name="Item Count" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea0ad1b6-12ef-43fb-b290-11b329c2ca27" name="Filter Expression" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef288d41-1da1-46bc-ad92-e063e9e51137" name="Outlook Folder ID" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="4828b977-8cfe-494b-9d2a-5ac65c8b6834" name="Internal_Get Items" type="SubSheet"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied." expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>829daa3f-c9ac-41b0-b6c9-39caf538c87e</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="829daa3f-c9ac-41b0-b6c9-39caf538c87e" name="End" type="End"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d2fdf5b2-86dd-4f37-86cb-4bc8cc7b80b9" name="Sub Folder" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c56f0cd2-e7f6-4a5d-a859-901d8bd2b9a1" name="Mark Email As Read" type="SubSheetInfo"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>Marks a specific email as read.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="649120fc-a08c-44c6-949e-01c69a4c4d56" name="Start" type="Start"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>55267a5b-cc4a-4cc5-b141-a7c9a032924a</onsuccess></stage><stage stageid="af27f0d8-4b35-4ebb-a259-04758f73dcc3" name="End" type="End"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="55267a5b-cc4a-4cc5-b141-a7c9a032924a" name="Mark Read" type="Code"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>af27f0d8-4b35-4ebb-a259-04758f73dcc3</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = False]]></code></stage><stage stageid="84646f19-6d1f-4d92-a977-3058f4c582ff" name="Entry ID" type="Data"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b9646e7-1b30-4f67-833a-3121344437ab" name="Mark Email As Unread" type="SubSheetInfo"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>Marks a specific email as unread.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4868521a-c295-4724-960a-b8a60dceae6c" name="Start" type="Start"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa</onsuccess></stage><stage stageid="2b8b0ae1-c806-485b-9b87-0875c17ba062" name="End" type="End"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa" name="Mark Unread" type="Code"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>2b8b0ae1-c806-485b-9b87-0875c17ba062</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = True]]></code></stage><stage stageid="9e08a8d3-4d6c-49e8-856f-664eb6e5e175" name="Entry ID" type="Data"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7643fd53-5368-45a9-8412-89b5d574c204" name="Items" type="Collection"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="165" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="4c60b4ac-e0f8-4ef7-870d-f88f5a6edade" name="Items" type="Collection"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="165" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="4ee04419-4388-4a3a-87f2-06fbe4585fdf" name="Items" type="Collection"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="180" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="c7be666f-19fe-421d-bb4d-95085817f37e" name="Items" type="Collection"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="255" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="ecaed312-c8a9-4755-b673-bdf8ce1ba59d" name="Items" type="Collection"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="195" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="2d58da80-f8b4-414e-80bb-2d87d9ce0cc4" name="Items" type="Collection"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="195" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="dc080a71-625d-45b0-bf8d-1cf2a77b3b48" name="Note2" type="Note"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative>NOT FOR PUBLICATION</narrative><display x="15" y="-135" w="150" h="30" /><font family="Segoe UI" size="20" style="Regular" color="FF0000" /></stage><stage stageid="0b72d21e-2753-42b8-846a-bae349f2c179" name="Message" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c46c352-79de-438b-9ce3-422dcc0fb10b" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>a3d2888f-df21-47e3-8405-7f6f4564a71b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b" name="Message?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>0c46c352-79de-438b-9ce3-422dcc0fb10b</ontrue><onfalse>a3d2888f-df21-47e3-8405-7f6f4564a71b</onfalse></stage><stage stageid="9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f24225cb-32e2-4f31-b9f8-f75390a670a9" name="Message?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a</ontrue><onfalse>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onfalse></stage><stage stageid="b4632ee7-bf2b-4b55-9dca-e9a7fafca663" name="Message" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a24cb43c-102d-4964-a916-09e44168a4c1" name="Input" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1fdeae66-adae-4ae5-bf8d-61ddb71fc904" name="Output" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="48aa1db4-2765-4c9e-a7b6-fb0989ed93f3" name="Subject" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8eb18cc7-2d34-4dba-bcd7-32cd82d688c9" name="Input" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e48a94c8-7d5d-40ad-89d8-4d953b6791c3" name="Output" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="94557554-0d80-4cc4-ae14-8806264969e5" name="Input" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="416d4ee0-5f16-4282-bec4-42328e03acb4" name="Output" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="42b922f9-dd32-475f-a8ec-67ad770ce8ad" name="Input" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e6d1a1b7-3b51-4ee1-8756-585e34aa936d" name="Output" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="71f3829b-c755-4e45-a175-c3b7075af273" name="Input" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e7e22486-0749-492f-8e67-586aa2c271ab" name="Output" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="210" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="1846bfcf-e7b1-48ca-83fe-bd2b5a1bcbeb" name="Input" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5cd2cea7-99cf-42af-b4eb-7cf6b2d62958" name="Output" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="e33d69e8-faec-46fc-a225-2ac747bddd65" name="Input" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49f3281d-7765-48aa-8547-fc87ba0bd110" name="Output" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="5cfc97b8-86c5-4a5b-ae62-71e55abd988d" name="Input" type="Block"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="73da0a90-8718-4f31-a8dd-2a56a45265ed" name="Input" type="Block"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-270" y="15" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ec957629-3e89-4cd3-963b-fb0ab19dc116" name="Input" type="Block"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-240" y="30" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bbd7d428-080a-47f0-8431-837da5d25290" name="Input" type="Block"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-270" y="15" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e15d0e55-ef6a-4836-bdb5-3ccf92b362fa" name="Input" type="Block"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="-270" y="0" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e470b377-ed2e-449e-b7b1-5954285a57c1" name="Input" type="Block"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d24d2f3f-a3dd-4e54-8c2e-dd886cb74e42" name="Input" type="Block"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="07fac98a-a954-4be7-9aff-79b761ec658d" name="Input" type="Block"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="023dcb4e-5dbd-4015-a4a4-d9825ca509b2" name="Input" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="15" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="45c2b8cf-a653-4a26-bc25-a2009c8d3501" name="Input" type="Block"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ad7ba6e4-ef09-4fac-9dea-f535bb81aac2" name="Input" type="Block"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dd8c58ce-3a4e-44a6-b4d8-248309fac791" name="Default" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="150" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="63823440-c2ee-48b1-a2db-527efc5b94f7" name="Note3" type="Note"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-45" w="480" h="210" /></stage><stage stageid="528d4d34-61bc-4a7b-b329-4bda0e6309fa" name="Note4" type="Note"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="702f380f-35f2-4112-95d8-cdc6a3521101" name="Note3" type="Note"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-60" w="480" h="210" /></stage><stage stageid="13bf2bea-2785-44ac-bda2-1e04f3c2a1e1" name="Note4" type="Note"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="b1663b58-d99f-4f8e-9641-4b3db50ca615" name="Clean Up" type="Calculation"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-75" /><onsuccess>d9a607b6-73e8-49ec-b2bc-a8032c0ab747</onsuccess><calculation expression="Replace([File Name],&quot;&quot;&quot;&quot;,&quot;&quot;)" stage="File Name" /></stage><stage stageid="80208144-c05c-4b32-bd6a-de8320da32e5" name="New Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ac7c70b-7149-4e53-b9be-f394bb9b4884" name="Flag Email for Follow-up" type="SubSheetInfo"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><narrative>Flag Email for follow-up. 

For a list of valid MarkInterval values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olmarkinterval</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e201c8fb-eac5-4e56-8f83-9bc677527928" name="Start" type="Start"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="number" name="MarkInterval" narrative="Optional. An integer between 0 to 5, default to 0." stage="MarkInterval" /></inputs><onsuccess>4cfc4863-34f3-4898-9aaf-0d5a37f44f46</onsuccess></stage><stage stageid="a7379a45-a2eb-4de3-982a-96d1805c6c1d" name="End" type="End"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="aaabcfc7-710d-44e2-8f04-3b12d767bb4d" name="Clear Email Flag" type="SubSheetInfo"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><narrative>Clear any flag on the mail item</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="67c5bcb9-a35b-4287-b931-cfc87368306e" name="Start" type="Start"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>4b8f6338-6405-46e7-9f18-2e2918b390f8</onsuccess></stage><stage stageid="3373212f-21fd-44d6-8b84-9679826c6f29" name="End" type="End"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4cfc4863-34f3-4898-9aaf-0d5a37f44f46" name="Flag for Follow-up" type="Code"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="number" name="MarkInterval" expr="[MarkInterval]" /></inputs><onsuccess>a7379a45-a2eb-4de3-982a-96d1805c6c1d</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)

If MarkInterval = Int(MarkInterval) AndAlso (MarkInterval >= 0 And MarkInterval <= 5)
	item.MarkAsTask(MarkInterval)
Else
	item.MarkAsTask(0)
End If

item.Save]]></code></stage><stage stageid="b86f4163-c6c0-4e81-a3c2-a7eddbf259b4" name="Entry ID" type="Data"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79bd743f-aa37-4b9b-a2cc-0cc57d3c04b0" name="Input" type="Block"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4b8f6338-6405-46e7-9f18-2e2918b390f8" name="Clear Email Flag" type="Code"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>3373212f-21fd-44d6-8b84-9679826c6f29</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)

item.ClearTaskFlag()
item.Save]]></code></stage><stage stageid="df522988-f368-46a5-acc1-9f4a2edd9fab" name="Entry ID" type="Data"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb9f58a-7fdb-4fa9-ac96-41b8f6efca67" name="Input" type="Block"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d9f819c1-6e82-409d-8378-22685f242e9e" name="MarkInterval" type="Data"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f0fced85-9828-47cd-8d36-5595e09f0325" name="Message Is HTML" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="dd2e5107-00db-41de-aa81-7d5c28e9b323" name="Sensitivity" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="300" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a8c5f558-dd4e-4928-9b45-ea935c0f26fc" name="Importance" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="330" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="0c1ca27c-5896-4f09-b514-1c90764e1c11" name="Subject" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6319c35-4ea7-4024-abce-d433764df19e" name="Default" type="Block"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="ad2b7a3b-e092-4f78-8418-27862772c3d3" name="Default" type="Block"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-270" y="240" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d5f3cad1-86e7-4f52-8253-127e4307edb7" name="Message Is HTML" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="195" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ebb23ff2-a0f9-4a36-a8a2-c4ef904f823b" name="Sensitivity" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="225" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="624632d9-714f-467a-b804-53d1ec3db0f4" name="Importance" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="255" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="72450aab-62ff-462f-803b-8124062a48d9" name="Default" type="Block"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-240" y="165" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d3f52510-bde5-463c-9152-8f7927ee6775" name="Message Is HTML" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="bab4c897-535b-46c3-9e96-01838cb7a4fa" name="Sensitivity" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="841a6d43-09cd-4721-acbc-46a3d20373cb" name="Importance" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="8791fcb3-e67d-4ca9-940d-4c78c968ab22" name="Default" type="Block"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="86b637f7-ca1c-4712-9d3a-b262db057ced" name="Message Is HTML" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="78dc1a2f-8326-4358-8af9-30c414f1615e" name="Sensitivity" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f77242d9-85e0-4e4e-94cb-abaa9725b439" name="Importance" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="300" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="bc6e7aad-77a4-4b11-95fb-57e9d4657493" name="Default" type="Block"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-270" y="210" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b51c6e7e-4ce2-471b-8c49-48ff4fa379d5" name="Subject" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="833df9b5-6a05-4c01-961b-51ef388c8754" name="Subject" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-165" y="120" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61f0b391-b490-4e1e-8152-29067d824b97" name="Account Display Name" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c75ef1e-1611-416f-9300-039e2269a265" name="Account Display Name" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3923afc3-03a2-42be-99c0-16cbf0442d50" name="Account Display Name" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4542312b-8b95-4508-b3d7-c72b68fe8ab8" name="Account Display Name" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7ffd53a-6854-4578-8735-34e54fd8c28b" name="Account Display Name" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6b3924a-944a-4fd3-839b-1df5717f7d1f" name="Account Display Name" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2086518-1060-48c9-ba60-7311221c3249" name="Account Display Name" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75e46254-ea02-4402-b674-1e84a1e5da81" name="Account Display Name" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db078ff7-ab55-4a2a-bfd7-0eb71d7c1c75" name="Account Display Name" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-180" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5b6db12-f05c-4b8a-be08-14422844a314" name="Shared Mailbox" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e55c74d1-2b68-465c-8e57-796251a73ec9" name="Shared Mailbox" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4fc9286-64de-4632-bb68-5e7b477003e8" name="Shared Mailbox" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e6a86018-1551-4c49-9e31-6d23439e09bc" name="Shared Mailbox" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied.</narrative><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54555edf-e9c5-4150-aabe-c5eb598ca03e" name="Shared Mailbox" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94561e3c-da3c-4491-ba60-553d82758cef" name="Shared Mailbox" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied.</narrative><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66d61d09-d06f-40fb-837b-99431f991866" name="Shared Mailbox" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a vaue is supplied.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="6f9680f1-616c-4884-b58c-42ed51446377" name="Utility - Collection Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Collection Manipulation" version="7.0.1.49890" bpversion="7.1.1.65484" narrative="Utility functions for manipulating collections." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /></preconditions><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="53950e2c-2499-41fc-aed2-207a6c7431fd" type="Normal" published="False"><name>Utility Functions Test</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8e5be7a-93aa-4322-99bf-00edea37bbc2" type="Normal" published="True"><name>Sort Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ffab882f-007c-48a5-8f84-8f5f1bfd4d6a" type="Normal" published="True"><name>Reverse Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd8fefb9-4622-4ea7-8287-e64b86d7e513" type="Normal" published="True"><name>Merge Collection</name><view><camerax>-100</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76943739-36b9-46bc-8f95-e1b6342bc8a6" type="Normal" published="True"><name>Split Collection</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a0cf6615-20c0-4910-9990-0f79f5f30bca" type="Normal" published="True"><name>Transpose Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a9f3108d-ca87-4551-b567-9c64ef05cf0c" type="Normal" published="True"><name>Filter Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e277cc2b-72b8-47e9-8a1b-e8530eb19a09" type="Normal" published="True"><name>Get Collection Fields</name><view><camerax>42</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4d41bfc8-e552-41ae-9e45-65dc3d1f7276" type="Normal" published="True"><name>Field Exists</name><view><camerax>144</camerax><cameray>-41</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bcde64eb-f856-4440-a6c0-d83f40f0cf4b" type="Normal" published="True"><name>Rename Collection Fields</name><view><camerax>207</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="198ce3c6-ecbf-4203-a609-b15429defe0e" type="Normal" published="True"><name>Read Collection Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="05992810-1be4-4455-84e8-10579308ab87" type="Normal" published="True"><name>Set Collection Field</name><view><camerax>276</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a9aa259-fe07-4035-8411-23737559c975" type="Normal" published="True"><name>Collection Contains Field</name><view><camerax>0</camerax><cameray>168</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a" type="Normal" published="True"><name>Collection Contains Value</name><view><camerax>-93</camerax><cameray>-24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cdf2a7f1-a351-441a-8d36-bc92af66650a" type="Normal" published="True"><name>Copy Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f694a8-5305-4a38-9b41-a98998f2f7ca" type="Normal" published="True"><name>Append Rows to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a474299b-5c1c-4873-a3af-4dd0d3bd03ff" type="Normal" published="True"><name>Append Field (Text)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65451129-b7a2-4c2f-a12d-9086bd314f53" type="Normal" published="True"><name>Append Field (Number)</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9" type="Normal" published="True"><name>Rename Field</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1d7b6202-d743-4485-9101-839f4651c406" type="Normal" published="True"><name>Delete Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df662579-558c-4cc9-88df-8c680b67b41d" type="Normal" published="True"><name>Delete Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a772458-463d-46cf-8451-6cf5b4aeae30" type="Normal" published="True"><name>Remove Null Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e3b975-d485-49a3-b962-864d13a96e05" type="Normal" published="True"><name>Set Column Names From First Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="87541f35-d834-4d99-8fd3-16ec994a9990" type="Normal" published="True"><name>Set Column Names From Expected Collection</name><view><camerax>0</camerax><cameray>-62</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d1eee74f-1582-4c3e-96c8-b94f1535d7e1" type="Normal" published="True"><name>Fill Blanks</name><view><camerax>-195</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eb03a051-75a8-4093-a383-6c6fecfbb736" type="Normal" published="True"><name>Remove dots from headers</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fa6ed646-8ae1-479e-9845-b1dc9ac3b560" type="Normal" published="True"><name>Remove Empty Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>Microsoft.VisualBasic</import><import>System.Collections</import><import>System.Reflection</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public CommonDictionary as New System.Collections.Generic.Dictionary(Of String, String)

Private Iterator as Generic.IEnumerator(Of String)

Function CloneColumn(col As DataColumn) As DataColumn
	Dim tp = col.GetType()
	Return TryCast(
		tp.GetMethod("Clone", BindingFlags.Instance Or BindingFlags.NonPublic).
			Invoke(col, Nothing),
		DataColumn
	)
End Function

Function GetStringValue(row As DataRow, fieldName As String) As String
	Dim col As DataColumn = row.Table.Columns(fieldName)
	Dim val = row(fieldName)
	Select Case True
		Case IsDateColumn(col)
			Return CDate(val).ToString("d") 
		Case IsTimeColumn(col)
			Return CDate(val).ToString("T")
		Case IsDateTimeColumn(col)
			Return CDate(val).ToString("G")
		Case Else
			Return CStr(val)
	End Select
End Function

Function GetBPType(col As DataColumn) As String
	If col Is Nothing Then Return Nothing
	If Not col.ExtendedProperties.ContainsKey("bptype") Then Return Nothing
	Return col.ExtendedProperties("bptype").ToString()
End Function

Function IsDateColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "date")
End Function

Function IsTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "time")
End Function

Function IsDateTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "datetime")
End Function

Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function


private function GetBluePrismDAtaType(DotNetType AS Type) As String
   Select Case True
      Case DotNetType.Equals(GetType(Timespan))
         return "timespan"
      Case DotNetType Is GetType(DAteTime)
         return "datetime"
      Case DotNetType Is GetType(Decimal), _
				DotNetType Is GetType(Integer), _
					DotNetType Is GetType(Double), _
						DotNetType Is GetType(Single)
         return "number"
      Case DotNetType Is GetType(System.Drawing.Bitmap)
         return "image"
      Case DotNetType Is GetType(Byte())
         return "binary"
      Case DotNetType Is GetType(Boolean)
         return "flag"
      Case DotNetType Is GetType(System.Data.DataTable)
         return "collection"
      Case Else
         return "text"
   End Select
End Function


Private Function CloneDataRow(R As DataRow, ColumnCount As Integer) As Object()
	Dim RetVal(ColumnCount - 1) As Object
	For I As Integer = 0 to ColumnCount - 1
		RetVal(I) = R(I)
	Next

	Return RetVal
End Function]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1d87c6c0-f260-46fc-99c2-ffcbf6ee0497" name="Sort Collection" type="SubSheetInfo"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative>Sorts a collection according to the specified field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="785a8eca-82a6-43fe-9f16-1803844d88ce" name="Start" type="Start"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to sort." stage="Collection In" /><input type="text" name="Sort Field" narrative="The field to sort by." stage="Sort Field" /><input type="flag" name="Ascending Order" narrative="True to sort in ascending order." stage="Ascending Order" /></inputs><onsuccess>fbac0e5c-5410-45f1-98d7-646797398b04</onsuccess></stage><stage stageid="0c95c136-f8cf-49a1-98c0-a4c1e2334eca" name="End" type="End"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Sorted Collection" narrative="The sorted collection." stage="Collection Out" /><output type="flag" name="Success" narrative="True if sorting was successful." stage="Success" /><output type="text" name="Message" narrative="An error message when sorting failed." stage="Message" /></outputs></stage><stage stageid="e8e991cc-351b-4484-9825-b5c1f0d894d1" name="Collection Out" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fbac0e5c-5410-45f1-98d7-646797398b04" name="Sort Collection" type="Code"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Sort Field" expr="[Sort Field]" /><input type="flag" name="Ascending" expr="[Ascending Order]" /></inputs><outputs><output type="collection" name="Sorted Collection" stage="Collection Out" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0c95c136-f8cf-49a1-98c0-a4c1e2334eca</onsuccess><code><![CDATA[Try

 

            If Ascending Then

                        Collection.DefaultView.Sort = Sort_Field & " ASC"

            Else

                        Collection.DefaultView.Sort = Sort_Field & " DESC"

            End If

 

            Sorted_Collection = Collection.DefaultView.ToTable

 

            Success = True

            Message = ""

 

Catch e As Exception

            Success = False

            Message = e.Message

End Try]]></code></stage><stage stageid="6f6e54f2-77b8-4f24-ae2f-46a2143d9815" name="Ascending Order" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="2fb49db2-332e-4bdb-a52e-53546b2a25e8" name="Message" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8170a296-23ef-4f36-88ea-12b93bc41486" name="Success" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d46e7f41-9e7a-4a0a-b1be-d440d57e4020" name="Sort Field" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="adfd612b-98f8-4902-8526-2bda2e03f814" name="Get Collection Fields" type="SubSheetInfo"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative>Creates a collection with a Name and Datatype field which is then populated using the incoming collections field names and data types.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="73b6f098-584e-441e-8b2d-e231b971bdb2" name="Start" type="Start"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="A new collection will be created containing the collections field data." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to get the fields from." stage="Input Collection" /></inputs><onsuccess>39b91b36-f03d-4fa7-9bf2-47470e1d9703</onsuccess></stage><stage stageid="e2308e18-4f98-4f62-9ff6-a4c52222c3aa" name="End" type="End"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Fields" narrative="A collection containing the fields." stage="Fields" /></outputs></stage><stage stageid="39b91b36-f03d-4fa7-9bf2-47470e1d9703" name="Get Collection Fields" type="Code"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Fields" stage="Fields" /></outputs><onsuccess>e2308e18-4f98-4f62-9ff6-a4c52222c3aa</onsuccess><code><![CDATA[Fields = New DataTable()
Fields.Columns.Add("Field Name", GetType(String))
Fields.Columns.Add("Data Type", GetType(String))

For Each Column As DataColumn In Input_Collection.Columns
   Dim DataType As String = GetBluePrismDataType(Column.DataType)
   Fields.Rows.Add(New Object() {Column.ColumnName, DataType})
Next
]]></code></stage><stage stageid="a16b1987-a205-4bf6-8a33-ed2167c201ff" name="Fields" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="135" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="15198914-f283-4549-a823-c7b71d71d160" name="Utility Functions Test" type="SubSheetInfo"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6b30836d-2593-48c6-a021-b6b3e92ad88a" name="Start" type="Start"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5830837-58db-473d-b7dc-4651a10f79c6</onsuccess></stage><stage stageid="5a5bf1e7-2072-4226-96ba-ab3d0a656589" name="End" type="End"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5830837-58db-473d-b7dc-4651a10f79c6" name="Get Collection Fields" type="SubSheet"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Defined Collection 1]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Collection Fields" /></outputs><onsuccess>5a5bf1e7-2072-4226-96ba-ab3d0a656589</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="d402363f-8a48-4418-b0d9-2bef5037bc67" name="Input Collection" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e8e6edcb-f2fe-4582-9037-5ddb4ca15572" name="Collection Fields" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="105" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="980dd5f0-a047-4672-9a7a-18632a5826a0" name="Defined Collection 1" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="-150" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="My Text Field" type="text" /><field name="My Number Field" type="number" /><field name="My DateTime Field" type="datetime" /><field name="My TimeSpan Field" type="timespan" /><field name="My Flag Field" type="flag" /><field name="My Image Field" type="image" /></collectioninfo><initialvalue><row><field name="My Text Field" type="text" value="Test Text" /><field name="My Number Field" type="number" value="5" /><field name="My DateTime Field" type="datetime" value="2009-07-23 01:46:26Z" /><field name="My TimeSpan Field" type="timespan" value="0.00:03:42" /><field name="My Flag Field" type="flag" value="True" /><field name="My Image Field" type="image" value="" /></row><row><field name="My Text Field" type="text" value="asdf" /><field name="My Number Field" type="number" value="10" /><field name="My DateTime Field" type="datetime" value="" /><field name="My TimeSpan Field" type="timespan" value="0.00:00:00" /><field name="My Flag Field" type="flag" value="False" /><field name="My Image Field" type="image" value="" /></row></initialvalue></stage><stage stageid="0e6f80ff-bfb9-4d47-8e5a-5299a5873467" name="Read Collection Field" type="SubSheetInfo"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative>Reads a field with a given name and at the specified row from the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d660720-4bed-4ea8-8ad6-56fa0b19cfb4" name="Start" type="Start"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection to read." stage="Collection" /><input type="text" name="Field Name" narrative="The field within the collection to read." stage="Field Name" /></inputs><onsuccess>c4bf6e49-1d07-4d60-8b44-fd35a2009654</onsuccess></stage><stage stageid="2a6d86a8-8937-4d4b-9da4-32813d06a0bf" name="End" type="End"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Value Read" /></outputs></stage><stage stageid="d43ae257-4559-4fa8-9b0b-1f49bd80a301" name="Row Index" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd207bc4-8fe0-4f01-94e6-b289cdb60e38" name="Collection" type="Collection"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="745ce225-df49-4b02-b12c-e9e2068ca6aa" name="Field Name" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4bf6e49-1d07-4d60-8b44-fd35a2009654" name="Read Field" type="Code"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /></inputs><outputs><output type="text" name="Value Read" stage="Value Read" /></outputs><onsuccess>2a6d86a8-8937-4d4b-9da4-32813d06a0bf</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Value_Read = GetStringValue(Coll.Rows(RowIndex), FieldName)]]></code></stage><stage stageid="43376e9f-73fa-4757-affa-330da5d1e6b1" name="Value Read" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="105" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1c02ab-bf62-48df-b0de-79c4f254d5df" name="Set Collection Field" type="SubSheetInfo"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative>Updates a single value in a collection by the given field name and row index.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4fe6d4f3-e989-4636-b373-9a32fc41d450" name="Start" type="Start"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The index of the row in which to set the value. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection in which to set the value." stage="Collection" /><input type="text" name="Field Name" narrative="The name of the field in which to set the value" stage="Field Name" /><input type="text" name="New Value" narrative="The value as text to set." stage="New Value" /></inputs><onsuccess>c7b9c9ed-85d9-4449-a150-5182797dc6f3</onsuccess></stage><stage stageid="2be33601-0c29-45c7-bc7e-1a5a8d1c19b2" name="End" type="End"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Updated Collection" narrative="The collection which now has the value set." stage="Updated Collection" /></outputs></stage><stage stageid="e2d67695-6463-4e93-b5cd-e3b9805bb0cf" name="Row Index" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26046a1c-efef-4b6b-baa7-1880ae887576" name="Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="330" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9459f512-1cb5-4884-b551-4dcace90d77f" name="Field Name" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="255" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7b9c9ed-85d9-4449-a150-5182797dc6f3" name="Set Field" type="Code"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /><input type="text" name="New Value" expr="[New Value]" /></inputs><outputs><output type="collection" name="Updated Collection" stage="Updated Collection" /></outputs><onsuccess>2be33601-0c29-45c7-bc7e-1a5a8d1c19b2</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Coll.Rows(RowIndex)(FieldName) = New_Value

Updated_Collection = Coll]]></code></stage><stage stageid="2c198fde-25d6-4009-a434-256fd08044b1" name="New Value" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="390" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="532e300d-c8f5-4049-9b1e-490a9a85884c" name="Updated Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6164801d-51c0-428e-976d-23828f70767d" name="Collection Contains Field" type="SubSheetInfo"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative>Tests a collection to see whether it contains a specific field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ed16edd-07a7-459b-abc4-c29fc16117eb" name="Start" type="Start"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="Whether the collection contains the field will have been determined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to see if the collection has." stage="Field" /></inputs><onsuccess>a76de6a5-ad0f-42b0-8cea-1cc827be1d45</onsuccess></stage><stage stageid="15854162-6197-477a-873b-73c9b453d0d3" name="End" type="End"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if the collection contains the field." stage="Success" /><output type="text" name="Error Message" narrative="Unused" stage="Error Message" /></outputs></stage><stage stageid="a76de6a5-ad0f-42b0-8cea-1cc827be1d45" name="Get Collection Fields" type="SubSheet"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>73ed00ea-d816-4343-8fe2-09924b85491f</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="09779833-6862-44cb-a355-04cb35350208" name="Input Collection" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1343f537-262d-4113-8953-31173a54fdf9" name="Field" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="285" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ed00ea-d816-4343-8fe2-09924b85491f" name="Loop Start Collection Fields" type="LoopStart"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11a28026-8164-4066-97bb-6f7cc6a3f6de</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="c2b21dab-e784-43a7-b09a-19e8bf2d5672" name="Loop End Collection Fields" type="LoopEnd"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid></stage><stage stageid="04208d31-4ee8-45a6-af69-2dd8140cc92a" name="Field Names" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="d010b7fb-5d33-4636-bea8-2195b0f22738" name="Success" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="135" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ac2d5cc5-ddee-4785-bf6a-410b0e478722" name="Error Message" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="240" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11a28026-8164-4066-97bb-6f7cc6a3f6de" name="Match?" type="Decision"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="105" w="60" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>95c39a4f-2e55-45cb-a622-5cdec6b2d75b</ontrue><onfalse>c2b21dab-e784-43a7-b09a-19e8bf2d5672</onfalse></stage><stage stageid="6bd78de4-b21e-4741-af66-a88c72496d0f" name="anchor2" type="Anchor"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="240" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess></stage><stage stageid="95c39a4f-2e55-45cb-a622-5cdec6b2d75b" name="Set Success" type="Calculation"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="105" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6bd78de4-b21e-4741-af66-a88c72496d0f</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="e6748536-1050-482b-86e6-cd57cce3bc6d" name="Copy Rows" type="SubSheetInfo"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative>Copies the rows of the given collection into a new collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46e0886c-ea0a-4778-ad1e-9b7878e04a43" name="Append Rows to Collection" type="SubSheetInfo"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative>Combines two collections into one, provided they share the same set of fields</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3ec306e-f0c9-4bbc-a4da-a38b21969f5c" name="Reverse Collection" type="SubSheetInfo"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><narrative>Reverses the order of the rows in the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="98b20289-3b73-4776-9912-d679291e392e" name="Reverse Collection" type="Code"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CollectionIn" expr="[Collection In]" /></inputs><outputs><output type="collection" name="CollectionOut" stage="Collection Out" /></outputs><onsuccess>661b2b7b-7862-4db1-b71c-747437b534da</onsuccess><code><![CDATA[If CollectionIn.Columns.Count = 0 Then Throw new ApplicationException("Zero columns in collection")

CollectionOut = CollectionIn.Clone()

For I As integer = CollectionIn.Rows.Count - 1 To 0 Step -1
	Dim Objs(CollectionIn.Columns.Count - 1) As Object
	For J As integer = 0 to CollectionIn.Columns.Count - 1
		Objs(J) = collectionIn.Rows(I)(J)
	Next
	CollectionOut.Rows.Add(Objs)
Next]]></code></stage><stage stageid="48fd9b49-12a4-490d-8741-7cb0e6de6ac2" name="Collection In" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><display x="135" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="CIS" type="number" value="1" /><field name="Sort Code" type="text" value="123456" /><field name="Account Number" type="text" value="12345678" /><field name="Balance" type="number" value="1" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="3" /><field name="Sort Code" type="text" value="223456" /><field name="Account Number" type="text" value="22345678" /><field name="Balance" type="number" value="2" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="2" /><field name="Sort Code" type="text" value="323456" /><field name="Account Number" type="text" value="32345678" /><field name="Balance" type="number" value="3" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="5" /><field name="Sort Code" type="text" value="423456" /><field name="Account Number" type="text" value="42345678" /><field name="Balance" type="number" value="4" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="6" /><field name="Sort Code" type="text" value="523456" /><field name="Account Number" type="text" value="52345678" /><field name="Balance" type="number" value="5" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="4" /><field name="Sort Code" type="text" value="623456" /><field name="Account Number" type="text" value="62345678" /><field name="Balance" type="number" value="6" /><field name="Cancelled Items" type="text" value="" /></row></initialvalue></stage><stage stageid="862d18c4-1bd0-4542-b3e2-8baf8a977af8" name="Start" type="Start"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to be reversed." stage="Collection In" /></inputs><onsuccess>98b20289-3b73-4776-9912-d679291e392e</onsuccess></stage><stage stageid="661b2b7b-7862-4db1-b71c-747437b534da" name="End" type="End"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Reversed Collection" narrative="The reversed collection." stage="Collection Out" /></outputs></stage><stage stageid="1965b145-70ec-4ee0-a936-3c32f57e587e" name="Collection Out" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="150" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ca7dbfca-b97f-43d4-9601-6fa4d4eacc4b" name="Rename Collection Fields" type="SubSheetInfo"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative>Renames the fields of a collection based on the fields of a given name mapping collection.</narrative><display x="-60" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be8b9084-5d06-424d-8086-89d565e39887" name="Start" type="Start"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The main collection, whose headers are to be modified" stage="Main Collection" /><input type="collection" name="New Headers" narrative="A collection of new headers. This must be a one-row collection matching the fields of the first. The first row will contain the new field names under the corresponding field names" stage="New Headers" /></inputs><onsuccess>2dfc16b3-737a-4ff7-9843-9e66c78b23d4</onsuccess></stage><stage stageid="7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77" name="End" type="End"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="5c64c0b3-6819-410a-be71-587501d42504" name="New Headers" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="375" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="Name" /><field name="Column 2" type="text" value="Age" /></row></initialvalue></stage><stage stageid="2dfc16b3-737a-4ff7-9843-9e66c78b23d4" name="Rename Headers" type="Code"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="New Headers" expr="[New Headers]" /></inputs><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77</onsuccess><code><![CDATA[If Main_Collection IsNot Nothing AndAlso New_Headers IsNot Nothing Then
	If Main_Collection.Columns.Count = New_Headers.Columns.count Then
		For Each Col1 As DataColumn In Main_Collection.Columns
			If Not New_Headers.Columns.Contains(Col1.ColumnName) Then
				Success = False
				Error_Message = "New Headers collection does not contain the field '" & Col1.ColumnName & "' found in the Main Collection"
				Exit Sub
			End If
		Next

		'We can now assume that fields match
		'and start copying rows
		For Each C As DataColumn In Main_Collection.Columns
			Dim NewName As String = Cstr(New_Headers.Rows(0)(C.ColumnName))
			If String.IsNullOrEmpty(NewName) Then
				Throw New ApplicationException("Blank field names are not acceptable")
			Else
				C.ColumnName = Trim(NewName)
			End If
		Next

		Main_Collection.AcceptChanges()
		Amended_Collection = Main_Collection
		Success = True
	Else
		Success = False
		Error_Message = "Collection field definitions do not match - the number of columns in each is different."
	End If
Else
	Success = False
	Error_Message = "Neither Collection may be null"
End If]]></code></stage><stage stageid="73981b01-1a93-4c6e-a35f-fa6c194f63ec" name="Success" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="240" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73dcc958-035e-40f7-ab25-a8f22d06bf4f" name="Error Message" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="180" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0af7f983-37fd-47c4-971a-5c0ca70b60c4" name="Main Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="210" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="asdf" /><field name="Column 2" type="text" value="34" /></row></initialvalue></stage><stage stageid="e86fffbd-3537-4ed9-9e32-20c8f55b6cb6" name="Amended Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="360" y="120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b6aa002-ceed-4ea9-ab37-e3cc338e349c" name="Collection Contains Value" type="SubSheetInfo"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative>Searches for the existence of a value or a regular expression in a specified column in a collection. This will return true and, if a regular expression was provided, the groups defined in that regex for the first matched value it finds in the collection.</narrative><display x="-255" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="29ece439-17ef-4972-aa97-b373f2d68616" name="Start" type="Start"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><preconditions><condition narrative="A collection exists with the specified column name which may or may not contain a particular value" /><condition narrative="The collection being searched has no date or time columns (A code stage restriction)" /><condition narrative="" /><condition narrative="" /></preconditions><postconditions><condition narrative="No change" /></postconditions><narrative>Note that if neither 'Exact Value' nor 'Regex' are supplied, this will always return FALSE / ie. not found. If a match is found, groups will return all of the groups specified in the regular expression when applied to the value found.</narrative><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="Required : The collection to search" stage="Collection" /><input type="text" name="Column Name" narrative="Required : The name of the column to search" stage="Column Name" /><input type="text" name="Exact Value" narrative="Optional : The exact value to search for - this is case insensitive" stage="Exact Value" /><input type="text" name="Regex" narrative="Optional : The regular expression to search for - this is case sensitive unless specified otherwise in the regular expression using &quot;(?i)&quot;" stage="Regex" /></inputs><onsuccess>aa1a4d89-5218-4bbe-a743-0d3484968cb6</onsuccess></stage><stage stageid="ebc6a036-6449-4acd-ac3c-bf1c0cdb652a" name="End" type="End"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Contains Search Term" narrative="Flag indicating if the collection found the given search term or not" stage="Contains Search Term" /><output type="collection" name="Groups" narrative="The groups defined in the regular expression when it is applied to the found term" stage="Groups" /></outputs></stage><stage stageid="63287049-53dd-4e10-b6fa-809c255a8f63" name="Collection" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="14def48d-230f-4041-99c7-0af7c0dd5e0f" name="Column Name" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="965f0a82-f3be-4fcf-b43d-33b5a31b45d1" name="Exact Value" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2df8ab8-a7dc-408c-962c-efe2dd44d403" name="Regex" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c87975d-a017-4b35-923d-19816f41b5b3" name="Contains Search Term" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f7c0f14b-16b5-4e13-b3e9-71fd7bf59990" name="Groups" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Group" type="text" /></collectioninfo></stage><stage stageid="ca62b1b4-f73d-422a-b21a-ac4cfcc71041" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-330" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="86ee4f07-c603-44e1-b307-e53cd7d9eff4" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a408f364-ecb4-4548-9556-57f4a26f3ada" name="Both Search Strings Empty?" type="Decision"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Exact Value]) = 0 AND Len ([Regex]) = 0" /><ontrue>612f50dc-0fcc-4765-800b-e65e5bf3861f</ontrue><onfalse>7cdc88ed-891c-4f88-a51d-2da37bd56d4d</onfalse></stage><stage stageid="aa1a4d89-5218-4bbe-a743-0d3484968cb6" name="Trim Search Strings" type="MultipleCalculation"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a408f364-ecb4-4548-9556-57f4a26f3ada</onsuccess><steps><calculation expression="Trim([Exact Value])" stage="Exact Value" /><calculation expression="Trim([Regex])" stage="Regex" /></steps></stage><stage stageid="612f50dc-0fcc-4765-800b-e65e5bf3861f" name="anchor3" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7e121ceb-3f72-4655-8e21-38d3e5be7cec</onsuccess></stage><stage stageid="7e121ceb-3f72-4655-8e21-38d3e5be7cec" name="anchor4" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess></stage><stage stageid="7cdc88ed-891c-4f88-a51d-2da37bd56d4d" name="Search Collection" type="Code"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="coll" expr="[Collection]" /><input type="text" name="colname" expr="[Column Name]" /><input type="text" name="exactVal" expr="[Exact Value]" /><input type="text" name="regexVal" expr="[Regex]" /></inputs><outputs><output type="flag" name="found" stage="Contains Search Term" /><output type="collection" name="groups" stage="Groups" /></outputs><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess><code><![CDATA[If Not Coll.Columns.Contains(colname) Then
  Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", colname))
End If

Dim rx as Regex
If Not String.IsNullOrEmpty(exactVal) Then
  rx = New Regex("^" & Regex.Escape(exactVal) & "$", RegexOptions.IgnoreCase)
Else
  ' If ignore case is required it can be inlined using "(?i)..rest of search"
  rx = New Regex(regexVal)
End If

' Initialise output params
found = False
groups = New DataTable()
groups.Columns.Add("Group", GetType(String))

For Each row as DataRow in coll.Rows

  Dim val as String = CStr(row(colname))
  Dim m as Match = rx.Match(val)
  If m.Success Then
    found = True
    For i as Integer = 1 to m.Groups.Count-1
      groups.Rows.Add(New Object() {m.Groups(i).Value})
    Next
    Return
  End If

Next]]></code></stage><stage stageid="365e481a-8567-48cf-babf-40039e151df7" name="Delete Column" type="SubSheetInfo"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4421e0d9-6181-4872-aa85-8ad310427d30" name="Start" type="Start"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want to delete a column from" stage="Input Collection" /><input type="text" name="Column Name" narrative="The column number to delete" stage="Column Name" /></inputs><onsuccess>000581d7-9978-4295-826f-a20472874878</onsuccess></stage><stage stageid="d0f8de6d-03ac-4a92-8658-0998d1849bdf" name="End" type="End"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="A collection with a column removed" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Message" /></outputs></stage><stage stageid="000581d7-9978-4295-826f-a20472874878" name="Remove Column" type="Code"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="BP Collection In" expr="[Input Collection]" /><input type="text" name="Column Name" expr="[Column Name]" /></inputs><outputs><output type="collection" name="BP Collection Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d0f8de6d-03ac-4a92-8658-0998d1849bdf</onsuccess><code><![CDATA[Try
	BP_Collection_Out = BP_Collection_In
	BP_Collection_Out.Columns.Remove(Column_Name)
	Success = True
Catch e as Exception
	Error_Message = e.ToString()
	Success = False
End Try
]]></code></stage><stage stageid="140b41b2-3138-4b5d-b5f3-4bddff6db48f" name="Input Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1ae60809-2da8-468d-8d88-e605b185530b" name="Output Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="787dae64-5d33-4783-84ff-db2365c12e31" name="Message" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3216578-e35c-4bf0-84db-80b9d3fe07e3" name="Success" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="714ec185-fd95-4265-88e6-54eb452242b3" name="Column Name" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="210" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25782854-2b5d-4f7d-a1f4-671555060370" name="Remove Null Rows" type="SubSheetInfo"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative>Deletes rows in which a given key field is blank.</narrative><display x="-180" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7b68a8ca-8280-464d-acac-807f219d226e" name="Set Column Names From First Row" type="SubSheetInfo"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative>If you have a collection with the column names all in the first row, this will set the column names to the values in that row and then detete the first row.
Handy for collections read using Get Table</narrative><display x="-195" y="-105" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="966db302-1751-4a8a-bbbf-cbfc8ff28563" name="Start" type="Start"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>5732b352-4376-4727-b423-13df1e00f900</onsuccess></stage><stage stageid="80cc4a73-fa55-4504-bf38-941a29fd4499" name="End" type="End"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The amended collection" stage="Output Collection" /></outputs></stage><stage stageid="5732b352-4376-4727-b423-13df1e00f900" name="Set Column Name" type="Code"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>1129bf72-f0d4-4c3a-8823-68de39f5138b</onsuccess><code><![CDATA[
'Input_Collection.Columns(3).ColumnName="NewColumnName"
'Output_Collection = Input_Collection

Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   iThisColumn +=1
   Column.ColumnName=CStr(Input_Collection.Rows.Item(0).Item(iThisColumn))
Next
Output_Collection = Input_Collection

'If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
'	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
'End If

'If Not Coll.Columns.Contains(FieldName) Then
'   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
'End If

'Value_Read = CStr(Coll.Rows(RowIndex)(FieldName))]]></code></stage><stage stageid="83beff52-ce08-4f4c-acdd-39a43fce3528" name="Input Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0735b980-7ff2-49c5-a67b-41a6444db630" name="Output Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="299628df-bec6-4f77-8b4a-c6bc38824e1c" name="Remove First Row" type="Action"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative>First row was actually the header row, can now be deleted</narrative><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="1129bf72-f0d4-4c3a-8823-68de39f5138b" name="Output Collection" type="LoopStart"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>299628df-bec6-4f77-8b4a-c6bc38824e1c</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid><looptype>ForEach</looptype><loopdata>Output Collection</loopdata></stage><stage stageid="35a49bfb-e611-4681-b332-cadbcfa74fc3" name="Output Collection" type="LoopEnd"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0febcf9-b538-4995-85c1-02dddff5fb51</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid></stage><stage stageid="d0febcf9-b538-4995-85c1-02dddff5fb51" name="anchor1" type="Anchor"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="120" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess></stage><stage stageid="7b3c5ed5-f585-4240-a2ab-8cb996684c24" name="Set Column Names From Expected Collection" type="SubSheetInfo"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative>Renames the fields of a collection to those of a collection containing expected field names.</narrative><display x="-180" y="-210" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf" name="End" type="End"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="130f8b77-3ec8-46c9-8826-e401399e4c92" name="Rename Column" type="Code"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="collection" name="Expected Fields/Columns" expr="[Expected Fields/Columns]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf</onsuccess><code><![CDATA[Dim iTotalColumns as integer = Expected_Fields_Columns.Rows.Count-1
Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   If iThisColumn>=iTotalColumns Then Exit For
   iThisColumn +=1 
   Column.ColumnName=CStr(Expected_Fields_Columns.Rows.Item(iThisColumn).Item(0))
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="9e32e67d-d7f9-46b2-8df2-6fca9a395352" name="Input Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c66d8d30-cef9-4cab-8ee8-2acb512a3129" name="Start" type="Start"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /><input type="collection" name="Expected Fields/Columns" narrative="The expected column names" stage="Expected Fields/Columns" /></inputs><onsuccess>130f8b77-3ec8-46c9-8826-e401399e4c92</onsuccess></stage><stage stageid="c865f7af-a9f9-4fb9-88da-e04e43b0bac8" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c29dd25d-3cf7-4435-ba56-6f735329a71a" name="Output Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="235be3b3-8a37-4bac-b740-50cfcd6da05f" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="688d2271-65ed-4be7-84b1-cbfe018c6777" name="Expected Fields/Columns" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="df1f7e11-20da-4f67-a68c-bc7c03be861a" name="Fill Blanks" type="SubSheetInfo"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative>Fills a collection that has empty values with empty text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7908b17c-920d-4114-9fa0-cd4f161c5185" name="Start" type="Start"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have its empty values filled with empty text." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" narrative="A collection with blank text fields" stage="Blanks" /></inputs><onsuccess>06913dc6-a17f-4d64-965d-7cb7642f486f</onsuccess></stage><stage stageid="544cc959-75ad-4b6c-a150-ce414ae50424" name="End" type="End"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="No Blanks" narrative="The collection with empty string instead of blanks" stage="No Blanks" /></outputs></stage><stage stageid="34873761-d9a4-4a71-9c63-993645ca4e22" name="Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="0" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5cfec416-7db4-4734-9a1f-76d62db9bbd9" name="No Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="06913dc6-a17f-4d64-965d-7cb7642f486f" name="Fill Blanks" type="Code"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" expr="[Blanks]" /></inputs><outputs><output type="collection" name="No Blanks" stage="No Blanks" /></outputs><onsuccess>544cc959-75ad-4b6c-a150-ce414ae50424</onsuccess><code><![CDATA[try
  for each dr as datarow in blanks.rows
    for each c as datacolumn in blanks.columns
      if isdbnull(dr(c.columnname)) then
        dr(c.columnname) = ""
      end if
    next
  next
  no_blanks = blanks
catch e as exception

end try]]></code></stage><stage stageid="c491f60e-4aa7-4abb-a203-5a78c0b64469" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="c8499a69-da78-40b1-9e30-3b2b66b78a63" name="Start" type="Start"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The rows with blank keys will have been deleted." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want null rows to be removed" stage="Input Collection" /><input type="text" name="Key Field" narrative="The key field to check, if blank the row will be deleted.  The field that is referred to as the key field in the collection must be a text data type as well." stage="Key Field" /></inputs><onsuccess>85077240-20a2-46ad-81ba-a1eca720ae81</onsuccess></stage><stage stageid="e14452d8-589d-478a-ab1b-309897b8560b" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="13091eb3-458e-46d2-a20e-59eb5eb5d748" name="Input Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ab2855e-0511-49ff-ac26-c731dbf8c432" name="Output Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cab44f8f-583a-4529-911c-392030a2dee3" name="Message" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1203642-ce03-48bd-ba00-aad2a0dcde1e" name="Success" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1478eda2-b43b-4609-aef4-ff3ad3c2a708" name="Key Field" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85077240-20a2-46ad-81ba-a1eca720ae81" name="Remove Null rows from collection" type="Code"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative>can't loop through the core customer details table collection as some of the rows are NULL.</narrative><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CCD Table In" expr="[Input Collection]" /><input type="text" name="Key Field" expr="[Key Field]" /></inputs><outputs><output type="collection" name="CCD Table Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2e050fc0-fed0-49b4-bafc-a33a0aee5ad9</onsuccess><code><![CDATA[Try
CCD_Table_In.AcceptChanges()

	For Each row As DataRow in CCD_Table_In.Rows
			If String.IsNullOrEmpty(row(Key_Field).ToString().Trim()) Then
				row.Delete()
			End If
	Next

CCD_Table_In.AcceptChanges()

	CCD_Table_Out = CCD_Table_In
	Success = True

Catch ex as Exception
	Error_Message = ex.ToString()
	Success = False
End Try

]]></code></stage><stage stageid="9e92c3e9-666f-47a3-b5a4-712191368127" name="Remove dots from headers" type="SubSheetInfo"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative>Collections with dots in the field names cannot be properly indexed so this functinon renames the headers so that the fields contain no dots.</narrative><display x="-165" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e9143b5-5aa7-475d-a944-466bfbc2c71d" name="Rename Column1" type="Code"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ce865562-7be4-4739-95c5-3b5e05d7901f</onsuccess><code><![CDATA[For Each Column As DataColumn In Input_Collection.Columns
   Column.ColumnName=Microsoft.Visualbasic.Replace(Column.ColumnName,".","")
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="ce865562-7be4-4739-95c5-3b5e05d7901f" name="End" type="End"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="c2200054-2838-45a0-a8b2-c1da235391b0" name="Input Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c865c672-39f2-4b5d-b96c-f44c5f3b9a89" name="Start" type="Start"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have fields with no dots." /></postconditions><display x="0" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>9e9143b5-5aa7-475d-a944-466bfbc2c71d</onsuccess></stage><stage stageid="02864eb4-432c-4b37-9199-c28dd7fe654b" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99cb4759-fd39-4084-a262-e2ac589fdc28" name="Output Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c1388967-ebc6-462c-bad7-66359084fab0" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4e265aee-0021-418d-8655-61d995e170a0" name="Append Field (Text)" type="SubSheetInfo"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative>Appends a field to a collection and allows you to provide a default value as text fot the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c8bd0a3b-3343-43fd-bef7-1414593f62b6" name="Field Name" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ddaf3d76-462d-41ac-8cdd-92050ea01b79" name="Append Text" type="Code"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="text" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>072e40e3-3858-4528-aa1b-7b4cfb7861f9</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.String"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="7c2f4495-6f2c-4dc5-845c-58f3036c5ec9" name="Collection Out" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8493982d-24c5-4d6b-96c0-060ed614f8c3" name="Collection In" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6542d3cd-7831-4ebb-93dc-09b64ff85bbf" name="Value" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c1475ad-07b2-4993-abb1-4060046ce8eb" name="Start" type="Start"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have a new field appended to it." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>ddaf3d76-462d-41ac-8cdd-92050ea01b79</onsuccess></stage><stage stageid="072e40e3-3858-4528-aa1b-7b4cfb7861f9" name="End" type="End"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="4c0d7072-e36c-465b-89f0-fbe7e21e95fb" name="Append Field (Number)" type="SubSheetInfo"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative>Appends a field to a collection and allows you to provide a default number value for the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="433e0a45-d9b6-48e5-b62f-67815cc1461a" name="Start" type="Start"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="number" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>560df05e-a20c-4c85-addb-accc35d19f0e</onsuccess></stage><stage stageid="5dc78a95-36a2-4324-a366-ccd5f941ea7b" name="End" type="End"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="560df05e-a20c-4c85-addb-accc35d19f0e" name="Append Number" type="Code"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="number" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>5dc78a95-36a2-4324-a366-ccd5f941ea7b</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.Decimal"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="a8f65fc6-9524-4ba5-ab7c-4bf16b825bb8" name="Collection Out" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1265e994-416c-4b2d-ab0c-c81e1288f072" name="Field Name" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ac81567-c224-4270-a0ef-e57562e06fb5" name="Collection In" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f9a670a2-2e34-4e79-a184-369ddc70c75e" name="Value" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5979fe4e-6f4d-4683-8d7f-bb932ec88a2e" name="Rename Field" type="SubSheetInfo"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative>Renames a field within a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5030c234-e021-4ff1-b9ea-751e186a63a8" name="Start" type="Start"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will be renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to rename a field in." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the existing field to rename." stage="Field Name" /><input type="text" name="New Name" narrative="The new name for the field." stage="New Name" /></inputs><onsuccess>278ed0f4-d7d0-4ca7-908e-55569a965852</onsuccess></stage><stage stageid="404be5b2-7ad7-429a-9e8b-b6a561112f47" name="End" type="End"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with field renamed." stage="Collection Out" /></outputs></stage><stage stageid="67c49160-5821-48b0-82fd-371ecbaea386" name="Collection In" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f0ef8f48-7f60-47fc-89b2-3aa04ef39792" name="Field Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c1db25c-d091-4900-8b9e-529d60df0f8f" name="Collection Out" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="278ed0f4-d7d0-4ca7-908e-55569a965852" name="Rename" type="Code"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /><input type="text" name="New Name" expr="[New Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>404be5b2-7ad7-429a-9e8b-b6a561112f47</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		c.ColumnName = New_Name
		Exit For
	End If
Next
]]></code></stage><stage stageid="b2e64d6d-9ac8-43b9-aeed-e58e65d8067c" name="New Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="c935b0c8-a0cb-4251-9e63-af4ed27f9a91" name="Delete Field" type="SubSheetInfo"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a7662efd-3d51-4d9a-adbc-1a2e626613e5" name="Start" type="Start"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to delete the field from." stage="Collection In" /><input type="text" name="Field Name" narrative="The field to delete." stage="Field Name" /></inputs><onsuccess>b52dad46-ca6d-4860-82c7-f1d9320f66bc</onsuccess></stage><stage stageid="4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b" name="End" type="End"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the field removed." stage="Collection Out" /></outputs></stage><stage stageid="4eb487df-f7e9-4146-a35f-e5e7c6461d01" name="Collection In" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="719f7d25-ec64-43bd-9466-c822213aa069" name="Field Name" type="Data"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b32e1ce-deb0-4107-ac7c-c4af81ceedaf" name="Collection Out" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b52dad46-ca6d-4860-82c7-f1d9320f66bc" name="Delete Column1" type="Code"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		Collection_Out.Columns.Remove(c)
		Exit For
	End If
Next
]]></code></stage><stage stageid="63e447be-76ae-4566-a7e9-ead3373b7fe6" name="Merge Collection" type="SubSheetInfo"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative>Merges two collections with different structures (and where the field names across both collections are unique) and forms a single collection with a combination  of the two structures and associated data values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d427bb44-b573-475a-aa7d-176f2803e033" name="Start" type="Start"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><preconditions><condition narrative="The merge will fail if both collections contain any field names which are identical." /></preconditions><postconditions><condition narrative="The collections will have been merged." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" narrative="The first collection to be merged." stage="Collection 1" /><input type="collection" name="Collection 2" narrative="The second collection to be merged." stage="Collection 2" /></inputs><onsuccess>6459a0e3-6f86-4efa-8b87-a9eb0b9a8460</onsuccess></stage><stage stageid="570e4b26-4aa8-48ac-b435-1ca8fe10f2cd" name="End" type="End"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 3" narrative="The resulting merged collection." stage="Collection 3" /></outputs></stage><stage stageid="6459a0e3-6f86-4efa-8b87-a9eb0b9a8460" name="Merge" type="Code"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2" expr="[Collection 2]" /></inputs><outputs><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>570e4b26-4aa8-48ac-b435-1ca8fe10f2cd</onsuccess><code><![CDATA[
For Each c As DataColumn in c2.Columns
	c1.Columns.Add(CloneColumn(c))
Next

For r As Integer = 0 To c1.Rows.Count - 1
	If r < c2.Rows.Count Then
		For Each c As DataColumn in c2.Columns
			c1.Rows(r)(c.ColumnName) = c2.Rows(r)(c.ColumnName)
		Next
	Else
		Exit For
	End If
Next

c3 = c1]]></code></stage><stage stageid="c325b6be-e358-4eab-8e9b-0b74a98490f3" name="Collection 1" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61e7bd9a-18d4-475d-b131-95dc839d1518" name="Collection 2" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3ff4ed5f-abbc-4668-9ebb-816c8f0884db" name="Collection 3" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="741d8892-31ef-497b-a1ab-dca99ebd1f06" name="Split Collection" type="SubSheetInfo"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative>Splits a collection into two colllections containing the fields as defined by templates.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61860248-5b8d-41de-8e28-092ca8b989e5" name="Split" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c2 = c2t.Clone()

c3 = c3t.Clone()

Dim r2, r3 As DataRow
Dim bAdd2, bAdd3 As Boolean

For Each r1 As DataRow In c1.Rows

	r2 = c2.NewRow()
	r3 = c3.NewRow()
	bAdd2 = False
	bAdd3 = False

	For Each c As DataColumn In c1.Columns

		If c2.Columns.Contains(c.ColumnName) Then
			r2(c.ColumnName) = r1(c.ColumnName)
			bAdd2 = True
		End If
		If c3.Columns.Contains(c.ColumnName) Then
			r3(c.ColumnName) = r1(c.ColumnName)
			bAdd3 = True
		End If

	Next

	If bAdd2 Then
		c2.Rows.Add(r2)
	End If
	If bAdd3 Then
		c3.Rows.Add(r3)
	End If

Next]]></code></stage><stage stageid="d00a67c4-977f-49ab-ac41-225ebdb3ad8d" name="Collection 3 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e2ce96fd-e590-46fa-a95d-effcca153782" name="Start" type="Start"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><preconditions><condition narrative="None." /><condition narrative="" /></preconditions><postconditions><condition narrative="Collections will be split." /><condition narrative="" /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" stage="Collection 1" /><input type="collection" name="Collection 2 Template" stage="Collection 2 Template" /><input type="collection" name="Collection 3 Template" stage="Collection 3 Template" /></inputs><onsuccess>2c7d51f8-a340-4629-9d93-0526f6ed07cc</onsuccess></stage><stage stageid="e08e6b18-850a-427c-9eba-5065c9c619dd" name="End" type="End"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 2" stage="Collection 2" /><output type="collection" name="Collection 3" stage="Collection 3" /></outputs></stage><stage stageid="67449419-0f6c-463b-bf1a-2d94b16c5be3" name="Collection 2" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="285" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="78bbd50d-b3cd-4066-80e3-d4cb236662b8" name="Collection 3" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="345" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2c7d51f8-a340-4629-9d93-0526f6ed07cc" name="Count Template 2 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 2 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>2dbb3bb5-1526-4f1c-818d-aa4eb0acc677</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="5a6c9426-a48f-4861-b7fe-b020ea824cc5" name="Row Count" type="Data"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2dbb3bb5-1526-4f1c-818d-aa4eb0acc677" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>17c0ae90-3784-40c5-816f-a0dfb4c97eab</ontrue><onfalse>6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5</onfalse></stage><stage stageid="17c0ae90-3784-40c5-816f-a0dfb4c97eab" name="Count Template 3 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 3 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>525e699d-df7d-4c61-b5fd-0ae540b94a94</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="525e699d-df7d-4c61-b5fd-0ae540b94a94" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>01cbd6ed-952e-4ae8-8420-496581701364</ontrue><onfalse>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onfalse></stage><stage stageid="74cfea1c-af9f-4c0b-86aa-ac76097c3940" name="Collection 1" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2af4b9c5-d3f3-4ecc-9a3a-4b52f1cee481" name="Collection 2 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c7cd5499-3bd2-49c8-a5e0-2c190b350abe" name="System Exception" type="Exception"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Template collection cannot be empty&quot;" /></stage><stage stageid="6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5" name="anchor1" type="Anchor"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onsuccess></stage><stage stageid="01cbd6ed-952e-4ae8-8420-496581701364" name="Count Data Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 1&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>69ae2e43-547a-4cef-abc9-a57284282b82</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="69ae2e43-547a-4cef-abc9-a57284282b82" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>61860248-5b8d-41de-8e28-092ca8b989e5</ontrue><onfalse>4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef</onfalse></stage><stage stageid="4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef" name="Assign Outputs" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c3 = c3t

c2 = c2t
]]></code></stage><stage stageid="8140b508-3840-4291-8122-7d9633f50e96" name="Collection In" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cc074354-584f-4eba-ab53-2f96462259a0" name="Filter Collection" type="SubSheetInfo"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative>Filters a collection using the given query.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ee491db-1747-4f76-a969-78ebc05942c3" name="Start" type="Start"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be filtered." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to filter." stage="Collection In" /><input type="text" name="Filter" narrative="The filter query." stage="Filter" /></inputs><onsuccess>0c063487-d7ee-42db-8059-92687b655e7d</onsuccess></stage><stage stageid="bda88544-a5a8-4bf6-9c9b-c645f76b7fed" name="End" type="End"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The filtered collection." stage="Collection Out" /></outputs></stage><stage stageid="0c063487-d7ee-42db-8059-92687b655e7d" name="Filter Collection1" type="Code"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Select Condition" expr="[Filter]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>bda88544-a5a8-4bf6-9c9b-c645f76b7fed</onsuccess><code><![CDATA[Dim NewRow As DataRow

Collection_Out = Collection_In.Clone

For Each parentRow As DataRow In Collection_In.Select(Select_Condition)
	NewRow = Collection_Out.NewRow
	For Each c As DataColumn In NewRow.Table.Columns
		NewRow(c.ColumnName) = parentRow(c.ColumnName)
	Next
	Collection_Out.Rows.Add(NewRow)
Next

NewRow = Nothing
Collection_In = Nothing]]></code></stage><stage stageid="ab9df972-dcc0-4384-ae57-8f0207f70978" name="Collection Out" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ee8d1e79-1554-41d5-9dec-d9cb9153d483" name="Collection In" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7b601fa9-308d-4e40-8366-62ebe909f792" name="Filter" type="Data"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f60641e-4454-45d1-b678-62b0a6c6b784" name="Start" type="Start"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Start Row" narrative="The row index to start copying from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Start Row" /><input type="number" name="Number of Rows to Copy" narrative="The number of rows to copy." stage="Number of Rows to Copy" /><input type="collection" name="Source Collection" narrative="The collection to copy." stage="Source Collection" /></inputs><onsuccess>25337bba-f357-42a8-bc61-876a9582d5d0</onsuccess></stage><stage stageid="002b5c58-ec2b-4e02-91e5-68fbeffe2b84" name="End" type="End"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The copied collection." stage="Output Collection" /></outputs></stage><stage stageid="1cd8f0a3-e382-4ad5-8948-7f0dc5cd17cd" name="Start Row" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="abc78fcd-9654-47c6-9aa9-5cd8f505bd60" name="Number of Rows to Copy" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="135" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c3aa2821-e68a-4985-9fd7-e0330638a935" name="Source Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="255" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="25337bba-f357-42a8-bc61-876a9582d5d0" name="Copy Rows1" type="Code"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Source Collection" expr="[Source Collection]" /><input type="number" name="Start Row" expr="[Start Row]" /><input type="number" name="Number of Rows to Copy" expr="[Number of Rows to Copy]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>ff821741-f1ec-47ff-bd26-00c56a44a6c7</onsuccess><code><![CDATA[Try
	If Start_Row < 0 Then
		Throw New ApplicationException("Start Row must be at least zero.")
	End If
	Dim LastIndex As Integer = Source_Collection.Rows.Count -1
	If Start_Row > LastIndex Then
		Throw New ApplicationException("Start Row must not point beyond the end of the collection.")
	End If
	If Start_Row + Number_of_Rows_to_Copy -1 > LastIndex Then
		Throw New ApplicationException("The number of requested rows extends beyond the end of the collection (based on a start row of " & Start_Row.ToString() & ").")
	End If

	'Set up the new collection with columns
	Output_Collection = Source_Collection.Clone()

	'copy the requested rows one by one
	For I As integer = Start_Row To Start_Row + Number_of_Rows_to_Copy - 1
		Dim Values(Source_Collection.Columns.Count - 1) As Object
		For J As Integer = 0 To Source_Collection.Columns.Count - 1
			Values(J) = Source_Collection.Rows(I)(J)
		Next
		Output_collection.Rows.Add(Values)
	Next	
	
	Success = True
Catch Ex As Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="33698fa1-b8d8-467c-bb0d-b8e838d42c69" name="Output Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="-180" y="45" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4f882206-da67-4422-ac01-a53a5d765354" name="Success" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6551589d-b7f2-48b7-a867-b398647d0180" name="Error Message" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="120" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff821741-f1ec-47ff-bd26-00c56a44a6c7" name="Success?" type="Decision"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>002b5c58-ec2b-4e02-91e5-68fbeffe2b84</ontrue><onfalse>fd5c51f5-e900-44ce-a169-84565580d402</onfalse></stage><stage stageid="fd5c51f5-e900-44ce-a169-84565580d402" name="System Exception" type="Exception"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="90" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="c6165073-bfc9-495f-98e5-62a224f52226" name="Start" type="Start"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections will be combined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The collection to append to." stage="Main Collection" /><input type="collection" name="Collection to Append" narrative="The collection to append." stage="Collection to Append" /></inputs><onsuccess>77e19cde-e0fa-40aa-8bea-05c4743275c2</onsuccess></stage><stage stageid="5d1a3d8d-2e99-49b5-9863-6a866e2e03dd" name="End" type="End"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Combined Collection" narrative="The combined collection." stage="Combined Collection" /></outputs></stage><stage stageid="e3a95b76-e1ba-4bf1-92c1-653ae937120a" name="Main Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="320afdfe-675f-44a8-b563-5cf2cf3212d3" name="Collection to Append" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="77e19cde-e0fa-40aa-8bea-05c4743275c2" name="Combine Collections" type="Code"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Collection to Append" expr="[Collection to Append]" /></inputs><outputs><output type="collection" name="Combined Collection" stage="Combined Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>35415fae-0f6d-4f78-b7b9-b39a6e3095ff</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Collection_to_Append.Columns.Count Then
	Error_Message = "Field definitions do not match - the number of columns in each is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns

	If Not Collection_to_Append.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain '" & Col1.ColumnName & "'"
		Exit Sub
	End If

	If Collection_to_Append.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of '" & Col1.ColumnName & "' do not match."
		Exit Sub
	End If

Next

If Main_Collection.Columns.Count = 0 Then
	Combined_Collection = Collection_to_Append
Else
	'We can now assume that fields match and start copying rows
	For Each R As DataRow in Collection_to_Append.Rows
		Main_Collection.ImportRow(R)
	Next
	Combined_Collection = Main_Collection
End If

Success = True]]></code></stage><stage stageid="d0521477-9847-4a70-834b-9c1d315bd817" name="Combined Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="-90" y="75" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="35415fae-0f6d-4f78-b7b9-b39a6e3095ff" name="Success?" type="Decision"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>5d1a3d8d-2e99-49b5-9863-6a866e2e03dd</ontrue><onfalse>e4269f55-7633-4d19-9ebf-299956a4a5ec</onfalse></stage><stage stageid="e4269f55-7633-4d19-9ebf-299956a4a5ec" name="System Exception" type="Exception"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="7923c865-f484-411d-815a-24fe9832f941" name="Success" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="710fce6c-64f2-4e2d-8c89-9c2c41b9e9cb" name="Error Message" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdd84939-c1c2-4ec3-9ec2-f19a6b55f056" name="Remove Empty Rows" type="SubSheetInfo"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative>Removes empty rows from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46ac86fc-42a2-49f4-a2be-86a452176e2b" name="Start" type="Start"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have empty rows removed." /></postconditions><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to remove empty rows from" stage="Collection In" /></inputs><onsuccess>6c450e6a-55ae-4382-a419-e4c6d59fc580</onsuccess></stage><stage stageid="0e663c5b-fb8a-4f15-999d-feb951956864" name="End" type="End"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the empty rows removed" stage="Collection Out" /></outputs></stage><stage stageid="613bed47-0c41-4155-93a3-5b31823f6048" name="Collection In" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af6c216c-aac3-4b4e-b7cb-bbf0a7863c49" name="Collection Out" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6c450e6a-55ae-4382-a419-e4c6d59fc580" name="Remove empty rows" type="Code"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>0e663c5b-fb8a-4f15-999d-feb951956864</onsuccess><code><![CDATA[
Dim bRemove as Boolean
Dim iRow as integer
' Loop through each row
For iRow = Collection_In.Rows.Count - 1 to 0 step -1
'For each Row as DataRow in Collection_In.Rows
	bRemove=True
	' Loop through every column for this row
	For each Column as DataColumn in Collection_In.Columns
		if Trim(Collection_In.Rows(iRow)(Column.ColumnName).ToString()) & "" <> "" then
			bRemove=False
			exit for
		end if
	Next

	if bRemove=True then
		Collection_In.Rows.Remove(Collection_In.Rows(iRow))
	end if
Next

Collection_Out = Collection_In.Copy]]></code></stage><stage stageid="28f98de9-8408-4312-9e37-37197c2d8822" name="Transpose Collection" type="SubSheetInfo"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative>Creates a new collection with the fields Name and Value and for each row in the original collection creates an entry for each column.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="26ce26e2-1a34-4a20-97d8-34ab15954720" name="Start" type="Start"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be transposed." /></postconditions><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to transpose." stage="Collection In" /></inputs><onsuccess>c3e45cac-9a76-4b70-a119-ffed9ceeaeac</onsuccess></stage><stage stageid="c9852e45-8999-4b73-a581-4a3f66b95b3a" name="End" type="End"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The transposed collection." stage="Collection Out" /></outputs></stage><stage stageid="c3e45cac-9a76-4b70-a119-ffed9ceeaeac" name="Transpose" type="Code"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>c9852e45-8999-4b73-a581-4a3f66b95b3a</onsuccess><code><![CDATA[
New_Collection = GetDataTable("Name,Value", "System.String,System.String")
Dim New_Row As System.Data.DataRow

For Each r As System.Data.DataRow In Collection.Rows
	For Each c As System.Data.DataColumn In Collection.Columns
		New_Row = New_Collection.NewRow()
		New_Row("Name") = c.ColumnName
		New_Row("Value") = GetStringValue(r, c.ColumnName)
		New_Collection.Rows.Add(New_Row)
	Next
Next
]]></code></stage><stage stageid="d2f68cb8-90cf-4414-8554-daf4fa4c9f29" name="Collection Out" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="60" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="99b09a03-6901-47ee-af4d-d43bfcf3bb42" name="Collection In" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="90d519f8-3075-478e-a49f-b681d1ddd033" name="Field Exists" type="SubSheetInfo"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative>Finds out whether the collection contatins a given field.</narrative><display x="-135" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8605b0b2-ff16-473b-ba5d-1956390f48bd" name="Start" type="Start"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to check for." stage="Field" /></inputs><onsuccess>da5abfb8-f52a-4a03-8f9f-ec5e42dd4566</onsuccess></stage><stage stageid="26b8ca01-8895-483f-93ef-66df5bbb0a34" name="End" type="End"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the collection contains the field." stage="Exists" /></outputs></stage><stage stageid="da5abfb8-f52a-4a03-8f9f-ec5e42dd4566" name="Get Collection Fields" type="SubSheet"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>470c6c27-3ed4-43b7-8c01-3fc7415ec55e</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="a910c0ad-5130-4073-8f3a-8cf76bc7d74e" name="Input Collection" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="66e1609e-c3e7-4e35-82df-90254a0d842f" name="Field" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470c6c27-3ed4-43b7-8c01-3fc7415ec55e" name="Field Names" type="LoopStart"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eb7af2be-1265-40b6-8ea7-89fdda2b0ab1</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f" name="Field Names" type="LoopEnd"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid></stage><stage stageid="15f784c0-4879-4a2e-ab6f-c44f5c384d85" name="Field Names" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="905724f1-237f-4641-9511-289841ec3498" name="Exists" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7af2be-1265-40b6-8ea7-89fdda2b0ab1" name="Match?" type="Decision"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>c4532590-c3c0-4014-98f4-bc3e1f30e5df</ontrue><onfalse>54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f</onfalse></stage><stage stageid="d656772f-8ec9-4848-8f30-a4bda4f01837" name="anchor2" type="Anchor"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="255" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess></stage><stage stageid="c4532590-c3c0-4014-98f4-bc3e1f30e5df" name="Exists" type="Calculation"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d656772f-8ec9-4848-8f30-a4bda4f01837</onsuccess><calculation expression="True" stage="Exists" /></stage><stage stageid="2e050fc0-fed0-49b4-bafc-a33a0aee5ad9" name="Success?" type="Decision"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c491f60e-4aa7-4abb-a203-5a78c0b64469</ontrue><onfalse>510a1b6e-59d7-40a0-8886-483ef66093e9</onfalse></stage><stage stageid="510a1b6e-59d7-40a0-8886-483ef66093e9" name="FAIL" type="Exception"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="15" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="UtilityException" detail="&quot;Error occurred removing null rows: &quot; &amp; [Message]" /></stage></process></object>
        <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" name="Utility - Environment" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Environment" version="6.10.1.35171" bpversion="7.1.1.65484" narrative="Utilities for interacting with the environment - read screen resolution, determine OS type, etc." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>257afd68-bed2-460b-94e5-17b2b6263b15</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-67</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="72ac1b78-ac00-4ede-b5fa-13beef468814" type="Normal" published="True"><name>Font Smoothing Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf31a66d-5534-4af0-9a07-433066d1a4b9" type="Normal" published="True"><name>Get Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf9f6573-f06c-4ab6-9672-34d2e644415e" type="Normal" published="True"><name>Set Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="50ea2955-c157-4803-b16c-fea2255ce9e2" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a7ea3097-4e9b-48f3-9431-68977353a6bc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4987fdec-ac7a-4166-a60b-adef47ecdcc7" type="Normal" published="True"><name>Get Screen Resolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="80ee143b-0379-4ba5-b13f-5d42dde3160d" type="Normal" published="True"><name>Start Process Read Stderr and Stdout</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5864a25-e7a2-430a-9045-78a116e64701" type="Normal" published="True"><name>Kill Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d4412bd-579a-4d1e-937e-12fbb756630c" type="Normal" published="True"><name>Read Memory Stats</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b5cc7aa-ca53-495f-a51e-4ed559efe88b" type="Normal" published="True"><name>Read Process Working Set</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7" type="Normal" published="True"><name>Start Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="29015311-1659-438e-b7b6-b8ff65e4a840" type="Normal" published="True"><name>Run Process Until Ended</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13c8f06e-8a7c-4da8-b813-d5738ce5369a" type="Normal" published="True"><name>Wait for Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e22dc28-2f71-421b-9687-c367358919e3" type="Normal" published="True"><name>Wait for Process Window</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b6e051bf-8afe-4ea3-9ae0-52eee58eec76" type="Normal" published="True"><name>Get User Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c556a801-8bd8-4e0e-bf8e-2dd6b5642063" type="Normal" published="True"><name>Get Machine Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="5f046b4e-e1db-4786-ae90-3d5d6c6d9302" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9e4646d0-d8c7-44d6-a5d9-9509e3ba8883</onsuccess></stage><stage stageid="9e4646d0-d8c7-44d6-a5d9-9509e3ba8883" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e9a8ad-308f-49f4-9dd0-9dafbc1f625a" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>system.windows.forms.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Windows.Forms</import><import>System.Diagnostics</import><import>System.Data</import><import>Microsoft.VisualBasic</import><import>System.Threading</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="6e5c9120-5c20-4fe2-9bfd-149470c9a1ea" name="Clean Up" type="SubSheetInfo"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e36d7ef5-340c-4d1f-a670-d1f1dcd7bdc3" name="Start" type="Start"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1451859f-91ff-4e0a-b8a8-7bbd6dc50341</onsuccess></stage><stage stageid="1451859f-91ff-4e0a-b8a8-7bbd6dc50341" name="End" type="End"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f50788a0-79a5-446b-b3cc-fc8d66091330" name="Get Screen Resolution" type="SubSheetInfo"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><narrative>Gets the resolution of the screen in pixels for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e8deba-018e-4402-bb33-773a299ae864" name="Start" type="Start"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd2d0918-9c73-4138-90b8-538eaa06f135</onsuccess></stage><stage stageid="3348aa7d-5b76-4d3f-a590-e571a9a83494" name="End" type="End"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" narrative="The number of pixels in the horizontal screen axis" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" narrative="The number of pixels in the vertical screen axis" stage="Vertical Resolution" /></outputs></stage><stage stageid="c970b361-339a-4e60-a056-cf8571553cb8" name="new" type="Note"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="faf2adc8-9198-4483-b6dc-e67e978cbf7b" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bd2d0918-9c73-4138-90b8-538eaa06f135" name="GetResolution" type="Code"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" stage="Vertical Resolution" /></outputs><onsuccess>3348aa7d-5b76-4d3f-a590-e571a9a83494</onsuccess><code><![CDATA[dim S As Size = Screen.PrimaryScreen.Bounds.Size
Horizontal_Resolution = S.Width
Vertical_Resolution = S.Height]]></code></stage><stage stageid="37500b62-bdb6-42ed-91a3-02fbcffc75ee" name="Horizontal Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8edafede-371d-454f-a5ca-0b28eda542e5" name="Vertical Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="165" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8bff191-0772-44c3-bea4-1d4ff701d49f" name="Kill Process" type="SubSheetInfo"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><narrative>Force kills all processes with a given name.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e3791a92-d20e-4afe-81bf-5aab170c3aba" name="Start" type="Start"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All processes with the given name will be terminated." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" stage="Process Name" /></inputs><onsuccess>697bc06f-0d64-430d-a5ea-b3fd02b746c8</onsuccess></stage><stage stageid="e9c6833a-30a3-4233-840b-35d605e44199" name="End" type="End"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06a89dc2-9ed1-497c-b7f0-14664bdb76c5" name="Process Name" type="Data"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><display x="120" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="697bc06f-0d64-430d-a5ea-b3fd02b746c8" name="Kill Process1" type="Code"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><onsuccess>e9c6833a-30a3-4233-840b-35d605e44199</onsuccess><code><![CDATA[  Try
    for each p as System.Diagnostics.Process in System.Diagnostics.Process.GetProcessesByName(Process_Name)
      p.kill
    next
  Catch ex As Exception
  End Try]]></code></stage><stage stageid="374fc1ad-8b82-4d95-b3d4-9710692a2725" name="Read Memory Stats" type="SubSheetInfo"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><narrative>Get memory statistics for a given set of processes including the working set and the virtual memory size.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="237994c5-9c89-409f-9459-a9f1ce60d7ad" name="Start" type="Start"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Process Names" narrative="The names of the processes to get memory statistics for" stage="Processes" /></inputs><onsuccess>c64eaa40-85d5-42b9-bcfe-0e314328bccb</onsuccess></stage><stage stageid="83912618-be8e-4f5a-860a-03cc449519c4" name="End" type="End"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Process Statistics" narrative="A collection of process statistics including the working set and the virtual memory size" stage="Process Statistics" /></outputs></stage><stage stageid="c64eaa40-85d5-42b9-bcfe-0e314328bccb" name="Get Stats" type="Code"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Processes" expr="[Processes]" /></inputs><outputs><output type="collection" name="Process Statistics" stage="Process Statistics" /></outputs><onsuccess>83912618-be8e-4f5a-860a-03cc449519c4</onsuccess><code><![CDATA[GC.Collect()
Process_Statistics = New DataTable
process_statistics.Columns.Add("Process Name", GetType(String))
process_statistics.Columns.Add("PID", GetType(Decimal))
process_statistics.Columns.Add("Working Set", GetType(Decimal))
process_statistics.Columns.Add("Virtual Memory", GetType(Decimal))

For Each R As DataRow in Processes.Rows
	dim ProcName As String = CStr(R("Process Name"))
	Dim PID As Integer = CInt(R("PID"))
	For Each P As Process in Process.GetProcesses()
		If P.ProcessName = ProcName OrElse P.ID = PID Then
			Process_Statistics.Rows.Add(New Object() {P.ProcessName, P.ID, P.WorkingSet64, P.VirtualMemorySize64})
		End If
	Next
Next]]></code></stage><stage stageid="2d4e55c2-5e4d-45d5-8fd3-27d58de71615" name="Processes" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /></collectioninfo><initialvalue><row><field name="Process Name" type="text" value="Automate" /><field name="PID" type="number" value="-1" /></row><row><field name="Process Name" type="text" value="javaw" /><field name="PID" type="number" value="-1" /></row></initialvalue></stage><stage stageid="99b25e8c-cd81-4e2f-99c3-d4c8afb738fc" name="Process Statistics" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /><field name="Working Set" type="number" /><field name="Virtual Memory" type="number" /></collectioninfo></stage><stage stageid="f781848e-f409-4be9-aea7-4672e21e840e" name="Read Process Working Set" type="SubSheetInfo"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><narrative>Gets the size of the working set for the given process.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="41b78729-d533-460b-98af-6180066d831b" name="Start" type="Start"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process you want stats for" stage="Process Name" /></inputs><onsuccess>92e54184-9c46-425a-a681-ca15d5f38671</onsuccess></stage><stage stageid="d9a48cd9-620d-4b45-87bb-cb1a223d729e" name="End" type="End"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Working Set" narrative="The working set number holding memory stats for your process" stage="Working Set" /></outputs></stage><stage stageid="92e54184-9c46-425a-a681-ca15d5f38671" name="Get Memory Set" type="Code"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><narrative>Used += to return the total memory used by the application we are interested - just in case it is running multiple times.</narrative><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Proc" expr="[Process Name]" /></inputs><outputs><output type="number" name="Working Set" stage="Working Set" /></outputs><onsuccess>d9a48cd9-620d-4b45-87bb-cb1a223d729e</onsuccess><code><![CDATA[
For Each P As Process in Process.GetProcesses()
	If P.ProcessName = Proc Then
		Working_Set += P.WorkingSet64
	End If
Next]]></code></stage><stage stageid="2db08314-74db-4968-8a01-2fffb03cc350" name="Process Name" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="135" y="-105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="192be4f9-084a-4c4d-99a1-67383bb9cf30" name="Working Set" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">0</initialvalue><private /><alwaysinit /></stage><stage stageid="fb42bad5-7a16-4ac1-8cc7-148cb8ad1d0f" name="Font Smoothing Enabled" type="SubSheetInfo"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><narrative>Gets the font smoothing setting for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ad641c65-2bb5-4746-a61c-38a70a4e0b89" name="Start" type="Start"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>96f9fe29-f641-44ab-ab0e-a4091edaec4c</onsuccess></stage><stage stageid="9150eaee-22ec-4228-803e-123c888b87e5" name="End" type="End"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" narrative="True if font smoothing is enabled" stage="Enabled?" /></outputs></stage><stage stageid="96f9fe29-f641-44ab-ab0e-a4091edaec4c" name="Get Font Smoothing Enabled" type="Code"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" stage="Enabled?" /></outputs><onsuccess>9150eaee-22ec-4228-803e-123c888b87e5</onsuccess><code><![CDATA[Enabled=System.Windows.Forms.Systeminformation.IsFontSmoothingEnabled]]></code></stage><stage stageid="d7db2bff-a394-483d-a249-bae03f688e95" name="Enabled?" type="Data"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><display x="120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80a2dcaa-31dd-419b-9fd4-a61249245b1b" name="Start Process" type="SubSheetInfo"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><narrative>Starts a process directly with the given arguments.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d5177aa-21f6-4dac-b731-60fd85c76097" name="Start" type="Start"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or short cut to start" stage="Application" /><input type="text" name="Arguments" narrative="Any arguments needed for the app" stage="Arguments" /></inputs><onsuccess>8fd5d005-95ec-43c3-acae-de13b914eb3e</onsuccess></stage><stage stageid="9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3" name="End" type="End"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3401dc5-5639-4e5d-b55a-b633330db327" name="Run Process Until Ended" type="SubSheetInfo"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><narrative>Run a process and wait until completion or timeout.</narrative><display x="-195" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f6878e25-301c-4540-a15d-7a83dfc57a75" name="End" type="End"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ddad15-d793-4697-8f79-1a42247fb0ba" name="Note1" type="Note"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca8b3a6e-c15d-4b6b-bf9f-96c0675d8e04" name="Application" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d495c29-e0f2-4bdd-ac85-b7875f7b1117" name="Arguments" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8fd5d005-95ec-43c3-acae-de13b914eb3e" name="Start Process" type="Code"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" expr="[Application]" /><input type="text" name="Arguments" expr="[Arguments]" /></inputs><onsuccess>9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3</onsuccess><code><![CDATA[If Arguments<>"" Then
  System.Diagnostics.Process.Start(Application, Arguments)
Else
  System.Diagnostics.Process.Start(Application)
End If]]></code></stage><stage stageid="085fdcca-3a7c-4a20-8b83-69add0889a54" name="Application" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e53a27fe-26fe-4503-ab86-8a5208e43d80" name="Arguments" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b84d4bb-deea-40c5-96eb-6adcf59fe7cf" name="Run Process" type="Code"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="appn" expr="[Application]" /><input type="text" name="args" expr="[Arguments]" /><input type="text" name="dir" expr="[Working Folder]" /><input type="timespan" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="timedOut" stage="Fail Datetime Reached?" /></outputs><onsuccess>7fa022c9-fce8-496a-a40b-9119406000db</onsuccess><code><![CDATA[timedOut = False
Dim startTime as Date = Date.Now

Dim info as New ProcessStartInfo(appn)
If args <> "" Then  info.Arguments = args
If dir <> "" Then info.WorkingDirectory = dir

Using proc As Process = Process.Start(info)
	timedOut = Not proc.WaitForExit( _
	 CInt(timeout.TotalMilliseconds))
End Using]]></code></stage><stage stageid="f0792b52-0999-4f35-a46c-513fdcc3c381" name="Timeout" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>0.00:00:10</initialvalue><private /><alwaysinit /></stage><stage stageid="2adaf80c-c627-4556-8b6d-64929056128b" name="Start" type="Start"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or shortcut to start" stage="Application" /><input type="text" name="Arguments" narrative="Optional - any arguments needed to run the application" stage="Arguments" /><input type="text" name="Working Folder" narrative="Optional - the application working folder" stage="Working Folder" /><input type="timespan" name="Timeout" narrative="How long to wait for the application to finish. Default is 10 seconds" stage="Timeout" /></inputs><onsuccess>0b84d4bb-deea-40c5-96eb-6adcf59fe7cf</onsuccess></stage><stage stageid="c91ac000-31f2-44b8-a481-a878929285ae" name="Fail Datetime Reached?" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="7fa022c9-fce8-496a-a40b-9119406000db" name="Timed Out?" type="Decision"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Fail Datetime Reached?]" /><ontrue>433c4289-a312-4554-bc27-6ee3c7ace153</ontrue><onfalse>f6878e25-301c-4540-a15d-7a83dfc57a75</onfalse></stage><stage stageid="433c4289-a312-4554-bc27-6ee3c7ace153" name="System Exception" type="Exception"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Application &quot; &amp; [Application] &amp; &quot; was still running after the maximum time period&quot;" /></stage><stage stageid="bcdc67ee-3c90-443c-9c4f-ec02fc8ee8d2" name="Wait for Process" type="SubSheetInfo"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><narrative>Attach to a process and wait for it to complete.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99a09b67-00bd-4e8a-bad7-2f589ac9de94" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="0dcbb991-85d4-45bb-aaa9-a8bf5da36d15" name="Start" type="Start"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Maximum wait time (seconds)" narrative="The maximum time to wait for the process to complete" stage="Maximum wait time (seconds)" /><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /></inputs><onsuccess>dfe0f2dc-5806-4cf9-82f3-269f9b06b03f</onsuccess></stage><stage stageid="55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="e1eea34b-f6e4-49b3-bcae-930f70caec29" name="Maximum wait time (seconds)" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dfe0f2dc-5806-4cf9-82f3-269f9b06b03f" name="Wait for process" type="Code"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Max Wait" expr="[Maximum wait time (seconds)]" /></inputs><outputs><output type="flag" name="Found?" stage="Found?" /></outputs><onsuccess>55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd</onsuccess><code><![CDATA[                Try
                  Found_ = False
                  Dim bProcFound as Boolean = False
                  Dim iLoop as Integer = 0
                  Dim myProcesses() As System.Diagnostics.Process
                  Dim instance As System.Diagnostics.Process
                  Do While bProcFound = False AND iLoop < Max_Wait
                    myProcesses = System.Diagnostics.Process.GetProcessesByName(Process_Name)
                    For Each instance In myProcesses
                        bProcFound = True
                        Found_ = True
                    Next
                    Threading.Thread.Sleep(1000)
                    iloop += 1
                  Loop
                Catch ex As Exception
                End Try]]></code></stage><stage stageid="9344b166-5d5d-4b99-bc53-0c0331b8c776" name="Found?" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a02d7fb-31ed-4c83-92c9-9a9a7831920e" name="Process Name" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="952ca62f-afb2-4f25-adea-21d86339081c" name="Wait for Process Window" type="SubSheetInfo"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><narrative>Waits for a process with a given name has displayed a window with the given title.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19ea35dc-66b8-406e-9eca-4c6ef4d4e0ab" name="Start" type="Start"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /><input type="text" name="Window Title" narrative="The title of the window within the process" stage="Window Title" /><input type="number" name="Wait" narrative="The maximum amount of time to wait for" stage="Wait" /></inputs><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess></stage><stage stageid="b6fdc874-6a8d-405b-946e-10b6b47a6ae1" name="End" type="End"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /></outputs></stage><stage stageid="d3b1986a-fa70-41e9-a8af-cd2ffc78342e" name="Find Process" type="Code"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="text" name="Window Title" expr="[Window Title]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f</onsuccess><code><![CDATA[try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(process_name)

	if p.mainwindowtitle.trim.tolower like window_title.trim.tolower then
		found = true
		exit sub
	end if

next

catch e as exception
end try]]></code></stage><stage stageid="6088ca18-1f7c-4db7-84af-ccecfe1ced0f" name="Time Out2" type="WaitEnd"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid></stage><stage stageid="4498756a-e9e1-4bef-86e6-3b7ed91a7439" name="Wait" type="WaitStart"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid><choices /><timeout>0.5</timeout></stage><stage stageid="ba11e756-90e9-4cd7-a787-a41c2818e4b6" name="Count Down" type="Calculation"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4498756a-e9e1-4bef-86e6-3b7ed91a7439</onsuccess><calculation expression="[Wait]-0.5" stage="Wait" /></stage><stage stageid="a5225d0b-41b3-4ed2-9f7c-31461a1f262a" name="Wait?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Wait]&gt;0" /><ontrue>ba11e756-90e9-4cd7-a787-a41c2818e4b6</ontrue><onfalse>ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9</onfalse></stage><stage stageid="d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f" name="Found?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Found]" /><ontrue>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</ontrue><onfalse>a5225d0b-41b3-4ed2-9f7c-31461a1f262a</onfalse></stage><stage stageid="ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9" name="anchor1" type="Anchor"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</onsuccess></stage><stage stageid="00581602-0606-4a0b-8f92-3dab2b97c72d" name="Process Name" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6f981e4-e1f7-40a1-bf9e-461e118c4bf3" name="Window Title" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5eaecb90-3ed2-45ac-9948-5fb96f2b416a" name="Found" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80076f3c-7351-4c27-97b5-c8578ae2761c" name="Wait" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7fc8557d-14e7-4b64-b495-23b8a7c76ef7" name="Get Clipboard" type="SubSheetInfo"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><narrative>Gets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1de3e23-13cc-4058-95cb-5d1b72e68cac" name="Start" type="Start"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>106d82b6-72c5-41b6-af2c-3ab3709a9c4e</onsuccess></stage><stage stageid="211e889c-ac33-46c2-8c6a-3d01c6f1ae4a" name="End" type="End"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs></stage><stage stageid="106d82b6-72c5-41b6-af2c-3ab3709a9c4e" name="Get" type="Calculation"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>211e889c-ac33-46c2-8c6a-3d01c6f1ae4a</onsuccess><calculation expression="GetClipboard()" stage="Clipboard" /></stage><stage stageid="0634315f-c572-4cf9-8727-98308e50c2c2" name="Clipboard" type="Data"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><display x="90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62bf25c7-7263-4fb3-bef2-20c9d9c2113d" name="Set Clipboard" type="SubSheetInfo"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><narrative>Sets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="57eca987-ec5e-485a-a03b-40c653f72a34" name="Start" type="Start"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" narrative="The value to set the clipboard to." stage="Clipboard" /></inputs><onsuccess>54826c34-2991-4964-b0a3-0e0a2f951f29</onsuccess></stage><stage stageid="d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c" name="End" type="End"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54826c34-2991-4964-b0a3-0e0a2f951f29" name="Set" type="Code"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="[Clipboard]" /></inputs><onsuccess>d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c</onsuccess><code><![CDATA[System.Windows.Forms.Clipboard.SetDataObject(Clipboard)]]></code></stage><stage stageid="121f76bc-6b69-43a4-9484-16729e37267b" name="Clipboard" type="Data"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8fa4afe-4c2c-409d-9691-e213b773c434" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><narrative>Clears the clipboard contents.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="706b08af-a9e1-4484-8c41-b06b8e76af1e" name="Start" type="Start"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d1113981-40f5-450a-8b7e-e059eed37e76</onsuccess></stage><stage stageid="e13b6d4e-e05c-491e-ace6-54389e4a99fb" name="End" type="End"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1113981-40f5-450a-8b7e-e059eed37e76" name="Set Clipboard" type="SubSheet"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="&quot;&quot;" /></inputs><onsuccess>e13b6d4e-e05c-491e-ace6-54389e4a99fb</onsuccess><processid>cf9f6573-f06c-4ab6-9672-34d2e644415e</processid></stage><stage stageid="15c6de75-886d-492c-8c12-5f0de483e1f7" name="Get User Name" type="SubSheetInfo"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a6bce0ea-b898-4abc-9a4f-bcfce32b3bb9" name="Start" type="Start"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c731c906-58b6-4969-bd70-b7ecd7fa47ae</onsuccess></stage><stage stageid="ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae" name="End" type="End"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="User Name" narrative="The name of the logged in user in the current system" stage="Username" /></outputs></stage><stage stageid="c731c906-58b6-4969-bd70-b7ecd7fa47ae" name="GetUserName" type="Code"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="username" stage="Username" /></outputs><onsuccess>ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae</onsuccess><code><![CDATA[
username = Environment.UserName]]></code></stage><stage stageid="b3608be8-eeaa-4984-891b-4d8c705ac7f4" name="Username" type="Data"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b47157dd-5fca-4b0b-989b-b23a03641f3f" name="Get Machine Name" type="SubSheetInfo"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f26fd0-6cfa-4de8-b62a-fd9c09f47be4" name="Start" type="Start"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61db579f-944a-4ba8-aedc-bdf80bc31cb7</onsuccess></stage><stage stageid="a69b53e7-8e67-4383-9b6f-28c57c9a82eb" name="End" type="End"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Machine Name" narrative="The hostname of the machine running this action" stage="Machine Name" /></outputs></stage><stage stageid="61db579f-944a-4ba8-aedc-bdf80bc31cb7" name="GetMachineName" type="Code"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="machineName" stage="Machine Name" /></outputs><onsuccess>a69b53e7-8e67-4383-9b6f-28c57c9a82eb</onsuccess><code><![CDATA[
machineName = Environment.MachineName]]></code></stage><stage stageid="e3b5bdc7-5646-4f63-b78b-c9824a496d2f" name="Machine Name" type="Data"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94b4d694-3e3a-4bb2-bcb6-15a401f31b76" name="Working Folder" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc49d63c-0e29-422f-b99c-4689f5b5afd1" name="Input Args" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="91242c6b-8086-4fd1-99ea-efb0549f2517" name="Variables" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fe09088f-160d-4f5e-af9d-a2cf44a91d21" name="Start Process Read Stderr and Stdout" type="SubSheetInfo"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><narrative>Starts a process directly with the given arguments, reads the standard output and standard error and outputs them in seperate data items.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="56b0bbbe-2836-41b5-8ccf-30fa098e975f" name="Start" type="Start"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="0" /><inputs><input type="text" name="Arguments" narrative="The arguments that coincide with the process." stage="Arguments" /><input type="text" name="Process Name" narrative="The name of the process to start." stage="Process Name" /></inputs><onsuccess>d8552129-84eb-4d65-8bee-d06820fb6e5f</onsuccess></stage><stage stageid="e9699401-5328-4e3b-ad11-bd29880236e4" name="End" type="End"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="120" /><outputs><output type="text" name="Standard Output" stage="Standard Output" /><output type="text" name="Standard Error" stage="Standard Error" /></outputs></stage><stage stageid="1a31c8d4-725e-4b41-8b64-72ff5feccd2f" name="Arguments" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8552129-84eb-4d65-8bee-d06820fb6e5f" name="Run Process read Output" type="Code"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="60" /><inputs><input type="text" name="Argument" expr="[Arguments]" /><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="text" name="Standard Output" stage="Standard Output" /><output type="text" name="Standard Error" stage="Standard Error" /></outputs><onsuccess>e9699401-5328-4e3b-ad11-bd29880236e4</onsuccess><code><![CDATA[Dim processName As String = Process_Name

Dim process As New Process() With {
	.StartInfo = New ProcessStartInfo() With {
		.FileName = processName,
		.Arguments = Argument,
		.UseShellExecute = False,
		.CreateNoWindow = True,
		.RedirectStandardError = True,
		.RedirectStandardOutput = True
	}
}

process.Start()

' Read the standard out and standard error async
' to avoid any EOF blocking while the process
' waits to exit.

Dim standardOutput = process.StandardOutput.ReadToEndAsync()
Dim standardError = process.StandardError.ReadToEndAsync()

process.WaitForExit()

If standardOutput.isCompleted Then Standard_Output = standardOutput.Result
If standardError.isCompleted Then Standard_Error = standardError.Result]]></code></stage><stage stageid="458272d5-fe32-4588-9ef3-7af2fbacdf25" name="Standard Output" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="180" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a63c7a4b-9add-4e2e-8f28-e8886b11dee1" name="Standard Error" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1fe26b2b-6b1d-4e63-9679-97779a9da64f" name="Inputs" type="Block"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="679cebbb-478d-4647-9cf9-6459799440aa" name="Outputs" type="Block"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-270" y="105" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8f6e9278-4ab8-4754-935f-66082c13a038" name="Process Name" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" name="Utility - File Management" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - File Management" version="6.10.1.35171" bpversion="7.1.1.65484" narrative="Utility methods for interacting with the file System." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>149</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e3c209b-a109-46a0-9ff0-e2dc6b8791fb" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8043916d-2ef9-45b8-ab66-f4c20ef1b8e3" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea" type="Normal" published="True"><name>Download File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a12dbad-57fd-45a4-b859-62df514a34d3" type="Normal" published="True"><name>Get Files</name><view><camerax>106</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bafee17-a81a-40f0-9b6b-80b78142dd87" type="Normal" published="True"><name>Get Folders</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60b8a01d-1f74-4169-b192-5e363a7b5e61" type="Normal" published="True"><name>File Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20e6a636-d89b-4c08-b90d-8852894005a4" type="Normal" published="True"><name>Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ff30a41-e177-40c5-a756-a6b466004f32" type="Normal" published="True"><name>Create Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d68f192f-eeb7-420e-b156-9636503b6082" type="Normal" published="True"><name>Delete Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8" type="Normal" published="True"><name>Sub Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3050915-ad2e-446e-a1d6-99d11506f55e" type="Normal" published="True"><name>Split Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c80dea92-57e8-4e2e-8df4-f3ee6ceeb717" type="Normal" published="True"><name>Combine Path</name><view><camerax>202</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed509af2-4b4a-447d-8196-18105ed12739" type="Normal" published="True"><name>Delete Files</name><view><camerax>106</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70940cba-8680-4eb9-8066-9e383fc5b39b" type="Normal" published="True"><name>Delete File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e9dd304c-7d26-40f5-b193-eef36f0a370c" type="Normal" published="True"><name>Copy File</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85156833-c61c-4c78-916f-0b75a9a83e8d" type="Normal" published="True"><name>Move File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ca00106-fe4e-46c0-bffc-0dda1561434f" type="Normal" published="True"><name>Get File Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2530b0d-5530-4692-8a60-1f91d1c5a9c9" type="Normal" published="True"><name>Append to Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8eb61369-ddab-4205-9a55-81054c2e4afb" type="Normal" published="True"><name>Read All Text from File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a9cff0d-c7c5-440a-bd8d-0007e15eae4d" type="Normal" published="True"><name>Read Lines From File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="602b7aad-2626-40ba-8c4b-1ec926ae9098" type="Normal" published="True"><name>Write Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="842c79f8-aa64-4781-ad18-3982e21f0fd1" type="Normal" published="True"><name>Write Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7fa43ec-67e2-4acb-8d13-ced3c5027761" type="Normal" published="True"><name>Get CSV Text As Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c6e605-9948-429a-ac84-d2810bca75fc" type="Normal" published="True"><name>Get Special Folder Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Data.OleDB</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			If objColumn.DataType = GetType(DateTime) Then
				objColumn.DateTimeMode = DataSetDateTime.Utc
			End If
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="07048754-58c7-4201-9869-e206f1d6c32a" name="Get Files" type="SubSheetInfo"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><narrative>Gets all files in the specified folder matching the supplied file type pattern string.

Patterns - A comma-separated list of file patterns identifying the type(s) of files sought. Eg "*.jpg, *.png" retrieves all jpg and png files. The pattern "*.*" will return all files. It does not matter whether you leave a space between each pattern, or not. Where a comma is required in a file pattern it should be escaped out using the backslash character, e.g. a pattern of "*\,November.xlsx" will return all files that end with ",November.xlsx"</narrative><display x="-195" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8448350e-b6a9-4a15-a3d0-501c4967c0f9" name="Start" type="Start"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All matching files will be returned." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" stage="Folder" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" stage="Patterns CSV" /></inputs><onsuccess>acbbbddf-8b42-4353-8b0a-83eaeb216a63</onsuccess></stage><stage stageid="acbbbddf-8b42-4353-8b0a-83eaeb216a63" name="Get Files" type="Code"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Patterns CSV" expr="[Patterns CSV]" /></inputs><outputs><output type="collection" name="Files" stage="Files" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFiles As FileInfo()
Dim aPatterns As String()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Folder," _
		& "Name," _
		& "Extension," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written," _
		& "Read Only," _
		& "Bytes", _
		"System.String," _
		& "System.String," _
		& "System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.Boolean," _
		& "System.Double")
		
	Patterns_CSV = Patterns_CSV.replace("\,", "?")
	aPatterns = Patterns_CSV.split(",")

	For each sPattern As String in aPatterns
		sPattern = sPattern.replace("?", ",")
		aFiles = oDirectory.GetFiles(sPattern.Trim)
		For each oFile as FileInfo in aFiles
			objRow = objTable.NewRow()
			objRow("Path") = oFile.FullName
			objRow("Folder") = oFile.DirectoryName
			objRow("Name") = oFile.Name
			objRow("Extension") = oFile.Extension
			objRow("Created") = oFile.CreationTimeUtc
			objRow("Last Accessed") = oFile.LastAccessTimeUtc
			objRow("Last Written") = oFile.LastWriteTimeUtc
			objRow("Read Only") = oFile.IsReadOnly
			objRow("Bytes") = oFile.Length

			objTable.Rows.Add(objRow)
		Next
	Next

	objTable = objTable.DefaultView.ToTable(True, _
		"Path", _
		"Folder", _
		"Name", _
		"Extension", _
		"Created", _
		"Last Accessed", _
		"Last Written", _
		"Read Only", _
		"Bytes")

	Files = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="913867cd-7535-4857-b6b9-1b1ead2bc67f" name="Folder" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp</initialvalue><private /><alwaysinit /></stage><stage stageid="624240c2-02c8-48c3-9040-e9388fddf1b1" name="Patterns CSV" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.jpg</initialvalue><private /><alwaysinit /></stage><stage stageid="95f234d2-8c1a-466c-b8a6-fb7dc34de936" name="Files" type="Collection"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3764ae17-85d7-4ebb-99b5-502b95d7abd6" name="End" type="End"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs></stage><stage stageid="8e80cc1d-27ed-43d9-985e-90d828191fb7" name="Success" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="950111b1-7b05-4076-a673-b07166b76cdb" name="Message" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32964141-871e-474a-a1f8-eea0b10c5df2" name="Delete Files" type="SubSheetInfo"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><narrative>Deletes all files in the specified folder, matching the supplied file extension pattern.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82b919fe-64b2-4c2b-8173-5706f671c5ce" name="End" type="End"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea337dc4-4fd9-4d31-8cc6-23da41cd5665" name="Start" type="Start"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All files within the named folder which match the supplied pattern will have been deleted." /></postconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The path from which to delete the files" stage="Folder" /><input type="text" name="Pattern" narrative="The wildcard pattern of files to delete" stage="Pattern" /></inputs><onsuccess>202c81a6-fd90-46ed-9eee-73c24863b69b</onsuccess></stage><stage stageid="202c81a6-fd90-46ed-9eee-73c24863b69b" name="Delete Files" type="Code"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Pattern" expr="[Pattern]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess><code><![CDATA[Dim aFiles As String()

Try

	aFiles = Directory.GetFiles(Folder, Pattern)

	For each f as String in aFiles
		File.Delete(f)
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try
]]></code></stage><stage stageid="119002ff-ee61-4f32-b096-f3953ad107e1" name="Folder" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp\Blue Prism</initialvalue><private /><alwaysinit /></stage><stage stageid="121b4fd7-a9da-4498-a8d5-6a0ab2dae758" name="Pattern" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.TIF</initialvalue><private /><alwaysinit /></stage><stage stageid="623ad5b5-f965-4f97-9d46-435717e70b25" name="Success" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77c8238b-c415-496f-87c3-50033ec4d2a5" name="Message" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7891b89f-2307-4444-8b6e-17e25e53501f" name="Append to Text File" type="SubSheetInfo"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><narrative>Appends some text to the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="83010bd2-019e-4b04-af0b-b401efe8d128" name="Start" type="Start"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data. The destination file need not exist already. If it does not exist then it will be created." /></preconditions><postconditions><condition narrative="The supplied text will have been appended." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" stage="File Name" /><input type="text" name="Text" narrative="The text to append to the file" stage="Text" /></inputs><onsuccess>eeb7f0eb-73fc-4849-96a9-35f410bbde67</onsuccess></stage><stage stageid="39862014-df78-414b-9ccd-5c0d392aa282" name="End" type="End"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="f9d3e8a1-7f67-4991-b9f1-e8ec160de075" name="Success" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2ef09390-e450-4d10-a32b-4448a65b0aaf" name="Message" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e77fcf2-8d12-4f3b-acf3-e15dccb8e90a" name="Text" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f599b6ac-5574-438b-8617-8821d9800cf7" name="File Name" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeb7f0eb-73fc-4849-96a9-35f410bbde67" name="Append" type="Code"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e441202-3878-4eb6-b156-6f517be6de00</onsuccess><code><![CDATA[Try

	Dim sw As StreamWriter

	If File.Exists(File_Name) = False Then
		sw = File.CreateText(File_Name)
	Else
		sw = File.AppendText(File_Name)
	End If

	sw.WriteLine(Text)
	sw.Flush()
	sw.Close()
	
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="6428e7b4-8ed6-4930-bc8f-636cc71e955a" name="Read All Text from File" type="SubSheetInfo"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><narrative>Reads the entire contents of a file as text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a783ee6f-6425-4420-9b9f-759c781f3544" name="Start" type="Start"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><preconditions><condition narrative="The file must exist." /></preconditions><postconditions><condition narrative="The full text of the file will be read." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path the file to read the text from" stage="File Name" /></inputs><onsuccess>8107f164-7ef3-4164-8a2c-500055c7b374</onsuccess></stage><stage stageid="0a76495e-bc0d-4cea-bae0-85da1e15c74f" name="End" type="End"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="text" name="Text" narrative="The text of the file" stage="Text" /></outputs></stage><stage stageid="995662eb-baf3-436e-a2c1-2cc3ccfcf8fb" name="Success" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee454760-e4c3-44cc-b071-30cdafbe8355" name="Message" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dbbbe6e-0b94-4d90-940a-c99f9671b774" name="Text" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265e14ba-8649-477d-9d21-092a9bc9ad2d" name="File Name" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8107f164-7ef3-4164-8a2c-500055c7b374" name="Read Text" type="Code"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Text" stage="Text" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7419fb71-5c79-4fb6-9e59-b9fbc1d63e45</onsuccess><code><![CDATA[Try
   If File.Exists(File_Name) Then
   	Dim sr As New StreamReader(File_Name)
   	Text = sr.ReadToEnd
   	sr.Close()
   	Success = True
   	Message = ""
   Else
      Throw New ApplicationException("The file at " & File_Name & " does not exist")
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="a3f9a500-e2f0-4f48-9bb2-38ad1a4592b9" name="Write Text File" type="SubSheetInfo"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f408f78-c150-49f6-9f52-a3fb59ce307e" name="Start" type="Start"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data." /></preconditions><postconditions><condition narrative="The supplied text will have been written to the destination file." /></postconditions><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /></inputs><onsuccess>7d5efe35-64fc-48a0-b5a7-a5b787e90578</onsuccess></stage><stage stageid="1aab3a10-a813-470b-97c8-57938a0d0024" name="End" type="End"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="e85add3f-f65a-47dd-8be7-5ee764878dee" name="Success" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3ba21666-440e-40ea-80e4-bb02ff535775" name="Message" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="951ed278-f157-450e-90d0-06cc330e358c" name="Text" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20ca70ee-ce56-4594-90ca-a03ba1934f47" name="File Name" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d5efe35-64fc-48a0-b5a7-a5b787e90578" name="Write" type="Code"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9219c3c4-effd-4dfc-9020-8dafd054ea8f</onsuccess><code><![CDATA[Try
	File.WriteAllText(File_Name, Text)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="7dfd4754-e49a-447b-b9c3-c36266dfa2e8" name="File Exists" type="SubSheetInfo"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><narrative>Determines whether the specified file exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da1de8a5-b06c-4fc0-b316-2fec1a802056" name="End" type="End"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the file exists" stage="Exists" /></outputs></stage><stage stageid="6b0d4683-2748-485e-88ed-cdf57c76992d" name="Start" type="Start"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The existence of the file of interest will have been determined." /></postconditions><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The name of the file to check" stage="File Name" /></inputs><onsuccess>7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed</onsuccess></stage><stage stageid="f92a43a8-74e6-4f49-bf65-dc7663017f2b" name="File Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed" name="File Exists" type="Code"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>da1de8a5-b06c-4fc0-b316-2fec1a802056</onsuccess><code><![CDATA[Try
	Exists = File.Exists(File_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="817167f9-bb73-4622-9254-e249dff5369f" name="Exists" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c50578e4-df15-4b21-8a4c-469dae40724d" name="Copy File" type="SubSheetInfo"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><narrative>Copies a file to the named destination.</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30f8df38-bbc1-4b94-916b-ce06a40b630c" name="Start" type="Start"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><preconditions><condition narrative="The file to be copied must exist. The full destination path must be specified. There must be sufficient free disk space to complete the operation." /></preconditions><postconditions><condition narrative="The file will have been copied to the specified destination." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to be copied" stage="File Path" /><input type="text" name="Destination Path" narrative="The path of the directory to copy the file to" stage="Destination Path" /></inputs><onsuccess>8de7d816-2984-4b8f-a1f0-dfdf25b3f108</onsuccess></stage><stage stageid="53e1058f-89a5-4172-b9b5-89530de8ef51" name="Success" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="471fd171-54c1-4c9b-aa1d-6f471b939942" name="Message" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8de7d816-2984-4b8f-a1f0-dfdf25b3f108" name="Copy" type="Code"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acf72cc7-cf73-466f-8c22-9fb633ed3c24</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.CopyTo(sDestinationFile, True)
		Else
			oFile.CopyTo(sDestinationFolder & oFile.Name, True)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f12e4bba-1185-469f-aea9-0b8954cbed77" name="File Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30982d9d-8e54-4d64-af7e-2a7df861c94f" name="Destination Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d608807-5c80-49f5-a177-05a15f6d0ff7" name="Get File Size" type="SubSheetInfo"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><narrative>Gets the size of the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d07f9435-79c9-4cd5-b803-1cde78f5262c" name="End" type="End"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Size" narrative="The size of the file in bytes" stage="Bytes" /></outputs></stage><stage stageid="d573bf14-6cce-4455-ae05-908d9a527dcb" name="Start" type="Start"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><preconditions><condition narrative="The specified file must exist." /></preconditions><postconditions><condition narrative="The file size will have been determined." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="Full path to the file to get the file size" stage="File Path" /></inputs><onsuccess>6543595a-59fb-4304-b9f3-1acf662a1237</onsuccess></stage><stage stageid="0c8b0631-90f5-4646-b0cf-8fab74f80999" name="File Path" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6543595a-59fb-4304-b9f3-1acf662a1237" name="Get Byte Count" type="Code"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="number" name="Bytes" stage="Bytes" /></outputs><onsuccess>d07f9435-79c9-4cd5-b803-1cde78f5262c</onsuccess><code><![CDATA[Try

	Bytes = File.ReadAllBytes(File_Path).Length

Catch e As Exception
	Bytes = 0
End Try]]></code></stage><stage stageid="3eb7673c-2193-4d7f-ac06-85b1da9ce046" name="Bytes" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1f13191-1583-4a03-865c-3f0758139ca3" name="Delete File" type="SubSheetInfo"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><narrative>Deletes a single file from the file system.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="31d32d9a-4f5c-4793-afc7-d84f096922b9" name="Start" type="Start"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><preconditions><condition narrative="The file to be deleted must exist." /></preconditions><postconditions><condition narrative="The named file will have been deleted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to delete" stage="File Name" /></inputs><onsuccess>b6262d8e-0c7b-459d-b177-37ae4d226ddf</onsuccess></stage><stage stageid="cd763cbc-81c0-42b1-9d9d-b2b7d325235d" name="File Name" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6262d8e-0c7b-459d-b177-37ae4d226ddf" name="Delete File" type="Code"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess><code><![CDATA[Try
   If Not File.Exists(File_Name) Then
      Throw New ApplicationException("The specified file at " & File_Name & " does not exist.")
   Else
	   File.Delete(File_Name)
	   Success = True
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1cd4abb9-4dc3-494c-86a7-d85877a1827a" name="Success" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc5b5c19-fe76-4278-95d2-f89c3588893c" name="Message" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7bae4fd-01fc-4447-8cf4-fbfd04353f72" name="End" type="End"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="576295b9-757e-4588-948e-34aac5140c29" name="End" type="End"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="cef63c98-a65d-4862-9d1d-ff02fbfc92f5" name="Get Folders" type="SubSheetInfo"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><narrative>Gets a collection of all subfolders in the specified file system folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f90df4f3-71ee-4470-b90b-1e8a0513cad8" name="Start" type="Start"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All sub-folders will be returned, if any exist." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for sub-folders" stage="Folder" /></inputs><onsuccess>ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43</onsuccess></stage><stage stageid="ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43" name="Get Folders" type="Code"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /></inputs><outputs><output type="collection" name="Folders" stage="Folders" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3dde4f26-00a8-4e1a-af12-b8a14178d89c</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFolders As DirectoryInfo()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Name," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written", _
		"System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime")
		
	aFolders = oDirectory.GetDirectories()
	For each oFolder as DirectoryInfo in aFolders
		objRow = objTable.NewRow()
		objRow("Path") = oFolder.FullName
		objRow("Name") = oFolder.Name
		objRow("Created") = oFolder.CreationTimeUtc
		objRow("Last Accessed") = oFolder.LastAccessTimeUtc
		objRow("Last Written") = oFolder.LastWriteTimeUtc

		objTable.Rows.Add(objRow)
	Next

	Folders = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f72d7f92-f944-412b-8890-737f3be3b0a1" name="Folder" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\</initialvalue><private /><alwaysinit /></stage><stage stageid="1384f5ee-e382-4900-9900-e2e2eb7a9a78" name="Folders" type="Collection"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa67216d-b83f-4c14-9f71-5ec6df626c08" name="End" type="End"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="collection" name="Folders" narrative="A collection of the sub-folders found within the folder" stage="Folders" /></outputs></stage><stage stageid="759f9ebb-96f6-432b-a21e-6673b71cac22" name="Success" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5afbf383-4ea5-42f7-a298-d02bf6dc267a" name="Message" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="076db864-0743-4339-b606-174f056c63f9" name="Move File" type="SubSheetInfo"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><narrative>Moves the specified file to a new location.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8c383fb0-b58b-44cd-8dec-c5934289e107" name="Start" type="Start"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><preconditions><condition narrative="The file to be moved must exist. There must be sufficient disk space to move the file." /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" stage="File Path" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" stage="Destination Path" /></inputs><onsuccess>8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b</onsuccess></stage><stage stageid="2c8abe9a-1466-4283-999a-c5c7838a0e27" name="End" type="End"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="a980280c-98cd-41d0-8a54-734c9bfacc5c" name="Success" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="779e3dfa-a01e-47f9-98c4-9ac10fcd5a11" name="Message" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b" name="Move" type="Code"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.MoveTo(sDestinationFile)
		Else
			oFile.MoveTo(sDestinationFolder & oFile.Name)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ba83bbd5-0c51-49b0-ac63-de9e754aab48" name="File Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57b074ac-98b9-40d1-a342-36dc0a514f77" name="Destination Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83a23da-bc05-4aa4-8a8e-6c09524e2baf" name="Split Path" type="SubSheetInfo"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><narrative>Splits a file path into its component parts - the filename and the folder path. The trailing backslash is omitted from the directory part.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c655f85-fb96-448d-be05-5f6c833e1882" name="Start" type="Start"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><preconditions><condition narrative="The specified path must correspond to a file which exists on disk." /></preconditions><postconditions><condition narrative="The path will have been separated." /></postconditions><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The path to split" stage="File Path" /></inputs><onsuccess>138061d1-d866-403d-af52-37ea509c7e78</onsuccess></stage><stage stageid="138061d1-d866-403d-af52-37ea509c7e78" name="Split Path" type="Code"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="text" name="Folder" stage="Folder" /><output type="text" name="File Name" stage="File Name" /></outputs><onsuccess>0e35cb6c-257d-40a6-ba20-d661c3ad83fe</onsuccess><code><![CDATA[
Folder = Path.GetDirectoryName(File_Path)
File_Name = Path.GetFileName(File_Path)
]]></code></stage><stage stageid="69bae4e1-98fe-460c-807d-30657ae18ebf" name="File Name" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de3608a3-9cb7-41c3-ae88-da3dad92053e" name="Folder" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0497cae-7418-46ec-a442-ac21369c7a2f" name="File Path" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e35cb6c-257d-40a6-ba20-d661c3ad83fe" name="End" type="End"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="File Name" narrative="The filename" stage="File Name" /><output type="text" name="Folder" narrative="The folder" stage="Folder" /></outputs></stage><stage stageid="3068b898-6d19-4469-8efd-f355853fda4e" name="Directory Exists" type="SubSheetInfo"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><narrative>Determines whether the specified directory exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="14e7b70b-4620-4b05-a9f8-5c31396209bd" name="Start" type="Start"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" narrative="The directory to check exists" stage="Directory Name" /></inputs><onsuccess>50ef1149-8307-4080-9028-d6bec6eafd78</onsuccess></stage><stage stageid="4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44" name="End" type="End"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the directory exists" stage="Exists" /></outputs></stage><stage stageid="50ef1149-8307-4080-9028-d6bec6eafd78" name="Directory Exists" type="Code"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" expr="[Directory Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44</onsuccess><code><![CDATA[Try
	Exists = Directory.Exists(Directory_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="89cff60a-371d-476b-bc55-f0e56150ef45" name="Exists" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9da119d-dbd9-4320-90e1-ca33fae50a91" name="Directory Name" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1f89739-7f1c-4179-82ea-b123ecfc2854" name="Write Binary Data" type="SubSheetInfo"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><narrative>Writes binary data to a file. Any existing data in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="067fe5ce-ad15-436e-92fa-11e920e00501" name="Start" type="Start"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" narrative="The data to write to the file" stage="Binary Data" /><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>48430903-e8af-4e4a-8544-8b04afc3478b</onsuccess></stage><stage stageid="83dc26e0-402d-403d-a18c-0d3ca147ba6d" name="Binary Data" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48430903-e8af-4e4a-8544-8b04afc3478b" name="Write Binary Data" type="Code"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" expr="[Binary Data]" /><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>aed480e9-2938-4d36-b400-a3bd2580921a</onsuccess><code><![CDATA[Try
	File.WriteAllBytes(FileName, Binary_Data)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="709d1a16-f19e-4504-ae79-4a48d1e058c7" name="End" type="End"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="43cbdbc2-6fdc-4080-b257-af95daad3fe4" name="Success" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0aebe753-5358-4cf3-982a-a9f0a9870be7" name="Message" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e035935-d499-4706-8ba0-78fdee0a782f" name="FileName" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7604000-e2fb-4a03-b8b4-caac4c6b9f9b" name="Combine Path" type="SubSheetInfo"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><narrative>Takes a file and folder and combines them into a full path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="71908284-0a93-418a-9205-32dc4780032c" name="Start" type="Start"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The path will have been combined." /></postconditions><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder to combine" stage="Folder" /><input type="text" name="File Name" narrative="The file to combine" stage="File Name" /></inputs><onsuccess>39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1</onsuccess></stage><stage stageid="39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1" name="Combine Path" type="Code"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>b4d82bcb-e011-4728-a3ec-4c052dcebaaf</onsuccess><code><![CDATA[
Path = IO.Path.Combine(Folder, File_Name)
]]></code></stage><stage stageid="dca04a3f-b696-45b1-95c8-63dce520abe3" name="File Name" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e27e592f-8a2e-4df9-9453-1cdc8621051b" name="Folder" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4d82bcb-e011-4728-a3ec-4c052dcebaaf" name="End" type="End"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Path" narrative="The combined full path" stage="Path" /></outputs></stage><stage stageid="ef4fc19c-8897-431e-8688-11a52561113f" name="Path" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a664d6c1-8951-4309-95b7-b7ae2edced0d" name="Create Directory" type="SubSheetInfo"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><narrative>Creates a directory under the given path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82e63828-72ff-4705-8c88-89c3316aa73e" name="Start" type="Start"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path in which to create the directory" stage="Directory Path" /><input type="flag" name="Error If Already Exists" narrative="True to generate an error if the directory already exists" stage="Error If Already Exists" /></inputs><onsuccess>98af3f34-4ec7-49c5-a6cc-1cf6192b0e05</onsuccess></stage><stage stageid="e061382f-4149-485b-9668-f2fc0ca334bd" name="End" type="End"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="800212c5-6bfb-4df9-b501-39f55906a7b2" name="Directory Path" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e00501ce-6aa6-4616-9bf2-3904d515656c" name="Error If Already Exists" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="98af3f34-4ec7-49c5-a6cc-1cf6192b0e05" name="Create Directory" type="Code"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="ErrorIfAlreadyExists" expr="[Error If Already Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>060a1fdb-6243-40f1-96e0-1c0b54382bfa</onsuccess><code><![CDATA[Try
   If Not Directory.Exists(Directory_Path) Then
   	Directory.CreateDirectory(Directory_Path)
   Else
      If ErrorIfAlreadyExists Then Throw New ApplicationException("Directory already exists")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="3b33d39b-1c7c-4664-ab8b-859aa2e15836" name="Success" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9cbff7ae-931b-479f-b70f-7773ddda315c" name="Error Message" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20cbacd9-1e17-4fc0-85de-64615b1f3d18" name="Delete Directory" type="SubSheetInfo"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><narrative>Deletes a directory and if Recursive is True will delete all subdirectories if present</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df3458a7-2e7e-451c-b27a-efc3737c22a4" name="Start" type="Start"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to delete" stage="Directory Path" /><input type="flag" name="Error If Not Exists" narrative="Set True to raise an error if the path does not exist" stage="Error If Not Exists" /><input type="flag" name="Recursive" narrative="Set True to delete all sub-directories of the path aswell" stage="Recursive" /></inputs><onsuccess>ef40ac3e-3a06-4ca9-a3be-daae97b8c700</onsuccess></stage><stage stageid="09677c01-2e36-4330-ae33-defa66a1e7b1" name="End" type="End"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="3afa3efd-a788-4410-a16c-5e2ecfc599d8" name="Directory Path" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef40ac3e-3a06-4ca9-a3be-daae97b8c700" name="Delete Directory" type="Code"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="Recursive" expr="[Recursive]" /><input type="flag" name="ErrorIfNotExists" expr="[Error If Not Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>8db31208-966a-494a-9315-8a4add93c64c</onsuccess><code><![CDATA[Try
   If Directory.Exists(Directory_Path) Then

		Dim SubDirectories As Boolean
		SubDirectories = False

		Dim SubdirectoryEntries As String() 
		SubdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If SubdirectoryEntries.Length > 0 Then SubDirectories = True

		If SubDirectories And Not Recursive Then Throw New ApplicationException("Directory has sub directories and will not be deleted")
   	
		Directory.Delete(Directory_Path, Recursive) 
   
Else
      If ErrorIfNotExists Then Throw New ApplicationException("Directory does not exist")
   End If

	Success = True


Catch UAEx as UnauthorizedAccessException
	Success = False
	Error_Message = "The caller does not have the required permission to delete this directory or sub directories"

Catch ANEx as ArgumentNullException
	Success = False
	Error_Message = "Please check Directory Path parameter is not null"

Catch AEx as ArgumentException
	Success = False
	Error_Message = "Please check Directory Path parameter is a valid string"

Catch PTLEx as PathTooLongException
	Success = False
	Error_Message = "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters."

Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()

End Try]]></code></stage><stage stageid="1ea4ba58-4e52-4229-9f95-9f91c0fda672" name="Success" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="105" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd89d345-b43b-43b1-a112-d69cd7b07387" name="Error Message" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="240" y="-45" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="498faab3-e919-4560-a284-8303f82f3c54" name="Recursive" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c7f09a8a-5e8c-4bd8-ae1c-03c88a61bc8b" name="Error If Not Exists" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a001ca1-2f75-4d52-8668-8537da4738b3" name="Sub Directory Exists" type="SubSheetInfo"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><narrative>Checks if a directory contains sub directories</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d21f26b-5ccc-4f2f-b6f3-3443cb23a95f" name="Start" type="Start"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to check for sub directories" stage="Directory Path" /></inputs><onsuccess>9bd1eb97-f903-4b5b-bdb0-9aa7d84feead</onsuccess></stage><stage stageid="167ee595-8609-4b40-9cbb-70394613201b" name="End" type="End"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if sub directories exist" stage="Exists" /><output type="flag" name="Success" narrative="True if the check was successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="9bd1eb97-f903-4b5b-bdb0-9aa7d84feead" name="Get Sub Directories" type="Code"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>33ba9e06-b05b-4e51-baa6-7f6c9165c558</onsuccess><code><![CDATA[Try
   
Exists = False
If Directory.Exists(Directory_Path) Then
   	Dim subdirectoryEntries As String() 
		
		subdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If subdirectoryEntries.Length > 0 Then Exists = True

   Else
      Throw New ApplicationException("Directory does not exist")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try
]]></code></stage><stage stageid="50a0102e-8884-426d-b94f-ed07f6b9eb46" name="Exists" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c52a3808-5f20-4498-a5a6-6e8bd391e41c" name="Directory Path" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\TEMP\Test Directory\A\c</initialvalue><private /><alwaysinit /></stage><stage stageid="227470b6-fe82-4351-a497-6094c99e4193" name="Success" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="330" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="586142aa-051e-4ec9-8b60-fe063eb60b77" name="Error Message" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="450" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12caee97-e82e-461c-8b22-dabe4248d7a8" name="Get CSV Text As Collection" type="SubSheetInfo"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><narrative>Turns a comma seperated values file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="939139f9-83c3-4076-85ca-1daa3e637601" name="Start" type="Start"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /></inputs><onsuccess>dd7efc8a-65d0-432e-a205-643037779b8d</onsuccess></stage><stage stageid="c85955cf-695f-4e82-acdb-72332a337fc7" name="End" type="End"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /></outputs></stage><stage stageid="96016690-fb73-49d3-bcfc-56b25dd9d3db" name="CSV Location" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\BluePrism\Medalytix\iGrading\Test_Suite\ImagesIndex.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="dd7efc8a-65d0-432e-a205-643037779b8d" name="Parse CSV" type="Code"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /></outputs><onsuccess>c85955cf-695f-4e82-acdb-72332a337fc7</onsuccess><code><![CDATA[Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"


Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim cn As New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";FMT=Delimited""")
Dim da As New OleDbDataAdapter()
Dim ds As New DataSet()
Dim cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)

cn.Open()
da.SelectCommand = cd
ds.Clear()
da.Fill(ds, "CSV")
Values = ds.Tables(0)
cn.Close()]]></code></stage><stage stageid="5fe33334-21a0-4751-931d-92622545fe5d" name="CSV Values" type="Collection"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dc002ef-16ce-4e9b-9eed-1c4c8a375f11" name="First Line Is Header" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="120" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1836bd9-a0bc-45e9-9f62-2835fb1f6144" name="Get Special Folder Path" type="SubSheetInfo"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><narrative>Gets the path of a special folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="984cc49d-2710-42f2-85cc-b02b1af6ff97" name="Start" type="Start"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder Name" narrative="The name of the special folder. Supported values include ApplicationData, DesktopDirectory, MyDocuments, ProgramFiles. The values correspond to the .NET Environment.SpecialFolder enumeration." stage="Special Folder Name" /></inputs><onsuccess>548052a7-4e77-4da0-a80e-07ce9d38ecba</onsuccess></stage><stage stageid="f77e4b56-0c20-4361-b1ac-7fbae4cebd0a" name="End" type="End"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Folder Path" narrative="The corresponding path of the requested special folder" stage="Folder Path" /></outputs></stage><stage stageid="1eb8ae16-c4b3-4a26-9476-974fec0fb4c4" name="Special Folder Name" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">InternetCache</initialvalue><private /><alwaysinit /></stage><stage stageid="548052a7-4e77-4da0-a80e-07ce9d38ecba" name="Get Folder Path" type="Code"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder" expr="[Special Folder Name]" /></inputs><outputs><output type="text" name="Folder Path" stage="Folder Path" /></outputs><onsuccess>f77e4b56-0c20-4361-b1ac-7fbae4cebd0a</onsuccess><code><![CDATA[Dim EnumVal as Environment.SpecialFolder
Try
	EnumVal = Ctype(System.Enum.Parse(GetType(Environment.SpecialFolder), Special_Folder), Environment.SpecialFolder)
Catch Ex As Exception
	Throw New ApplicationException("Value '" & Special_Folder & "' is not recognised as a special folder")
End Try

Folder_Path = Environment.GetFolderPath(EnumVal)]]></code></stage><stage stageid="394a43a7-79f9-4edb-887f-d051122fa5f0" name="Folder Path" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a81b69-65ad-4194-8361-a2e49aab6c2c" name="Download File" type="SubSheetInfo"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><narrative>Downloads a file from a web URL and saves it in a folder on disk.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce6133ff-352a-4e74-b9a9-a2bb5d8c8858" name="Start" type="Start"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Source URL" narrative="The URL of the file that is to be downloaded" stage="Source URL" /><input type="text" name="Destination Path" narrative="The location of the folder where the file is to be saved" stage="Destination Path" /></inputs><onsuccess>a9bb95cf-84c0-42b2-9fac-e36252a56808</onsuccess></stage><stage stageid="00124bb2-c920-40c3-92e1-efb49b029dc0" name="End" type="End"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b30cabb-184c-427b-860e-a315e03763ba" name="Destination Path" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ee09d3b-a12d-48c7-89a2-7a947d431ac5" name="Source URL" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9bb95cf-84c0-42b2-9fac-e36252a56808" name="Download File" type="Code"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Url" expr="[Source URL]" /><input type="text" name="Path" expr="[Destination Path]" /></inputs><onsuccess>00124bb2-c920-40c3-92e1-efb49b029dc0</onsuccess><code><![CDATA[Using wc As New System.Net.WebClient()
	wc.DownloadFile(Url, Path)
End Using]]></code></stage><stage stageid="744e3f22-df5c-4d9e-984b-eceb276cbb95" name="Read Lines From File" type="SubSheetInfo"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><narrative>Reads a range of lines fom a text file</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ef75fb-7cbe-4b43-900b-bd0112866589" name="File Path" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3721f65-c0fd-4187-9e61-da35cecde126" name="Start Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3444d260-8bd2-44b4-91c8-1f4dc3a07e1d" name="End Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de2f0517-71e7-4bfa-b20b-0f6049ee064d" name="EOF" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e19c2d2b-f05b-48b3-a6c0-e6c368a0720b" name="Success" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2814638b-191d-44de-9e9d-e38ce3a2bdb5" name="Message" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="677752c3-298c-4ea1-abaf-244b239d65d0" name="Lines" type="Collection"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="180" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5bbb949-f610-4f45-bcb7-10a0fc6b123d" name="Line Count" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf17d04b-65f1-4bf3-a12c-7121e3c2a075" name="Start" type="Start"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><preconditions><condition narrative="The text file exists and the user has appropriate privileges to allow reading it" /><condition narrative="The Start Line argument is less than or equal to the End Line argument" /></preconditions><postconditions><condition narrative="The lines between and including Start Line and End Line are returned" /><condition narrative="EOF will indicate if the end of the file was reached before End Line was reached" /></postconditions><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The file to read" stage="File Path" /><input type="number" name="Start Line" narrative="The first line to read" stage="Start Line" /><input type="number" name="End Line" narrative="The last line to read" stage="End Line" /></inputs><onsuccess>4942f615-9ff9-497d-b3ff-dd697860c232</onsuccess></stage><stage stageid="76661ec7-b5b7-4cf5-9b34-27ca45c70b40" name="Read Lines" type="Code"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="number" name="Start Line" expr="[Start Line]" /><input type="number" name="End Line" expr="[End Line]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Lines" stage="Lines" /><output type="number" name="Line Count" stage="Line Count" /><output type="flag" name="EOF" stage="EOF" /></outputs><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess><code><![CDATA[' Assume success
Success = True
Message = ""

Try
	Lines = New DataTable()
	Lines.Columns.Add("Line", GetType(String))

	Using sr As New StreamReader(File_Path)

		EOF = False
		Start_Line = Math.Max(1, Start_Line)

		Dim line as String
		Dim lineNo As Integer = 0
		Do
			line = sr.ReadLine()
			lineNo += 1

			If line Is Nothing Then EOF = True : Exit Do
			If lineNo >= Start_Line Then Lines.Rows.Add(line)
			If lineNo = End_Line Then Exit Do

		Loop Until line Is Nothing
		Line_Count = Lines.Rows.Count

	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="bcb21a17-13b7-404f-b11f-16d75385411f" name="End" type="End"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True is the read was successful" stage="Success" /><output type="text" name="Message" narrative="The exception detail if the read was unsuccessful" stage="Message" /><output type="collection" name="Lines" narrative="The lines read - the collection contains a single text column 'Line'" stage="Lines" /><output type="number" name="Line Count" narrative="The number of lines read" stage="Line Count" /><output type="flag" name="End of File" narrative="True if the end of the file was reached before the 'End Line' was reached" stage="EOF" /></outputs></stage><stage stageid="4942f615-9ff9-497d-b3ff-dd697860c232" name="Start Line &gt; End Line?" type="Decision"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Start Line] &gt; [End Line]" /><ontrue>fb13e8fc-442c-4cbb-87c1-b4ec596ee962</ontrue><onfalse>76661ec7-b5b7-4cf5-9b34-27ca45c70b40</onfalse></stage><stage stageid="fb13e8fc-442c-4cbb-87c1-b4ec596ee962" name="Semi-Exception" type="MultipleCalculation"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>362c841e-8d1e-4972-b0b5-710b7bdb1f27</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Start Line (&quot; &amp; [Start Line] &amp; &quot;) cannot be later than End Line (&quot; &amp; [End Line] &amp; &quot;)&quot;" stage="Message" /></steps></stage><stage stageid="362c841e-8d1e-4972-b0b5-710b7bdb1f27" name="anchor1" type="Anchor"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess></stage><stage stageid="d049bf7c-ac22-489e-bf3d-f62d1b4b744a" name="Configure" type="SubSheetInfo"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f64d939-b1af-4604-a33c-d730215d51aa" name="Start" type="Start"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>63f0aaf5-553d-43fd-b40d-6b3196b7c075</onsuccess></stage><stage stageid="63f0aaf5-553d-43fd-b40d-6b3196b7c075" name="End" type="End"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e00cf6f-bf06-484e-bcc5-5c0ea5f2dcf1" name="Raise exception on any failure" type="Data"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e8d8821c-ea33-4e7e-a499-9095f71ab91f" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="360a869a-24fc-4d19-abbe-b1444dd28c58" name="Start" type="Start"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>f72ef338-2cee-4c45-8a9a-31011244644f</onsuccess></stage><stage stageid="94d641fc-9887-40ca-8919-8613e5fafda0" name="End" type="End"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af41ccc8-b3bd-4925-84ba-5df075402e08" name="Success" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd0e1bfa-b960-4e5e-b8e5-9a24adfd36e1" name="Error Message" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f72ef338-2cee-4c45-8a9a-31011244644f" name="Should Raise Exception?" type="Decision"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>f42fee03-c39b-416a-b55f-3d69a9ebe812</ontrue><onfalse>94d641fc-9887-40ca-8919-8613e5fafda0</onfalse></stage><stage stageid="f42fee03-c39b-416a-b55f-3d69a9ebe812" name="FAIL" type="Exception"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="90" y="-60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3764ae17-85d7-4ebb-99b5-502b95d7abd6</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="3dde4f26-00a8-4e1a-af12-b8a14178d89c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>aa67216d-b83f-4c14-9f71-5ec6df626c08</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="060a1fdb-6243-40f1-96e0-1c0b54382bfa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>e061382f-4149-485b-9668-f2fc0ca334bd</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="8db31208-966a-494a-9315-8a4add93c64c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>09677c01-2e36-4330-ae33-defa66a1e7b1</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="33ba9e06-b05b-4e51-baa6-7f6c9165c558" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>167ee595-8609-4b40-9cbb-70394613201b</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="d0021635-222d-46f1-93ad-a7435640cf9f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>82b919fe-64b2-4c2b-8173-5706f671c5ce</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="249acd28-3283-498f-aca8-76c67cb2295c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>576295b9-757e-4588-948e-34aac5140c29</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acf72cc7-cf73-466f-8c22-9fb633ed3c24" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>a7bae4fd-01fc-4447-8cf4-fbfd04353f72</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>2c8abe9a-1466-4283-999a-c5c7838a0e27</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="1e441202-3878-4eb6-b156-6f517be6de00" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>39862014-df78-414b-9ccd-5c0d392aa282</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7419fb71-5c79-4fb6-9e59-b9fbc1d63e45" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>0a76495e-bc0d-4cea-bae0-85da1e15c74f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7d20fad4-4b50-4841-94e9-5f38571de063" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>bcb21a17-13b7-404f-b11f-16d75385411f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="9219c3c4-effd-4dfc-9020-8dafd054ea8f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>1aab3a10-a813-470b-97c8-57938a0d0024</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="aed480e9-2938-4d36-b400-a3bd2580921a" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>709d1a16-f19e-4504-ae79-4a48d1e058c7</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage></process></object>
        <object id="bf926e5b-5a53-4629-bf02-31a58a120117" name="Utility - General" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - General" version="6.10.1.35171" bpversion="7.1.1.65484" narrative="General utility functions which don't fit into specific categories" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>1f3e584e-cb89-48ad-bd40-602968bdf4b9</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="177b593b-1118-4903-802c-d939d96ab07d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfff60e-8c0b-4cec-af1e-645eaa20d5cd" type="Normal" published="True"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d0540501-519a-45f1-b6f3-3af4af12e619" type="Normal" published="True"><name>Process Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd" type="Normal" published="True"><name>Window Exists</name><view><camerax>66</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="644da7bd-f4b1-44af-af67-fcf711356e70" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9c3f9d10-70e5-4ac1-b987-48f7bd33f56d</onsuccess></stage><stage stageid="9c3f9d10-70e5-4ac1-b987-48f7bd33f56d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3395d1a0-fcba-4944-9f09-7c218000fc1f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="baccb181-ead3-4cec-abfa-94bb52412e67" name="Clean Up" type="SubSheetInfo"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7ab68dda-e80a-4e91-b3ca-b9bbeecb0ca0" name="Start" type="Start"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd</onsuccess></stage><stage stageid="3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd" name="End" type="End"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="27709e12-6519-4529-8d76-45eb27236042" name="Process Exists" type="SubSheetInfo"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative>Checks to see if a process with the given name exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="541b75f3-1868-4536-9ed1-f0340805cf52" name="End" type="End"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the process exists" stage="Exists" /></outputs></stage><stage stageid="9e9ff0c4-2102-4dde-851b-568ecca9dd5c" name="Start" type="Start"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process" stage="Process Name" /></inputs><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess></stage><stage stageid="2987b0b2-bcfe-44df-8d60-3cf441c023bf" name="Process Name" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a65e5d31-3b82-44bd-85e8-42d30bf96cec" name="Process Exists" type="Code"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>541b75f3-1868-4536-9ed1-f0340805cf52</onsuccess><code><![CDATA[
try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(Process_Name)
 exists = true
 exit sub
next

catch e as exception
end try

exists = false]]></code></stage><stage stageid="d97aef89-802a-4cf4-b301-aaa31126177f" name="Exists" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4adb19bc-3b13-48e7-9f69-079649e29bdc" name="Window Exists" type="SubSheetInfo"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative>Checks to see if a window with the given title exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="071bf0aa-e2d9-416a-813b-a48a15296bf7" name="Start" type="Start"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" stage="Title" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" stage="Wildcard" /></inputs><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess></stage><stage stageid="94672b8d-1060-4a0a-91f9-0c96cd778618" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="a7f48e3c-d61a-43dc-8546-646ae6b6c63b" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="f04edf78-80f6-4e20-90ad-cea14b6a29ff" name="Window Exists" type="Code"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="flag" name="Wildcard" expr="[Wildcard]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7f48e3c-d61a-43dc-8546-646ae6b6c63b</onsuccess><code><![CDATA[try

if wildcard then
	title = title.replace("*", ".*")
	title = title.replace("?", "\w")
end if

exists = false
for each p as system.diagnostics.process in system.diagnostics.process.getprocesses()
	if wildcard then
		if system.text.regularexpressions.regex.ismatch(p.mainwindowtitle, title) then
			exists = true
			exit sub
		end if
	else
		if p.mainwindowtitle.tolower = title.tolower then
			exists = true
			exit sub
		end if
	end if
next

catch e as exception

end try
]]></code></stage><stage stageid="911b7620-4b36-4299-a8fe-8be896ab0176" name="Exists" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="588fd5df-2393-49f6-8dec-e6205287dedf" name="Title" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9df24660-8a75-41df-bf4c-69e3e18a14fa" name="Wildcard" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cd594031-696a-419e-a6c2-36688addfb0f" name="Titles CSV" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d281508-283c-4d63-81dd-ec07cb0c7697" name="Test" type="Calculation"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="135" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess><calculation expression="&quot;iexplore&quot;" stage="Process Name" /></stage><stage stageid="149317ed-25d5-4998-b8d2-9e8793a9cebe" name="Test" type="MultipleCalculation"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess><steps><calculation expression="&quot;* - Windows Internet Explorer&quot;" stage="Title" /><calculation expression="True" stage="Wildcard" /></steps></stage><stage stageid="645b3fce-eacd-4d15-be94-499bf9d05f19" name="Sleep" type="SubSheetInfo"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative>Pauses for a given time (in seconds).</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f8281856-0b5c-4d54-bcb5-dd2aea75e3a6" name="Start" type="Start"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" stage="Sleep Time (Seconds)" /></inputs><onsuccess>bdd3e5d7-002e-4c18-b363-b1474b2b1868</onsuccess></stage><stage stageid="64257152-cf77-42ee-814a-16c63b20d83b" name="End" type="End"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fed99019-3566-4cf6-a7ab-82e05808dee6" name="Sleep Time (Seconds)" type="Data"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd29fe1-ab40-4cc5-b409-a4e444b93f51" name="Time Out1" type="WaitEnd"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64257152-cf77-42ee-814a-16c63b20d83b</onsuccess><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid></stage><stage stageid="bdd3e5d7-002e-4c18-b363-b1474b2b1868" name="Wait1" type="WaitStart"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-30" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage></process></object>
        <object id="03dd0d93-9c01-4c88-a1a6-3f139c88c1a1" name="Utility - Screenshot" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Screenshot" version="1.0" bpversion="7.1.1.65484" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>96cc6e47-2ae4-452a-b9a3-07c7e0b712a3</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>-41</cameray><zoom version="2">1.125</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="842c3168-241f-4dc4-8b36-b454d1c59655" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17e62d86-0ced-4152-93d3-66488211e7ba" type="Normal" published="True"><name>GetScreenShot</name><view><camerax>-38</camerax><cameray>0</cameray><zoom version="2">1.125</zoom></view></subsheet><stage stageid="d06d2360-ca13-44e7-a3fa-5092ade3fc0a" name="Start" type="Start"><loginhibit /><display x="0" y="-210" /><onsuccess>aaf45e2e-c042-4ac1-95eb-a9ef44dba70d</onsuccess></stage><stage stageid="aaf45e2e-c042-4ac1-95eb-a9ef44dba70d" name="End" type="End"><loginhibit /><display x="0" y="-165" /></stage><stage stageid="aec6b47b-9fca-4da0-b844-52e1d9b16bc5" name="Stage1" type="ProcessInfo"><display x="-180" y="-165" w="210" h="120" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>Microsoft.VisualBasic</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[
Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function]]></code></stage><stage stageid="3bca94e1-a2a9-43f9-9731-e5aaed766e9d" name="Clean Up" type="SubSheetInfo"><subsheetid>842c3168-241f-4dc4-8b36-b454d1c59655</subsheetid><display x="-180" y="-105" w="210" h="90" /></stage><stage stageid="c74c7fe8-ef0d-4ccb-83ff-b95ebae08b80" name="Start" type="Start"><subsheetid>842c3168-241f-4dc4-8b36-b454d1c59655</subsheetid><loginhibit /><display x="0" y="-135" /><onsuccess>c91a7ad2-3cd2-42d3-b946-239f9e2544fe</onsuccess></stage><stage stageid="c91a7ad2-3cd2-42d3-b946-239f9e2544fe" name="End" type="End"><subsheetid>842c3168-241f-4dc4-8b36-b454d1c59655</subsheetid><loginhibit /><display x="0" y="-90" /></stage><stage stageid="762937f7-46d6-468c-9443-3f2f97c4a7da" name="GetScreenShot" type="SubSheetInfo"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><narrative>Save a ScreenShot in a jpeg file</narrative><display x="-255" y="-120" w="300" h="90" /></stage><stage stageid="b2b588a9-be86-4de8-b8b3-3452c5da7b7a" name="Start" type="Start"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><preconditions><condition narrative="Path" /></preconditions><display x="0" y="-135" /><inputs><input type="text" name="Save Imagem Path" narrative="Full path with name (without extension)" stage="Save Imagem Path" /></inputs><onsuccess>0e8c52fc-93c2-4b23-94ba-a7188aacf1e5</onsuccess></stage><stage stageid="5c661950-ee62-49d2-8b6a-d60da56d6e7c" name="End" type="End"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="0" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="message" stage="message" /></outputs></stage><stage stageid="695cffd5-5e9b-44d1-894f-f4c114b66b17" name="Note1" type="Note"><subsheetid>842c3168-241f-4dc4-8b36-b454d1c59655</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="45" w="210" h="180" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="589484e1-4357-4980-bda9-b566b06fcf10" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="-15" w="210" h="150" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="0e8c52fc-93c2-4b23-94ba-a7188aacf1e5" name="Capture Screenshot" type="Code"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><inputs><input type="text" name="Path" expr="[Save Imagem Path]" /></inputs><onsuccess>dba15bfe-026b-4cd4-b25c-c495a2597fe0</onsuccess><code><![CDATA[Dim area As Rectangle
Dim capture As System.Drawing.Bitmap
Dim graph As Graphics
Dim FullPath As string


area = My.Computer.Screen.Bounds
capture = New System.Drawing.Bitmap(area.Width, area.Height, System.Drawing.Imaging.PixelFormat.Format32bppArgb)
graph = Graphics.FromImage(capture)
graph.CopyFromScreen(area.X, area.Y, 0, 0, area.Size, CopyPixelOperation.SourceCopy)
FullPath = Path & ".jpeg"
capture.Save (FullPath, System.Drawing.Imaging.ImageFormat.jpeg)
]]></code></stage><stage stageid="840a042e-c311-456d-a277-4d4e541f6e8e" name="Save Imagem Path" type="Data"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="-195" y="-15" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def9e34e-9c79-4880-bf5a-af367d1de49c" name="Success" type="Data"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="-195" y="60" w="180" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dba15bfe-026b-4cd4-b25c-c495a2597fe0" name="Set Success" type="Calculation"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="0" y="-15" w="120" h="30" /><onsuccess>5c661950-ee62-49d2-8b6a-d60da56d6e7c</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="44743b29-f9f6-4971-ba4d-600b003e90f7" name="Recover" type="Recover"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="150" y="-75" /><onsuccess>d814f865-88d3-4bad-884c-ab03d633c512</onsuccess></stage><stage stageid="5c6ef00b-a793-4587-a403-bf5af6c57df5" name="Reset Success" type="Calculation"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="150" y="75" w="120" h="30" /><onsuccess>5c661950-ee62-49d2-8b6a-d60da56d6e7c</onsuccess><calculation expression="False" stage="Success" /></stage><stage stageid="e4d38936-10b2-48a0-88aa-d8668a540b52" name="Resume" type="Resume"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="150" y="30" /><onsuccess>5c6ef00b-a793-4587-a403-bf5af6c57df5</onsuccess></stage><stage stageid="138e98b1-61d8-442c-b4b4-5ec5066764ba" name="Screenshot Exception Handler" type="Block"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="-75" y="-105" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="08bd19ae-859c-4929-b87e-cde1a3d761c2" name="Input Variables" type="Block"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="-285" y="-60" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="008000" /></stage><stage stageid="1aab81ac-08e8-4729-813b-16a8b48e35ee" name="Output Variables" type="Block"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="-285" y="15" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="d814f865-88d3-4bad-884c-ab03d633c512" name="Get Exception Details" type="Calculation"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><loginhibit /><display x="150" y="-15" w="120" h="30" /><onsuccess>e4d38936-10b2-48a0-88aa-d8668a540b52</onsuccess><calculation expression="ExceptionDetail()" stage="message" /></stage><stage stageid="20f5d072-ac75-406d-8f97-baf06db47525" name="message" type="Data"><subsheetid>17e62d86-0ced-4152-93d3-66488211e7ba</subsheetid><display x="-195" y="90" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="1d37202e-d184-45b3-be7d-9c7b8d28994b" name="Utility - Set Screen Resolution" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Set Screen Resolution" version="1.0" bpversion="7.1.1.65484" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>52907b69-5802-4b5e-a79d-ab5d030276e5</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-58</camerax><cameray>14</cameray><zoom version="2">1.125</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="8a0119b1-c330-4faf-9aa6-dadc02e6777f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f2fe7ed2-1bbc-4731-87b8-b2c8119368d5" type="Normal" published="True"><name>Set Screen Resolution</name><view><camerax>0</camerax><cameray>110</cameray><zoom version="2">1.125</zoom></view></subsheet><stage stageid="50239e26-316d-4030-a079-74b2d4d1afb5" name="Start" type="Start"><loginhibit /><display x="45" y="-75" /><onsuccess>32ff32a0-d17f-4ab7-894b-bc150b18afcf</onsuccess></stage><stage stageid="32ff32a0-d17f-4ab7-894b-bc150b18afcf" name="End" type="End"><loginhibit /><display x="45" y="-15" /></stage><stage stageid="4c4802aa-5f8d-428b-955f-bcf6ba69f4b9" name="Stage1" type="ProcessInfo"><display x="-135" y="-45" w="210" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.dll</reference><reference>System.Windows.Forms.dll</reference><reference>mscorlib.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Runtime.InteropServices</import><import>System.Windows.Forms</import><import>System.Data</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[[DllImport("user32.dll")]
public static extern bool EnumDisplaySettings(
	  string deviceName, int modeNum, ref DEVMODE devMode);
const int ENUM_CURRENT_SETTINGS = -1;

const int ENUM_REGISTRY_SETTINGS = -2;

[StructLayout(LayoutKind.Sequential)]
public struct DEVMODE
{

	private const int CCHDEVICENAME = 0x20;
	private const int CCHFORMNAME = 0x20;
	[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 0x20)]
	public string dmDeviceName;
	public short dmSpecVersion;
	public short dmDriverVersion;
	public short dmSize;
	public short dmDriverExtra;
	public int dmFields;
	public int dmPositionX;
	public int dmPositionY;
	public ScreenOrientation dmDisplayOrientation;
	public int dmDisplayFixedOutput;
	public short dmColor;
	public short dmDuplex;
	public short dmYResolution;
	public short dmTTOption;
	public short dmCollate;
	[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 0x20)]
	public string dmFormName;
	public short dmLogPixels;
	public int dmBitsPerPel;
	public int dmPelsWidth;
	public int dmPelsHeight;
	public int dmDisplayFlags;
	public int dmDisplayFrequency;
	public int dmICMMethod;
	public int dmICMIntent;
	public int dmMediaType;
	public int dmDitherType;
	public int dmReserved1;
	public int dmReserved2;
	public int dmPanningWidth;
	public int dmPanningHeight;
}

class User32
{
	[DllImport("user32.dll")]
	public static extern int EnumDisplaySettings (
	  string deviceName, int modeNum, ref DEVMODE devMode );         
	[DllImport("user32.dll")]
	public static extern int ChangeDisplaySettings(
		  ref DEVMODE devMode, int flags); 

	public const int ENUM_CURRENT_SETTINGS = -1;
	public const int CDS_UPDATEREGISTRY = 0x01;
	public const int CDS_TEST = 0x02;
	public const int DISP_CHANGE_SUCCESSFUL = 0;
	public const int DISP_CHANGE_RESTART = 1;
	public const int DISP_CHANGE_FAILED = -1;
}

class Locale
{
	[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
	public static extern bool SystemParametersInfo(
		uint uiAction, uint uiParam, ref uint pvParam, uint fWinIni );
	[DllImport("kernel32.dll")]
	public static extern uint GetLastError();
	
	public const int SPI_SETDEFAULTINPUTLANG = 0x005A;
	public const int SPI_GETDEFAULTINPUTLANG = 0x0059;
	public const int SPIF_SENDCHANGE = 0x02;
	
	public const uint locale_daDK   = 0x00000406 ; // Danish
	public const uint locale_svSE   = 0x041D ; // Swedish
	public const uint locale_nbNO   = 0x0414 ; // Norwegian Bokmål
	public const uint locale_nnNO   = 0x0814 ; // New Norwegian
	public const uint locale_enUS   = 0x0409 ; // American English
	public const uint locale_enGB   = 0x0809 ; // Great Britain English
	
}

class Printer
{
	[DllImport("winspool.drv", CharSet=CharSet.Auto, SetLastError=true)]
	public static extern bool SetDefaultPrinter(string Name);
}]]></code></stage><stage stageid="413dcebb-a210-44fa-8e18-f5d88431cf37" name="Clean Up" type="SubSheetInfo"><subsheetid>8a0119b1-c330-4faf-9aa6-dadc02e6777f</subsheetid><display x="-75" y="-60" w="180" h="90" /></stage><stage stageid="254f84eb-40bd-4747-b20b-497c8a352f54" name="Start" type="Start"><subsheetid>8a0119b1-c330-4faf-9aa6-dadc02e6777f</subsheetid><loginhibit /><display x="90" y="-90" /><onsuccess>db20af2a-e7da-493a-9495-b7c7055fc2f5</onsuccess></stage><stage stageid="db20af2a-e7da-493a-9495-b7c7055fc2f5" name="End" type="End"><subsheetid>8a0119b1-c330-4faf-9aa6-dadc02e6777f</subsheetid><loginhibit /><display x="90" y="-45" /></stage><stage stageid="0ef37e52-bf4b-4648-ba5c-0882ed48c508" name="new" type="Note"><subsheetid>8a0119b1-c330-4faf-9aa6-dadc02e6777f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-75" y="90" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="bfd88575-a0e1-4332-bc97-c348e7c41676" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-135" y="90" w="210" h="150" /><font family="Segoe UI" size="10" style="Regular" color="808080" /></stage><stage stageid="6360adab-ab29-4ca4-98a6-fac4de1018b6" name="Set Screen Resolution" type="SubSheetInfo"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><narrative>Used reference:
http://www.codeproject.com/Articles/6810/Dynamic-Screen-Resolution</narrative><display x="-315" y="-60" w="330" h="90" /></stage><stage stageid="624aa15c-4258-440f-b54b-dc6db327763c" name="Start" type="Start"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="-30" y="-90" /><inputs><input type="number" name="Width" narrative="The desired width of the screen in pixels" stage="width" /><input type="number" name="Height" narrative="The desired height of the screen in pixels" stage="height" /></inputs><onsuccess>d1f44fde-ffd7-4ab8-a266-b6024286d03c</onsuccess></stage><stage stageid="14163cea-76ab-4939-805a-d140ebb4deab" name="End" type="End"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="-30" y="210" /><outputs><output type="text" name="message" stage="message" /><output type="flag" name="success" stage="success" /></outputs></stage><stage stageid="d1f44fde-ffd7-4ab8-a266-b6024286d03c" name="SetResolution" type="Code"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><inputs><input type="number" name="width" expr="[width]" /><input type="number" name="height" expr="[height]" /></inputs><outputs><output type="flag" name="success" stage="success" /><output type="text" name="message" stage="message" /></outputs><onsuccess>f0bb5a3f-14b4-49f1-a6f2-25a1d40cf917</onsuccess><code><![CDATA[int iWidth = Decimal.ToInt32(width);
int iHeight = Decimal.ToInt32(height);

DEVMODE dm = new DEVMODE();
dm.dmDeviceName = new String (new char[32]);
dm.dmFormName = new String (new char[32]);
dm.dmSize = (short)Marshal.SizeOf (dm); 

success = false;
message = "";

if (0 != User32.EnumDisplaySettings (null, 
       User32.ENUM_CURRENT_SETTINGS, ref dm))
{
	dm.dmPelsWidth = iWidth;
	dm.dmPelsHeight = iHeight; 
	 
	int iRet = User32.ChangeDisplaySettings (
	  ref dm, User32.CDS_TEST);
	
	if (iRet == User32.DISP_CHANGE_FAILED) {
		success = false;
		message = "Could not change resolution to: " + iWidth + " x " + iHeight;
	}
	else {
		iRet = User32.ChangeDisplaySettings (
			ref dm, User32.CDS_UPDATEREGISTRY);
		
		switch (iRet) {
			case User32.DISP_CHANGE_SUCCESSFUL:
			{
				success = true;
				break;
			}
			case User32.DISP_CHANGE_RESTART:
			{
				success = false;
				message = "You need to reboot you machine for the change to happen";
				break;
			}
			default:
			{
				success = false;
				message = "Could not change resolution with code: " + iRet.ToString();
				break;
			}
		}
	}
}]]></code></stage><stage stageid="edc942d1-8ed6-494f-bfcb-7e921ee9fdea" name="width" type="Data"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="-240" y="180" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c059dc0-0491-47ef-a481-aebbff5c3cbf" name="height" type="Data"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="-240" y="150" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7326b66-ff5a-4057-abf9-ad4a60933c2f" name="success" type="Data"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="-240" y="360" w="180" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2e7c5a9-0ed1-4307-b4bc-26a4da1b1565" name="message" type="Data"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="-240" y="330" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0bb5a3f-14b4-49f1-a6f2-25a1d40cf917" name="Success?" type="Decision"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="-30" y="15" w="120" h="30" /><decision expression="[success]" /><ontrue>14163cea-76ab-4939-805a-d140ebb4deab</ontrue><onfalse>39d838d8-1663-4813-af48-06bf372592d3</onfalse></stage><stage stageid="39d838d8-1663-4813-af48-06bf372592d3" name="SE:OSSSSS01" type="Exception"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="120" y="15" w="120" h="30" /><exception type="System Excetion" detail="&quot;#OSSSSS01: &quot; &amp; [message]" /></stage><stage stageid="abd33763-1daa-4358-b24b-195a9fc8e8b2" name="Input Variables" type="Block"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="105" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="ecbaa817-2afa-41b0-947d-2f4b13dba238" name="Exception Handler" type="Block"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="-60" w="300" h="240" /><font family="Segoe UI" size="10" style="Regular" color="99CCFF" /></stage><stage stageid="bab052cd-852c-400a-b26b-54a55792c017" name="Recover" type="Recover"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="120" y="150" /><onsuccess>c364604a-dd33-4b94-9257-d754c5801699</onsuccess></stage><stage stageid="af82bfe6-04ed-467d-a534-c89a2309c601" name="Resume" type="Resume"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="285" y="60" /><onsuccess>6de6b0d2-1395-4cea-b480-56161da102a9</onsuccess></stage><stage stageid="0a8da2a2-9f1e-4500-9471-e0d7e10047fe" name="Settings Variables" type="Block"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="-330" y="0" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="333333" /></stage><stage stageid="feae82ce-6f60-4e73-a855-579ffda2ab63" name="maxRetry" type="Data"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="-240" y="45" w="180" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="b1dae765-d175-4294-b3de-ede4e73e08a3" name="timeToWait" type="Data"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="-240" y="75" w="180" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="c364604a-dd33-4b94-9257-d754c5801699" name="Retry?" type="Decision"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="285" y="150" w="120" h="30" /><decision expression="[retryCounter] &lt; [maxRetry]" /><ontrue>8fcc4364-8bec-43a7-82c6-50768b0e09fa</ontrue><onfalse>fd98d0fd-e006-4c56-ae6e-eeb705670bb4</onfalse></stage><stage stageid="01f9e70a-5f5a-4ab4-a2e5-364101c4709e" name="retryCounter" type="Data"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="-240" y="255" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3a03e21c-e0c7-41d7-8416-632cd99f40ca" name="Local Variables" type="Block"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="-330" y="210" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="8fcc4364-8bec-43a7-82c6-50768b0e09fa" name="Increment retryCount" type="Calculation"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="285" y="105" w="120" h="30" /><onsuccess>af82bfe6-04ed-467d-a534-c89a2309c601</onsuccess><calculation expression="[retryCounter]+1" stage="retryCounter" /></stage><stage stageid="fd98d0fd-e006-4c56-ae6e-eeb705670bb4" name="Re-Throw" type="Exception"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><display x="435" y="150" w="120" h="30" /><exception type="" detail="&quot;#OSSSSS01: &quot; &amp; [message]" usecurrent="yes" /></stage><stage stageid="7e4e6e9d-53c8-4a7c-a8bb-c0518919a250" name="Time Out - S" type="WaitEnd"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="285" y="-30" w="30" h="30" /><onsuccess>d1f44fde-ffd7-4ab8-a266-b6024286d03c</onsuccess><groupid>ca0bdfb9-ebf4-4140-84bd-c8be321c3062</groupid></stage><stage stageid="6de6b0d2-1395-4cea-b480-56161da102a9" name="S" type="WaitStart"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit /><display x="285" y="15" w="30" h="30" /><groupid>ca0bdfb9-ebf4-4140-84bd-c8be321c3062</groupid><choices /><timeout>[timeToWait]</timeout></stage><stage stageid="f96ba242-83f5-47b3-a368-3a97aa90ab73" name="Output Variables" type="Block"><subsheetid>f2fe7ed2-1bbc-4731-87b8-b2c8119368d5</subsheetid><loginhibit onsuccess="true" /><display x="-330" y="285" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage></process></object>
        <environment-variable id="ENV_GENERAL_Reports" name="ENV_GENERAL_Reports" type="text" value="003 - Reports" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Name of the Reports folder used by the automation.</description>
        </environment-variable>
        <environment-variable id="ENV_GENERAL_RootPath" name="ENV_GENERAL_RootPath" type="text" value="C:\Users\$value1$\OneDrive - EY\Desktop\Example Folder\" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Path to the automation folder.</description>
        </environment-variable>
        <environment-variable id="ENV_GENERAL_Screenshots" name="ENV_GENERAL_Screenshots" type="text" value="004 - Screenshots" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Name of the Screenshot folder used by the automation.</description>
        </environment-variable>
        <environment-variable id="ENV_GENERAL_SupportFiles" name="ENV_GENERAL_SupportFiles" type="text" value="001 - Support Files" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Name of the Support Files folder used by the automation.</description>
        </environment-variable>
        <environment-variable id="ENV_GENERAL_WorkFolder" name="ENV_GENERAL_WorkFolder" type="text" value="002 - Work Folder" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Name of the Work Folder folder used by the automation.</description>
        </environment-variable>
        <environment-variable id="ENV_PROCESSID_application1_CredentialName" name="ENV_PROCESSID_application1_CredentialName" type="text" value="CRE_PROCESSID_APPLICATION1" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Credentials used by the automation to log into application 1</description>
        </environment-variable>
        <environment-variable id="ENV_PROCESSID_application2_CredentialName" name="ENV_PROCESSID_application2_CredentialName" type="text" value="CRE_PROCESSID_APPLICATION2" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Credentials used by the automation to log in to application 2</description>
        </environment-variable>
        <environment-variable id="ENV_PROCESSID_AutomationSubjectEmail" name="ENV_PROCESSID_AutomationSubjectEmail" type="text" value="[RPA] - PROCESSID - PROCESS NAME - $value1$" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Subject of the e-mail used to communicate with the business and sustain teams.</description>
        </environment-variable>
        <environment-variable id="ENV_PROCESSID_DataSource" name="ENV_PROCESSID_DataSource" type="text" value="C:\Users\$value1$\OneDrive - EY\Desktop\Example Folder\001 - Support Files\DataSource.xlsx" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>File containing the registers to be manipulated by the automation (Queue's Datasource).</description>
        </environment-variable>
        <environment-variable id="ENV_PROCESSID_EmailBusinessTeam" name="ENV_PROCESSID_EmailBusinessTeam" type="text" value="lucas.rodriguesoliveira@br.ey.com;lucas.rodriguesoliveira@br.ey.com" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Group of e-mails from the business team that must receive the complete report.</description>
        </environment-variable>
        <environment-variable id="ENV_PROCESSID_EmailInital" name="ENV_PROCESSID_EmailInital" type="text" value="lucas.rodriguesoliveira@br.ey.com;lucas.rodriguesoliveira@br.ey.com" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Group of e-mails that must receive the initial automation email.</description>
        </environment-variable>
        <environment-variable id="ENV_PROCESSID_maximumQueueAttempts" name="ENV_PROCESSID_maximumQueueAttempts" type="number" value="3" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Maximum number of automation attempts.</description>
        </environment-variable>
        <process-group id="69e7465e-199a-4cd9-8c02-4a27850f1a23" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="03b66f32-1af6-40aa-a446-ca6c9cfe5b62" />
            </members>
        </process-group>
        <object-group id="11292cc7-bab6-4d0b-9acc-d1cd12de44ae" name="Assets EY" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="b09d5717-672d-4f9d-81de-b724d7075436" />
                <object id="248a1e36-2b57-4752-b9c9-2d742b63c586" />
                <object id="844ee3cd-2a5c-4056-97b1-a9451b3d7ba2" />
                <object id="e0c26d57-55ec-4f9f-8838-cb263f6e9121" />
            </members>
        </object-group>
        <object-group id="d258c1f4-a9df-4e64-8103-9cb917781305" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" />
                <object id="c28cdbe1-9417-4ded-80c1-19fc3f6ab7f0" />
                <object id="6f9680f1-616c-4884-b58c-42ed51446377" />
                <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" />
                <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" />
                <object id="bf926e5b-5a53-4629-bf02-31a58a120117" />
                <object id="03dd0d93-9c01-4c88-a1a6-3f139c88c1a1" />
                <object id="1d37202e-d184-45b3-be7d-9c7b8d28994b" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>